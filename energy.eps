%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: figures.pdf
%%Creator: Adobe Acrobat 9.0.0
%%For: Rongzhen
%%CreationDate: 19/10/2014, 12:56:13
%%BoundingBox: 0 0 684 450
%%HiResBoundingBox: 0 0 684 450
%%CropBox: 0 0 684 450
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 860 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.1-c041 52.342996, 2008/05/07-20:48:00        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   dc:format="application/pdf"
   xmp:CreateDate="2014-10-19T12:55:02+02:00"
   xmp:CreatorTool="Microsoft® PowerPoint® 2010"
   xmp:ModifyDate="2014-10-19T12:55:02+02:00"
   pdf:Producer="Microsoft® PowerPoint® 2010">
   <dc:creator>
    <rdf:Seq>
     <rdf:li>Rongzhen</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">PowerPoint Presentation</rdf:li>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 11 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -450 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 450 li
684 450 li
684 0 li
cp
clp
[1 0 0 1 -27 0 ]ct
0 495 mo
720 495 li
720 -45 li
0 -45 li
0 495 li
false sop
/0 
<<
/Name (Black)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
0 sep
ef
gsave
28.0001 444.073 mo
691.002 444.073 li
691.002 73.0684 li
28.0001 73.0684 li
28.0001 444.073 li
clp
gsave
28.0001 73.0684 mo
28.0001 443.954 li
691.612 443.954 li
691.612 73.0684 li
28.0001 73.0684 li
eclp
141.631 154.126 mo
691.162 154.126 li
691.162 154.425 li
141.631 154.425 li
141.631 154.126 li
1 /0 /CSD get_res sepcs
1 sep
f
grestore
gsave
28.0001 73.0684 mo
28.0001 443.954 li
691.612 443.954 li
691.612 73.0684 li
28.0001 73.0684 li
eclp
27.625 180.789 mo
691.162 180.789 li
691.162 181.088 li
27.625 181.088 li
27.625 180.789 li
27.55 180.789 li
27.625 180.789 li
1 /0 /CSD get_res sepcs
1 sep
f
grestore
gsave
28.0001 73.0684 mo
28.0001 443.954 li
691.612 443.954 li
691.612 73.0684 li
28.0001 73.0684 li
eclp
141.781 99.2122 mo
691.162 99.2122 li
691.162 99.5117 li
141.781 99.5117 li
141.781 99.212 li
141.781 99.2122 li
1 /0 /CSD get_res sepcs
1 sep
f
grestore
gsave
28.0001 73.0684 mo
28.0001 443.954 li
691.612 443.954 li
691.612 73.0684 li
28.0001 73.0684 li
eclp
141.631 126.255 mo
691.162 126.255 li
691.162 126.554 li
141.631 126.554 li
141.631 126.254 li
141.631 126.255 li
1 /0 /CSD get_res sepcs
1 sep
f
grestore
gsave
28.0001 73.0684 mo
28.0001 443.954 li
691.612 443.954 li
691.612 73.0684 li
28.0001 73.0684 li
eclp
28.0001 207.681 mo
691.162 207.681 li
691.162 207.981 li
27.9999 207.981 li
27.9999 207.681 li
28.0001 207.681 li
1 /0 /CSD get_res sepcs
1 sep
f
grestore
gsave
28.0001 73.0684 mo
28.0001 443.954 li
691.612 443.954 li
691.612 73.0684 li
28.0001 73.0684 li
eclp
37 234.654 mo
691.162 234.654 li
691.162 234.954 li
37 234.954 li
37 234.654 li
1 /0 /CSD get_res sepcs
1 sep
f
grestore
gsave
28.0001 73.0684 mo
28.0001 443.954 li
691.612 443.954 li
691.612 73.0684 li
28.0001 73.0684 li
eclp
37 261.467 mo
691.162 261.467 li
691.162 261.766 li
37 261.766 li
37 261.467 li
1 /0 /CSD get_res sepcs
1 sep
f
grestore
gsave
28.0001 73.0684 mo
28.0001 443.954 li
691.612 443.954 li
691.612 73.0684 li
28.0001 73.0684 li
eclp
37 288.739 mo
691.162 288.739 li
691.162 289.038 li
37 289.038 li
37 288.739 li
1 /0 /CSD get_res sepcs
1 sep
f
grestore
gsave
28.0001 73.0684 mo
28.0001 443.954 li
691.612 443.954 li
691.612 73.0684 li
28.0001 73.0684 li
eclp
37 315.262 mo
691.162 315.262 li
691.162 315.562 li
37 315.562 li
37 315.262 li
37 315.262 li
1 /0 /CSD get_res sepcs
1 sep
f
grestore
gsave
28.0001 73.0684 mo
28.0001 443.954 li
691.612 443.954 li
691.612 73.0684 li
28.0001 73.0684 li
eclp
37 342.904 mo
691.162 342.904 li
691.162 343.203 li
37 343.203 li
37 342.904 li
1 /0 /CSD get_res sepcs
1 sep
f
grestore
gsave
28.0001 73.0684 mo
28.0001 443.954 li
691.612 443.954 li
691.612 73.0684 li
28.0001 73.0684 li
eclp
37 369.867 mo
691.162 369.867 li
691.162 370.167 li
37 370.167 li
37 369.867 li
1 /0 /CSD get_res sepcs
1 sep
f
grestore
gsave
28.0001 73.0684 mo
28.0001 443.954 li
691.612 443.954 li
691.612 73.0684 li
28.0001 73.0684 li
eclp
37 396.536 mo
691.162 396.536 li
691.162 396.836 li
37 396.836 li
37 396.536 li
1 /0 /CSD get_res sepcs
1 sep
f
grestore
688.162 429.272 mo
688.162 429.272 li
689.582 429.272 689.732 431.295 689.732 432.268 cv
689.732 433.317 689.582 435.265 688.162 435.265 cv
686.663 435.265 686.583 433.317 686.583 432.268 cv
686.583 431.295 686.663 429.272 688.162 429.272 cv
cp
688.162 428.672 mo
688.162 428.672 li
686.283 428.672 685.833 430.545 685.833 432.268 cv
685.833 434.066 686.283 435.864 688.162 435.864 cv
690.032 435.864 690.412 434.066 690.412 432.268 cv
690.412 430.545 690.032 428.672 688.162 428.672 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
591.188 430.62 mo
591.188 430.62 li
591.788 430.32 592.308 430.021 592.758 429.571 cv
592.758 435.714 li
593.438 435.714 li
593.438 428.822 li
592.758 428.822 li
592.308 429.272 591.788 429.721 591.188 429.946 cv
591.188 430.62 li
cp
f
596.737 430.62 mo
596.737 430.62 li
597.337 430.32 597.857 430.021 598.307 429.571 cv
598.307 435.714 li
598.987 435.714 li
598.987 428.822 li
598.387 428.822 li
597.937 429.272 597.337 429.721 596.737 429.946 cv
596.737 430.62 li
cp
f
615.634 430.62 mo
615.634 430.62 li
616.234 430.32 616.764 430.021 617.214 429.571 cv
617.214 435.714 li
617.884 435.714 li
617.884 428.822 li
617.214 428.822 li
616.764 429.272 616.234 429.721 615.634 429.946 cv
615.634 430.62 li
cp
f
624.863 435.714 mo
624.863 435.714 li
624.863 435.115 li
621.333 435.115 li
622.383 434.141 624.783 432.119 624.783 430.47 cv
624.783 429.272 623.883 428.672 622.763 428.672 cv
621.563 428.672 620.664 429.496 620.664 430.695 cv
621.333 430.695 li
621.333 429.871 621.863 429.272 622.763 429.272 cv
623.433 429.272 624.113 429.721 624.113 430.545 cv
624.113 431.744 621.483 434.291 620.583 435.04 cv
620.583 435.714 li
624.863 435.714 li
cp
f
640.09 430.62 mo
640.09 430.62 li
640.69 430.32 641.21 430.021 641.66 429.571 cv
641.66 435.714 li
642.34 435.714 li
642.34 428.822 li
641.66 428.822 li
641.21 429.272 640.69 429.721 640.09 429.946 cv
640.09 430.62 li
cp
f
646.759 432.493 mo
646.759 432.493 li
647.739 432.343 648.789 432.718 648.789 433.841 cv
648.789 434.815 648.039 435.265 647.059 435.265 cv
646.309 435.265 645.559 434.815 645.559 433.916 cv
644.81 433.916 li
644.89 435.265 645.859 435.864 647.139 435.864 cv
648.259 435.864 649.459 435.19 649.459 433.916 cv
649.459 432.942 648.859 432.343 647.959 432.194 cv
647.959 432.119 li
648.709 431.969 649.389 431.445 649.389 430.62 cv
649.389 429.272 648.189 428.672 647.059 428.672 cv
645.939 428.672 644.96 429.421 644.96 430.545 cv
645.639 430.545 li
645.709 429.796 646.239 429.272 647.139 429.272 cv
647.959 429.272 648.639 429.721 648.639 430.545 cv
648.639 431.594 647.659 431.969 646.759 431.819 cv
646.759 432.493 li
cp
f
566.732 430.62 mo
566.732 430.62 li
567.332 430.32 567.862 430.021 568.312 429.571 cv
568.312 435.714 li
568.982 435.714 li
568.982 428.822 li
568.312 428.822 li
567.862 429.272 567.332 429.721 566.732 429.946 cv
566.732 430.62 li
cp
f
573.931 429.272 mo
573.931 429.272 li
575.361 429.272 575.511 431.295 575.511 432.268 cv
575.511 433.317 575.361 435.265 573.931 435.265 cv
572.431 435.265 572.361 433.317 572.361 432.268 cv
572.361 431.295 572.431 429.272 573.931 429.272 cv
cp
573.931 428.672 mo
573.931 428.672 li
572.061 428.672 571.611 430.545 571.611 432.268 cv
571.611 434.066 572.061 435.864 573.931 435.864 cv
575.811 435.864 576.181 434.066 576.181 432.268 cv
576.181 430.545 575.811 428.672 573.931 428.672 cv
cp
f
543.936 429.272 mo
543.936 429.272 li
545.356 429.272 545.506 431.295 545.506 432.268 cv
545.506 433.317 545.356 435.265 543.936 435.265 cv
542.436 435.265 542.286 433.317 542.286 432.268 cv
542.286 431.295 542.436 429.272 543.936 429.272 cv
cp
543.936 428.672 mo
543.936 428.672 li
542.056 428.672 541.606 430.545 541.606 432.268 cv
541.606 434.066 542.056 435.864 543.936 435.864 cv
545.806 435.864 546.186 434.066 546.186 432.268 cv
546.186 430.545 545.806 428.672 543.936 428.672 cv
cp
f
549.335 429.272 mo
549.335 429.272 li
550.305 429.272 550.985 429.946 550.985 430.92 cv
550.985 431.894 550.305 432.568 549.335 432.568 cv
548.435 432.568 547.835 431.894 547.835 430.995 cv
547.835 430.021 548.355 429.272 549.335 429.272 cv
cp
547.155 434.066 mo
547.155 434.066 li
547.235 435.115 547.985 435.864 549.185 435.864 cv
551.355 435.864 551.805 433.991 551.805 432.119 cv
551.805 430.395 551.355 428.672 549.335 428.672 cv
547.985 428.672 547.155 429.646 547.155 430.92 cv
547.155 432.194 547.985 433.092 549.255 433.092 cv
550.085 433.092 550.755 432.718 551.055 432.044 cv
551.135 432.044 li
551.135 433.092 550.905 435.265 549.335 435.265 cv
548.505 435.265 547.905 434.965 547.835 434.066 cv
547.155 434.066 li
cp
f
519.48 429.272 mo
519.48 429.272 li
520.91 429.272 521.06 431.295 521.06 432.268 cv
521.06 433.317 520.91 435.265 519.48 435.265 cv
517.98 435.265 517.83 433.317 517.83 432.268 cv
517.83 431.295 517.98 429.272 519.48 429.272 cv
cp
519.48 428.672 mo
519.48 428.672 li
517.61 428.672 517.16 430.545 517.16 432.268 cv
517.16 434.066 517.61 435.864 519.48 435.864 cv
521.36 435.864 521.73 434.066 521.73 432.268 cv
521.73 430.545 521.36 428.672 519.48 428.672 cv
cp
f
524.209 432.194 mo
524.209 432.194 li
523.309 432.343 522.709 433.017 522.709 433.841 cv
522.709 435.265 523.829 435.864 525.029 435.864 cv
526.159 435.864 527.359 435.265 527.359 433.841 cv
527.359 432.942 526.839 432.418 525.859 432.194 cv
525.859 432.119 li
526.689 431.969 527.289 431.37 527.289 430.545 cv
527.289 429.272 526.159 428.672 525.029 428.672 cv
523.909 428.672 522.779 429.272 522.779 430.545 cv
522.779 431.37 523.379 432.044 524.209 432.119 cv
524.209 432.194 li
cp
523.459 430.545 mo
523.459 430.545 li
523.459 429.646 524.279 429.272 525.029 429.272 cv
525.789 429.272 526.609 429.646 526.609 430.545 cv
526.609 431.445 525.939 431.819 525.029 431.819 cv
524.129 431.819 523.459 431.445 523.459 430.545 cv
cp
523.379 433.841 mo
523.379 433.841 li
523.379 432.868 524.129 432.418 525.029 432.418 cv
525.859 432.418 526.689 432.868 526.689 433.841 cv
526.689 434.89 525.859 435.265 525.029 435.265 cv
524.129 435.265 523.379 434.89 523.379 433.841 cv
cp
f
495.034 429.272 mo
495.034 429.272 li
496.454 429.272 496.604 431.295 496.604 432.268 cv
496.604 433.317 496.454 435.265 495.034 435.265 cv
493.534 435.265 493.384 433.317 493.384 432.268 cv
493.384 431.295 493.534 429.272 495.034 429.272 cv
cp
495.034 428.672 mo
495.034 428.672 li
493.154 428.672 492.704 430.545 492.704 432.268 cv
492.704 434.066 493.154 435.864 495.034 435.864 cv
496.904 435.864 497.284 434.066 497.284 432.268 cv
497.284 430.545 496.904 428.672 495.034 428.672 cv
cp
f
502.683 428.822 mo
502.683 428.822 li
498.333 428.822 li
498.333 429.421 li
502.013 429.421 li
499.233 435.714 li
500.063 435.714 li
502.683 429.421 li
502.683 428.822 li
cp
f
470.588 429.272 mo
470.588 429.272 li
472.008 429.272 472.158 431.295 472.158 432.268 cv
472.158 433.317 472.008 435.265 470.588 435.265 cv
469.078 435.265 468.928 433.317 468.928 432.268 cv
468.928 431.295 469.078 429.272 470.588 429.272 cv
cp
470.588 428.672 mo
470.588 428.672 li
468.708 428.672 468.258 430.545 468.258 432.268 cv
468.258 434.066 468.708 435.864 470.588 435.864 cv
472.458 435.864 472.838 434.066 472.838 432.268 cv
472.838 430.545 472.458 428.672 470.588 428.672 cv
cp
f
476.287 431.819 mo
476.287 431.819 li
477.337 431.819 477.787 432.718 477.787 433.617 cv
477.787 434.59 477.187 435.265 476.207 435.265 cv
475.307 435.265 474.637 434.516 474.637 433.617 cv
474.637 432.643 475.237 431.819 476.287 431.819 cv
cp
476.287 428.672 mo
476.287 428.672 li
474.107 428.672 473.807 430.92 473.807 432.643 cv
473.807 434.291 474.337 435.864 476.287 435.864 cv
477.637 435.864 478.457 434.89 478.457 433.542 cv
478.457 432.268 477.707 431.295 476.357 431.295 cv
475.537 431.295 474.857 431.669 474.487 432.418 cv
474.487 431.07 474.707 429.272 476.357 429.272 cv
477.037 429.272 477.637 429.721 477.637 430.47 cv
478.387 430.47 li
478.307 429.272 477.407 428.672 476.287 428.672 cv
cp
f
446.132 429.272 mo
446.132 429.272 li
447.562 429.272 447.712 431.295 447.712 432.268 cv
447.712 433.317 447.562 435.265 446.132 435.265 cv
444.632 435.265 444.482 433.317 444.482 432.268 cv
444.482 431.295 444.632 429.272 446.132 429.272 cv
cp
446.132 428.672 mo
446.132 428.672 li
444.262 428.672 443.812 430.545 443.812 432.268 cv
443.812 434.066 444.262 435.864 446.132 435.864 cv
448.012 435.864 448.382 434.066 448.382 432.268 cv
448.382 430.545 448.012 428.672 446.132 428.672 cv
cp
f
449.661 432.868 mo
449.661 432.868 li
450.331 432.868 li
450.481 432.194 451.081 431.819 451.761 431.819 cv
452.731 431.819 453.261 432.493 453.261 433.467 cv
453.261 434.441 452.731 435.265 451.681 435.265 cv
450.861 435.265 450.261 434.89 450.181 434.066 cv
449.511 434.066 li
449.581 435.34 450.561 435.864 451.761 435.864 cv
453.111 435.864 453.931 434.815 453.931 433.542 cv
453.931 432.268 453.181 431.22 451.831 431.22 cv
451.231 431.22 450.711 431.519 450.331 431.969 cv
450.331 431.894 li
450.411 429.421 li
453.631 429.421 li
453.631 428.822 li
449.811 428.822 li
449.661 432.868 li
cp
f
421.686 429.272 mo
421.686 429.272 li
423.106 429.272 423.256 431.295 423.256 432.268 cv
423.256 433.317 423.106 435.265 421.686 435.265 cv
420.186 435.265 420.036 433.317 420.036 432.268 cv
420.036 431.295 420.186 429.272 421.686 429.272 cv
cp
421.686 428.672 mo
421.686 428.672 li
419.806 428.672 419.356 430.545 419.356 432.268 cv
419.356 434.066 419.806 435.864 421.686 435.864 cv
423.556 435.864 423.936 434.066 423.936 432.268 cv
423.936 430.545 423.556 428.672 421.686 428.672 cv
cp
f
427.905 435.714 mo
427.905 435.714 li
428.585 435.714 li
428.585 434.141 li
429.635 434.141 li
429.635 433.617 li
428.585 433.617 li
428.585 428.822 li
427.685 428.822 li
424.685 433.542 li
424.685 434.141 li
427.905 434.141 li
427.905 435.714 li
cp
427.905 433.617 mo
427.905 433.617 li
425.205 433.617 li
427.905 429.496 li
427.905 433.617 li
cp
f
397.23 429.272 mo
397.23 429.272 li
398.66 429.272 398.81 431.295 398.81 432.268 cv
398.81 433.317 398.66 435.265 397.23 435.265 cv
395.73 435.265 395.58 433.317 395.58 432.268 cv
395.58 431.295 395.73 429.272 397.23 429.272 cv
cp
397.23 428.672 mo
397.23 428.672 li
395.36 428.672 394.91 430.545 394.91 432.268 cv
394.91 434.066 395.36 435.864 397.23 435.864 cv
399.11 435.864 399.479 434.066 399.479 432.268 cv
399.479 430.545 399.11 428.672 397.23 428.672 cv
cp
f
402.259 432.493 mo
402.259 432.493 li
403.159 432.343 404.279 432.718 404.279 433.841 cv
404.279 434.815 403.529 435.265 402.559 435.265 cv
401.809 435.265 401.059 434.815 400.979 433.916 cv
400.309 433.916 li
400.379 435.265 401.359 435.864 402.559 435.864 cv
403.759 435.864 404.959 435.19 404.959 433.916 cv
404.959 432.942 404.279 432.343 403.459 432.194 cv
403.459 432.119 li
404.209 431.969 404.879 431.445 404.879 430.62 cv
404.879 429.272 403.679 428.672 402.559 428.672 cv
401.429 428.672 400.379 429.421 400.379 430.545 cv
401.129 430.545 li
401.209 429.796 401.729 429.272 402.629 429.272 cv
403.459 429.272 404.129 429.721 404.129 430.545 cv
404.129 431.594 403.159 431.969 402.259 431.819 cv
402.259 432.493 li
cp
f
372.784 429.272 mo
372.784 429.272 li
374.204 429.272 374.354 431.295 374.354 432.268 cv
374.354 433.317 374.204 435.265 372.784 435.265 cv
371.284 435.265 371.134 433.317 371.134 432.268 cv
371.134 431.295 371.284 429.272 372.784 429.272 cv
cp
372.784 428.672 mo
372.784 428.672 li
370.904 428.672 370.454 430.545 370.454 432.268 cv
370.454 434.066 370.904 435.864 372.784 435.864 cv
374.654 435.864 375.033 434.066 375.033 432.268 cv
375.033 430.545 374.654 428.672 372.784 428.672 cv
cp
f
380.353 435.714 mo
380.353 435.714 li
380.353 435.115 li
376.833 435.115 li
377.883 434.141 380.283 432.119 380.283 430.47 cv
380.283 429.272 379.303 428.672 378.253 428.672 cv
377.053 428.672 376.083 429.496 376.083 430.695 cv
376.833 430.695 li
376.833 429.871 377.353 429.272 378.183 429.272 cv
378.933 429.272 379.603 429.721 379.603 430.545 cv
379.603 431.744 376.903 434.291 376.083 435.04 cv
376.083 435.714 li
380.353 435.714 li
cp
f
348.328 429.272 mo
348.328 429.272 li
349.758 429.272 349.908 431.295 349.908 432.268 cv
349.908 433.317 349.758 435.265 348.328 435.265 cv
346.828 435.265 346.678 433.317 346.678 432.268 cv
346.678 431.295 346.828 429.272 348.328 429.272 cv
cp
348.328 428.672 mo
348.328 428.672 li
346.458 428.672 346.008 430.545 346.008 432.268 cv
346.008 434.066 346.458 435.864 348.328 435.864 cv
350.208 435.864 350.577 434.066 350.577 432.268 cv
350.577 430.545 350.208 428.672 348.328 428.672 cv
cp
f
352.227 430.62 mo
352.227 430.62 li
352.827 430.32 353.357 430.021 353.807 429.571 cv
353.807 435.714 li
354.477 435.714 li
354.477 428.822 li
353.807 428.822 li
353.357 429.272 352.827 429.721 352.227 429.946 cv
352.227 430.62 li
cp
f
323.882 429.272 mo
323.882 429.272 li
325.302 429.272 325.452 431.295 325.452 432.268 cv
325.452 433.317 325.302 435.265 323.882 435.265 cv
322.382 435.265 322.232 433.317 322.232 432.268 cv
322.232 431.295 322.382 429.272 323.882 429.272 cv
cp
323.882 428.672 mo
323.882 428.672 li
322.002 428.672 321.552 430.545 321.552 432.268 cv
321.552 434.066 322.002 435.864 323.882 435.864 cv
325.751 435.864 326.131 434.066 326.131 432.268 cv
326.131 430.545 325.751 428.672 323.882 428.672 cv
cp
f
329.431 429.272 mo
329.431 429.272 li
330.851 429.272 331.001 431.295 331.001 432.268 cv
331.001 433.317 330.851 435.265 329.431 435.265 cv
327.931 435.265 327.851 433.317 327.851 432.268 cv
327.851 431.295 327.931 429.272 329.431 429.272 cv
cp
329.431 428.672 mo
329.431 428.672 li
327.551 428.672 327.101 430.545 327.101 432.268 cv
327.101 434.066 327.551 435.864 329.431 435.864 cv
331.301 435.864 331.681 434.066 331.681 432.268 cv
331.681 430.545 331.301 428.672 329.431 428.672 cv
cp
f
299.276 429.272 mo
299.276 429.272 li
300.256 429.272 300.926 429.946 300.926 430.92 cv
300.926 431.894 300.176 432.568 299.276 432.568 cv
298.376 432.568 297.776 431.894 297.776 430.995 cv
297.776 430.021 298.306 429.272 299.276 429.272 cv
cp
297.106 434.066 mo
297.106 434.066 li
297.176 435.115 297.856 435.864 299.126 435.864 cv
301.305 435.864 301.755 433.991 301.755 432.119 cv
301.755 430.395 301.305 428.672 299.276 428.672 cv
297.926 428.672 297.106 429.646 297.106 430.92 cv
297.106 432.194 297.926 433.092 299.206 433.092 cv
300.026 433.092 300.706 432.718 301.006 432.044 cv
301.076 432.044 li
301.076 433.092 300.856 435.265 299.276 435.265 cv
298.456 435.265 297.856 434.965 297.776 434.066 cv
297.106 434.066 li
cp
f
304.835 429.272 mo
304.835 429.272 li
305.805 429.272 306.485 429.946 306.485 430.92 cv
306.485 431.894 305.805 432.568 304.835 432.568 cv
303.925 432.568 303.325 431.894 303.325 430.995 cv
303.325 430.021 303.855 429.272 304.835 429.272 cv
cp
302.655 434.066 mo
302.655 434.066 li
302.725 435.115 303.475 435.864 304.685 435.864 cv
306.855 435.864 307.305 433.991 307.305 432.119 cv
307.305 430.395 306.855 428.672 304.835 428.672 cv
303.475 428.672 302.655 429.646 302.655 430.92 cv
302.655 432.194 303.475 433.092 304.755 433.092 cv
305.585 433.092 306.255 432.718 306.555 432.044 cv
306.635 432.044 li
306.635 433.092 306.405 435.265 304.835 435.265 cv
304.005 435.265 303.405 434.965 303.325 434.066 cv
302.655 434.066 li
cp
f
274.83 429.272 mo
274.83 429.272 li
275.8 429.272 276.48 429.946 276.48 430.92 cv
276.48 431.894 275.73 432.568 274.83 432.568 cv
273.93 432.568 273.33 431.894 273.33 430.995 cv
273.33 430.021 273.85 429.272 274.83 429.272 cv
cp
272.65 434.066 mo
272.65 434.066 li
272.73 435.115 273.4 435.864 274.68 435.864 cv
276.859 435.864 277.309 433.991 277.309 432.119 cv
277.309 430.395 276.859 428.672 274.83 428.672 cv
273.48 428.672 272.65 429.646 272.65 430.92 cv
272.65 432.194 273.48 433.092 274.75 433.092 cv
275.58 433.092 276.25 432.718 276.549 432.044 cv
276.63 432.044 li
276.63 433.092 276.4 435.265 274.83 435.265 cv
274 435.265 273.4 434.965 273.33 434.066 cv
272.65 434.066 li
cp
f
279.709 432.194 mo
279.709 432.194 li
278.809 432.343 278.209 433.017 278.209 433.841 cv
278.209 435.265 279.329 435.864 280.529 435.864 cv
281.659 435.864 282.858 435.265 282.858 433.841 cv
282.858 432.942 282.329 432.418 281.359 432.194 cv
281.359 432.119 li
282.179 431.969 282.779 431.37 282.779 430.545 cv
282.779 429.272 281.659 428.672 280.529 428.672 cv
279.409 428.672 278.279 429.272 278.279 430.545 cv
278.279 431.37 278.879 432.044 279.709 432.119 cv
279.709 432.194 li
cp
278.959 430.545 mo
278.959 430.545 li
278.959 429.646 279.779 429.272 280.529 429.272 cv
281.279 429.272 282.109 429.646 282.109 430.545 cv
282.109 431.445 281.429 431.819 280.529 431.819 cv
279.629 431.819 278.959 431.445 278.959 430.545 cv
cp
278.879 433.841 mo
278.879 433.841 li
278.879 432.868 279.629 432.418 280.529 432.418 cv
281.359 432.418 282.179 432.868 282.179 433.841 cv
282.179 434.89 281.359 435.265 280.529 435.265 cv
279.629 435.265 278.879 434.89 278.879 433.841 cv
cp
f
250.384 429.272 mo
250.384 429.272 li
251.354 429.272 252.034 429.946 252.034 430.92 cv
252.034 431.894 251.284 432.568 250.384 432.568 cv
249.484 432.568 248.874 431.894 248.874 430.995 cv
248.874 430.021 249.404 429.272 250.384 429.272 cv
cp
248.204 434.066 mo
248.204 434.066 li
248.274 435.115 248.954 435.864 250.234 435.864 cv
252.403 435.864 252.853 433.991 252.853 432.119 cv
252.853 430.395 252.403 428.672 250.384 428.672 cv
249.024 428.672 248.204 429.646 248.204 430.92 cv
248.204 432.194 249.024 433.092 250.304 433.092 cv
251.134 433.092 251.804 432.718 252.104 432.044 cv
252.183 432.044 li
252.183 433.092 251.954 435.265 250.384 435.265 cv
249.554 435.265 248.954 434.965 248.874 434.066 cv
248.204 434.066 li
cp
f
258.182 428.822 mo
258.182 428.822 li
253.833 428.822 li
253.833 429.421 li
257.503 429.421 li
254.733 435.714 li
255.553 435.714 li
258.182 429.421 li
258.182 428.822 li
cp
f
225.928 429.272 mo
225.928 429.272 li
226.908 429.272 227.577 429.946 227.577 430.92 cv
227.577 431.894 226.828 432.568 225.928 432.568 cv
225.028 432.568 224.428 431.894 224.428 430.995 cv
224.428 430.021 224.958 429.272 225.928 429.272 cv
cp
223.758 434.066 mo
223.758 434.066 li
223.828 435.115 224.508 435.864 225.778 435.864 cv
227.957 435.864 228.407 433.991 228.407 432.119 cv
228.407 430.395 227.957 428.672 225.928 428.672 cv
224.578 428.672 223.758 429.646 223.758 430.92 cv
223.758 432.194 224.578 433.092 225.858 433.092 cv
226.678 433.092 227.358 432.718 227.657 432.044 cv
227.727 432.044 li
227.727 433.092 227.508 435.265 225.928 435.265 cv
225.108 435.265 224.508 434.965 224.428 434.066 cv
223.758 434.066 li
cp
f
231.777 431.819 mo
231.777 431.819 li
232.827 431.819 233.277 432.718 233.277 433.617 cv
233.277 434.59 232.677 435.265 231.707 435.265 cv
230.807 435.265 230.127 434.516 230.127 433.617 cv
230.127 432.643 230.727 431.819 231.777 431.819 cv
cp
231.777 428.672 mo
231.777 428.672 li
229.607 428.672 229.307 430.92 229.307 432.643 cv
229.307 434.291 229.827 435.864 231.777 435.864 cv
233.127 435.864 233.956 434.89 233.956 433.542 cv
233.956 432.268 233.207 431.295 231.857 431.295 cv
231.027 431.295 230.357 431.669 229.977 432.418 cv
229.977 431.07 230.207 429.272 231.857 429.272 cv
232.527 429.272 233.127 429.721 233.127 430.47 cv
233.876 430.47 li
233.806 429.272 232.907 428.672 231.777 428.672 cv
cp
f
201.482 429.272 mo
201.482 429.272 li
202.452 429.272 203.131 429.946 203.131 430.92 cv
203.131 431.894 202.382 432.568 201.482 432.568 cv
200.582 432.568 199.982 431.894 199.982 430.995 cv
199.982 430.021 200.502 429.272 201.482 429.272 cv
cp
199.302 434.066 mo
199.302 434.066 li
199.382 435.115 200.052 435.864 201.332 435.864 cv
203.501 435.864 203.951 433.991 203.951 432.119 cv
203.951 430.395 203.501 428.672 201.482 428.672 cv
200.132 428.672 199.302 429.646 199.302 430.92 cv
199.302 432.194 200.132 433.092 201.402 433.092 cv
202.232 433.092 202.902 432.718 203.201 432.044 cv
203.281 432.044 li
203.281 433.092 203.051 435.265 201.482 435.265 cv
200.652 435.265 200.052 434.965 199.982 434.066 cv
199.302 434.066 li
cp
f
205.151 432.868 mo
205.151 432.868 li
205.831 432.868 li
205.981 432.194 206.581 431.819 207.251 431.819 cv
208.231 431.819 208.751 432.493 208.751 433.467 cv
208.751 434.441 208.231 435.265 207.181 435.265 cv
206.351 435.265 205.751 434.89 205.681 434.066 cv
205.001 434.066 li
205.081 435.34 206.051 435.864 207.251 435.864 cv
208.601 435.864 209.43 434.815 209.43 433.542 cv
209.43 432.268 208.681 431.22 207.331 431.22 cv
206.731 431.22 206.201 431.519 205.831 431.969 cv
205.831 431.894 li
205.901 429.421 li
209.131 429.421 li
209.131 428.822 li
205.301 428.822 li
205.151 432.868 li
cp
f
177.026 429.272 mo
177.026 429.272 li
178.006 429.272 178.675 429.946 178.675 430.92 cv
178.675 431.894 177.926 432.568 177.026 432.568 cv
176.126 432.568 175.526 431.894 175.526 430.995 cv
175.526 430.021 176.056 429.272 177.026 429.272 cv
cp
174.856 434.066 mo
174.856 434.066 li
174.926 435.115 175.606 435.864 176.876 435.864 cv
179.055 435.864 179.505 433.991 179.505 432.119 cv
179.505 430.395 179.055 428.672 177.026 428.672 cv
175.676 428.672 174.856 429.646 174.856 430.92 cv
174.856 432.194 175.676 433.092 176.956 433.092 cv
177.776 433.092 178.455 432.718 178.755 432.044 cv
178.825 432.044 li
178.825 433.092 178.605 435.265 177.026 435.265 cv
176.206 435.265 175.606 434.965 175.526 434.066 cv
174.856 434.066 li
cp
f
183.405 435.714 mo
183.405 435.714 li
184.075 435.714 li
184.075 434.141 li
185.124 434.141 li
185.124 433.617 li
184.075 433.617 li
184.075 428.822 li
183.175 428.822 li
180.175 433.542 li
180.175 434.141 li
183.405 434.141 li
183.405 435.714 li
cp
183.405 433.617 mo
183.405 433.617 li
180.705 433.617 li
183.405 429.496 li
183.405 433.617 li
cp
f
152.58 429.272 mo
152.58 429.272 li
153.55 429.272 154.229 429.946 154.229 430.92 cv
154.229 431.894 153.48 432.568 152.58 432.568 cv
151.68 432.568 151.08 431.894 151.08 430.995 cv
151.08 430.021 151.6 429.272 152.58 429.272 cv
cp
150.4 434.066 mo
150.4 434.066 li
150.48 435.115 151.15 435.864 152.43 435.864 cv
154.599 435.864 155.049 433.991 155.049 432.119 cv
155.049 430.395 154.599 428.672 152.58 428.672 cv
151.23 428.672 150.4 429.646 150.4 430.92 cv
150.4 432.194 151.23 433.092 152.5 433.092 cv
153.33 433.092 153.999 432.718 154.299 432.044 cv
154.379 432.044 li
154.379 433.092 154.149 435.265 152.58 435.265 cv
151.75 435.265 151.15 434.965 151.08 434.066 cv
150.4 434.066 li
cp
f
157.749 432.493 mo
157.749 432.493 li
158.649 432.343 159.779 432.718 159.779 433.841 cv
159.779 434.815 159.029 435.265 158.049 435.265 cv
157.299 435.265 156.549 434.815 156.479 433.916 cv
155.799 433.916 li
155.879 435.265 156.849 435.864 158.049 435.864 cv
159.249 435.864 160.448 435.19 160.448 433.916 cv
160.448 432.942 159.779 432.343 158.949 432.194 cv
158.949 432.119 li
159.699 431.969 160.378 431.445 160.378 430.62 cv
160.378 429.272 159.179 428.672 158.049 428.672 cv
156.929 428.672 155.879 429.421 155.879 430.545 cv
156.629 430.545 li
156.699 429.796 157.229 429.272 158.129 429.272 cv
158.949 429.272 159.629 429.721 159.629 430.545 cv
159.629 431.594 158.649 431.969 157.749 431.819 cv
157.749 432.493 li
cp
f
128.124 429.272 mo
128.124 429.272 li
129.104 429.272 129.773 429.946 129.773 430.92 cv
129.773 431.894 129.024 432.568 128.124 432.568 cv
127.227 432.568 126.627 431.894 126.627 430.995 cv
126.627 430.021 127.152 429.272 128.124 429.272 cv
cp
125.952 434.066 mo
125.952 434.066 li
126.027 435.115 126.702 435.864 127.977 435.864 cv
130.153 435.864 130.603 433.991 130.603 432.119 cv
130.603 430.395 130.153 428.672 128.124 428.672 cv
126.777 428.672 125.952 429.646 125.952 430.92 cv
125.952 432.194 126.777 433.092 128.054 433.092 cv
128.874 433.092 129.553 432.718 129.853 432.044 cv
129.923 432.044 li
129.923 433.092 129.703 435.265 128.124 435.265 cv
127.302 435.265 126.702 434.965 126.627 434.066 cv
125.952 434.066 li
cp
f
135.852 435.714 mo
135.852 435.714 li
135.852 435.115 li
132.323 435.115 li
133.373 434.141 135.772 432.119 135.772 430.47 cv
135.772 429.272 134.803 428.672 133.753 428.672 cv
132.553 428.672 131.573 429.496 131.573 430.695 cv
132.323 430.695 li
132.323 429.871 132.853 429.272 133.673 429.272 cv
134.423 429.272 135.103 429.721 135.103 430.545 cv
135.103 431.744 132.403 434.291 131.573 435.04 cv
131.573 435.714 li
135.852 435.714 li
cp
f
103.677 429.272 mo
103.677 429.272 li
104.652 429.272 105.326 429.946 105.326 430.92 cv
105.326 431.894 104.577 432.568 103.677 432.568 cv
102.777 432.568 102.176 431.894 102.176 430.995 cv
102.176 430.021 102.702 429.272 103.677 429.272 cv
cp
101.501 434.066 mo
101.501 434.066 li
101.576 435.115 102.251 435.864 103.527 435.864 cv
105.701 435.864 106.151 433.991 106.151 432.119 cv
106.151 430.395 105.701 428.672 103.677 428.672 cv
102.326 428.672 101.501 429.646 101.501 430.92 cv
101.501 432.194 102.326 433.092 103.602 433.092 cv
104.427 433.092 105.101 432.718 105.401 432.044 cv
105.476 432.044 li
105.476 433.092 105.251 435.265 103.677 435.265 cv
102.852 435.265 102.251 434.965 102.176 434.066 cv
101.501 434.066 li
cp
f
107.726 430.62 mo
107.726 430.62 li
108.327 430.32 108.852 430.021 109.302 429.571 cv
109.302 435.714 li
109.977 435.714 li
109.977 428.822 li
109.302 428.822 li
108.852 429.272 108.327 429.721 107.726 429.946 cv
107.726 430.62 li
cp
f
79.2257 429.272 mo
79.2257 429.272 li
80.2005 429.272 80.8764 429.946 80.8764 430.92 cv
80.8764 431.894 80.1255 432.568 79.2257 432.568 cv
78.3258 432.568 77.7259 431.894 77.7259 430.995 cv
77.7259 430.021 78.2508 429.272 79.2257 429.272 cv
cp
77.051 434.066 mo
77.051 434.066 li
77.126 435.115 77.8009 435.864 79.0757 435.864 cv
81.2513 435.864 81.7012 433.991 81.7012 432.119 cv
81.7012 430.395 81.2513 428.672 79.2257 428.672 cv
77.8759 428.672 77.051 429.646 77.051 430.92 cv
77.051 432.194 77.8759 433.092 79.1507 433.092 cv
79.9755 433.092 80.6514 432.718 80.9514 432.044 cv
81.0264 432.044 li
81.0264 433.092 80.8014 435.265 79.2257 435.265 cv
78.4008 435.265 77.8009 434.965 77.7259 434.066 cv
77.051 434.066 li
cp
f
84.9257 429.272 mo
84.9257 429.272 li
86.3515 429.272 86.5015 431.295 86.5015 432.268 cv
86.5015 433.317 86.3515 435.265 84.9257 435.265 cv
83.426 435.265 83.351 433.317 83.351 432.268 cv
83.351 431.295 83.426 429.272 84.9257 429.272 cv
cp
84.9257 428.672 mo
84.9257 428.672 li
83.051 428.672 82.6011 430.545 82.6011 432.268 cv
82.6011 434.066 83.051 435.864 84.9257 435.864 cv
86.8014 435.864 87.1764 434.066 87.1764 432.268 cv
87.1764 430.545 86.8014 428.672 84.9257 428.672 cv
cp
f
54.1007 432.194 mo
54.1007 432.194 li
53.2009 432.343 52.525 433.017 52.525 433.841 cv
52.6 435.265 53.7258 435.864 54.9256 435.864 cv
56.0504 435.864 57.2502 435.265 57.2502 433.841 cv
57.2502 432.942 56.6503 432.418 55.7505 432.194 cv
55.7505 432.119 li
56.5753 431.969 57.1752 431.37 57.1752 430.545 cv
57.1752 429.272 55.9754 428.672 54.9256 428.672 cv
53.8008 428.672 52.675 429.272 52.675 430.545 cv
52.675 431.37 53.2759 432.044 54.1007 432.119 cv
54.1007 432.194 li
cp
53.2759 430.545 mo
53.2759 430.545 li
53.2759 429.646 54.1007 429.272 54.9256 429.272 cv
55.6755 429.272 56.5004 429.646 56.5004 430.545 cv
56.5004 431.445 55.8255 431.819 54.9256 431.819 cv
53.9508 431.819 53.2759 431.445 53.2759 430.545 cv
cp
53.2759 433.841 mo
53.2759 433.841 li
53.2759 432.868 54.0258 432.418 54.9256 432.418 cv
55.7505 432.418 56.5753 432.868 56.5753 433.841 cv
56.5753 434.89 55.7505 435.265 54.9256 435.265 cv
54.0258 435.265 53.2759 434.89 53.2759 433.841 cv
cp
f
60.3257 429.272 mo
60.3257 429.272 li
61.3006 429.272 61.9755 429.946 61.9755 430.92 cv
61.9755 431.894 61.3006 432.568 60.3257 432.568 cv
59.4259 432.568 58.826 431.894 58.826 430.995 cv
58.826 430.021 59.3509 429.272 60.3257 429.272 cv
cp
58.1501 434.066 mo
58.1501 434.066 li
58.2251 435.115 58.976 435.864 60.1758 435.864 cv
62.3504 435.864 62.8003 433.991 62.8003 432.119 cv
62.8003 430.395 62.3504 428.672 60.3257 428.672 cv
58.976 428.672 58.1501 429.646 58.1501 430.92 cv
58.1501 432.194 58.976 433.092 60.2507 433.092 cv
61.0756 433.092 61.7505 432.718 62.0505 432.044 cv
62.1254 432.044 li
62.1254 433.092 61.9005 435.265 60.3257 435.265 cv
59.5009 435.265 58.901 434.965 58.826 434.066 cv
58.1501 434.066 li
cp
f
29.575 432.194 mo
29.575 432.194 li
28.675 432.343 28.075 433.017 28.075 433.841 cv
28.075 435.265 29.275 435.864 30.4 435.864 cv
31.525 435.864 32.7251 435.265 32.7251 433.841 cv
32.7251 432.942 32.2001 432.418 31.2251 432.194 cv
31.2251 432.119 li
32.05 431.969 32.65 431.37 32.65 430.545 cv
32.65 429.272 31.525 428.672 30.4 428.672 cv
29.275 428.672 28.15 429.272 28.15 430.545 cv
28.15 431.37 28.75 432.044 29.575 432.119 cv
29.575 432.194 li
cp
28.825 430.545 mo
28.825 430.545 li
28.825 429.646 29.65 429.272 30.4 429.272 cv
31.1501 429.272 31.9751 429.646 31.9751 430.545 cv
31.9751 431.445 31.3001 431.819 30.4 431.819 cv
29.5001 431.819 28.825 431.445 28.825 430.545 cv
cp
28.75 433.841 mo
28.75 433.841 li
28.75 432.868 29.575 432.418 30.4 432.418 cv
31.2251 432.418 32.05 432.868 32.05 433.841 cv
32.05 434.89 31.2251 435.265 30.4 435.265 cv
29.575 435.265 28.75 434.89 28.75 433.841 cv
cp
f
35.1251 432.194 mo
35.1251 432.194 li
34.2251 432.343 33.6251 433.017 33.6251 433.841 cv
33.6251 435.265 34.8251 435.864 35.9501 435.864 cv
37.1502 435.864 38.2753 435.265 38.2753 433.841 cv
38.2753 432.942 37.7502 432.418 36.8502 432.194 cv
36.8502 432.119 li
37.6001 431.969 38.2003 431.37 38.2003 430.545 cv
38.2003 429.272 37.0751 428.672 35.9501 428.672 cv
34.8251 428.672 33.7001 429.272 33.7001 430.545 cv
33.7001 431.37 34.3001 432.044 35.1251 432.119 cv
35.1251 432.194 li
cp
34.3752 430.545 mo
34.3752 430.545 li
34.3752 429.646 35.2001 429.272 35.9501 429.272 cv
36.7002 429.272 37.5251 429.646 37.5251 430.545 cv
37.5251 431.445 36.8502 431.819 35.9501 431.819 cv
35.0502 431.819 34.3752 431.445 34.3752 430.545 cv
cp
34.3001 433.841 mo
34.3001 433.841 li
34.3001 432.868 35.1251 432.418 35.9501 432.418 cv
36.8502 432.418 37.6001 432.868 37.6001 433.841 cv
37.6001 434.89 36.8502 435.265 35.9501 435.265 cv
35.1251 435.265 34.3001 434.89 34.3001 433.841 cv
cp
f
664.086 79.2898 mo
664.086 79.2898 li
664.686 79.0601 665.216 78.6906 665.666 78.3112 cv
665.666 84.4526 li
666.336 84.4526 li
666.336 77.5622 li
665.666 77.5622 li
665.216 78.0116 664.686 78.4609 664.086 78.6906 cv
664.086 79.2898 li
cp
f
670.765 81.2371 mo
670.765 81.2371 li
671.735 81.0873 672.785 81.4568 672.785 82.5852 cv
672.785 83.5539 672.035 84.0032 671.135 84.0032 cv
670.315 84.0032 669.565 83.4839 669.565 82.6551 cv
668.816 82.6551 li
668.886 84.0032 669.935 84.6024 671.135 84.6024 cv
672.335 84.6024 673.535 83.9333 673.535 82.6551 cv
673.535 81.6864 672.865 81.0873 671.965 80.8576 cv
672.785 80.7078 673.385 80.1885 673.385 79.2898 cv
673.385 78.0116 672.265 77.4124 671.065 77.4124 cv
670.015 77.4124 668.966 78.0915 668.966 79.2898 cv
669.635 79.2898 li
669.716 78.4609 670.315 78.0116 671.135 78.0116 cv
671.965 78.0116 672.715 78.4609 672.715 79.2898 cv
672.715 80.3383 671.665 80.7078 670.765 80.558 cv
670.765 81.2371 li
cp
f
676.914 78.0116 mo
676.914 78.0116 li
678.414 78.0116 678.564 80.0387 678.564 81.0074 cv
678.564 82.0559 678.414 84.0032 676.914 84.0032 cv
675.415 84.0032 675.335 82.0559 675.335 81.0074 cv
675.335 80.0387 675.415 78.0116 676.914 78.0116 cv
cp
676.914 77.4124 mo
676.914 77.4124 li
675.035 77.4124 674.585 79.2898 674.585 81.0074 cv
674.585 82.8049 675.035 84.6024 676.914 84.6024 cv
678.784 84.6024 679.234 82.8049 679.234 81.0074 cv
679.234 79.2898 678.784 77.4124 676.914 77.4124 cv
cp
f
682.533 78.0116 mo
682.533 78.0116 li
684.033 78.0116 684.113 80.0387 684.113 81.0074 cv
684.113 82.0559 684.033 84.0032 682.533 84.0032 cv
681.034 84.0032 680.884 82.0559 680.884 81.0074 cv
680.884 80.0387 681.034 78.0116 682.533 78.0116 cv
cp
682.533 77.4124 mo
682.533 77.4124 li
680.664 77.4124 680.214 79.2898 680.214 81.0074 cv
680.214 82.8049 680.664 84.6024 682.533 84.6024 cv
684.413 84.6024 684.863 82.8049 684.863 81.0074 cv
684.863 79.2898 684.413 77.4124 682.533 77.4124 cv
cp
f
688.162 78.0116 mo
688.162 78.0116 li
689.582 78.0116 689.732 80.0387 689.732 81.0074 cv
689.732 82.0559 689.582 84.0032 688.162 84.0032 cv
686.663 84.0032 686.513 82.0559 686.513 81.0074 cv
686.513 80.0387 686.663 78.0116 688.162 78.0116 cv
cp
688.162 77.4124 mo
688.162 77.4124 li
686.213 77.4124 685.833 79.2898 685.833 81.0074 cv
685.833 82.8049 686.213 84.6024 688.162 84.6024 cv
690.032 84.6024 690.412 82.8049 690.412 81.0074 cv
690.412 79.2898 690.032 77.4124 688.162 77.4124 cv
cp
f
664.086 106.332 mo
664.086 106.332 li
664.686 106.103 665.216 105.733 665.666 105.284 cv
665.666 111.495 li
666.336 111.495 li
666.336 104.605 li
665.666 104.605 li
665.216 105.054 664.686 105.433 664.086 105.653 cv
664.086 106.332 li
cp
f
673.385 111.495 mo
673.385 111.495 li
673.385 110.896 li
669.785 110.896 li
670.915 109.847 673.315 107.83 673.315 106.252 cv
673.315 105.054 672.335 104.455 671.215 104.455 cv
670.015 104.455 669.116 105.204 669.116 106.402 cv
669.785 106.402 li
669.785 105.653 670.385 105.054 671.215 105.054 cv
671.965 105.054 672.635 105.503 672.635 106.252 cv
672.635 107.531 669.935 109.997 669.036 110.826 cv
669.036 111.495 li
673.385 111.495 li
cp
f
676.914 105.054 mo
676.914 105.054 li
678.414 105.054 678.564 107.001 678.564 108.05 cv
678.564 109.098 678.414 111.046 676.914 111.046 cv
675.415 111.046 675.335 109.098 675.335 108.05 cv
675.335 107.001 675.415 105.054 676.914 105.054 cv
cp
676.914 104.455 mo
676.914 104.455 li
675.035 104.455 674.585 106.332 674.585 108.05 cv
674.585 109.777 675.035 111.645 676.914 111.645 cv
678.784 111.645 679.234 109.777 679.234 108.05 cv
679.234 106.332 678.784 104.455 676.914 104.455 cv
cp
f
682.533 105.054 mo
682.533 105.054 li
684.033 105.054 684.113 107.001 684.113 108.05 cv
684.113 109.098 684.033 111.046 682.533 111.046 cv
681.034 111.046 680.884 109.098 680.884 108.05 cv
680.884 107.001 681.034 105.054 682.533 105.054 cv
cp
682.533 104.455 mo
682.533 104.455 li
680.664 104.455 680.214 106.332 680.214 108.05 cv
680.214 109.777 680.664 111.645 682.533 111.645 cv
684.413 111.645 684.863 109.777 684.863 108.05 cv
684.863 106.332 684.413 104.455 682.533 104.455 cv
cp
f
688.162 105.054 mo
688.162 105.054 li
689.582 105.054 689.732 107.001 689.732 108.05 cv
689.732 109.098 689.582 111.046 688.162 111.046 cv
686.663 111.046 686.513 109.098 686.513 108.05 cv
686.513 107.001 686.663 105.054 688.162 105.054 cv
cp
688.162 104.455 mo
688.162 104.455 li
686.213 104.455 685.833 106.332 685.833 108.05 cv
685.833 109.777 686.213 111.645 688.162 111.645 cv
690.032 111.645 690.412 109.777 690.412 108.05 cv
690.412 106.332 690.032 104.455 688.162 104.455 cv
cp
f
664.086 133.375 mo
664.086 133.375 li
664.686 133.075 665.216 132.775 665.666 132.326 cv
665.666 138.537 li
666.336 138.537 li
666.336 131.647 li
665.666 131.647 li
665.216 132.096 664.686 132.476 664.086 132.696 cv
664.086 133.375 li
cp
f
669.716 133.375 mo
669.716 133.375 li
670.235 133.075 670.765 132.775 671.285 132.326 cv
671.285 138.537 li
671.885 138.537 li
671.885 131.647 li
671.285 131.647 li
670.835 132.096 670.315 132.476 669.716 132.696 cv
669.716 133.375 li
cp
f
676.914 132.096 mo
676.914 132.096 li
678.414 132.096 678.564 134.044 678.564 135.092 cv
678.564 136.071 678.414 138.088 676.914 138.088 cv
675.415 138.088 675.335 136.071 675.335 135.092 cv
675.335 134.044 675.415 132.096 676.914 132.096 cv
cp
676.914 131.497 mo
676.914 131.497 li
675.035 131.497 674.585 133.295 674.585 135.092 cv
674.585 136.82 675.035 138.687 676.914 138.687 cv
678.784 138.687 679.234 136.82 679.234 135.092 cv
679.234 133.295 678.784 131.497 676.914 131.497 cv
cp
f
682.533 132.096 mo
682.533 132.096 li
684.033 132.096 684.113 134.044 684.113 135.092 cv
684.113 136.071 684.033 138.088 682.533 138.088 cv
681.034 138.088 680.884 136.071 680.884 135.092 cv
680.884 134.044 681.034 132.096 682.533 132.096 cv
cp
682.533 131.497 mo
682.533 131.497 li
680.664 131.497 680.214 133.295 680.214 135.092 cv
680.214 136.82 680.664 138.687 682.533 138.687 cv
684.413 138.687 684.863 136.82 684.863 135.092 cv
684.863 133.295 684.413 131.497 682.533 131.497 cv
cp
f
688.162 132.096 mo
688.162 132.096 li
689.582 132.096 689.732 134.044 689.732 135.092 cv
689.732 136.071 689.582 138.088 688.162 138.088 cv
686.663 138.088 686.513 136.071 686.513 135.092 cv
686.513 134.044 686.663 132.096 688.162 132.096 cv
cp
688.162 131.497 mo
688.162 131.497 li
686.213 131.497 685.833 133.295 685.833 135.092 cv
685.833 136.82 686.213 138.687 688.162 138.687 cv
690.032 138.687 690.412 136.82 690.412 135.092 cv
690.412 133.295 690.032 131.497 688.162 131.497 cv
cp
f
664.086 160.337 mo
664.086 160.337 li
664.686 160.117 665.216 159.738 665.666 159.369 cv
665.666 165.51 li
666.336 165.51 li
666.336 158.62 li
665.666 158.62 li
665.216 159.069 664.686 159.518 664.086 159.738 cv
664.086 160.337 li
cp
f
671.285 159.069 mo
671.285 159.069 li
672.785 159.069 672.935 161.086 672.935 162.065 cv
672.935 163.113 672.785 165.061 671.285 165.061 cv
669.865 165.061 669.716 163.113 669.716 162.065 cv
669.716 161.086 669.865 159.069 671.285 159.069 cv
cp
671.285 158.47 mo
671.285 158.47 li
669.416 158.47 669.036 160.337 669.036 162.065 cv
669.036 163.862 669.416 165.66 671.285 165.66 cv
673.235 165.66 673.615 163.862 673.615 162.065 cv
673.615 160.337 673.235 158.47 671.285 158.47 cv
cp
f
676.914 159.069 mo
676.914 159.069 li
678.414 159.069 678.564 161.086 678.564 162.065 cv
678.564 163.113 678.414 165.061 676.914 165.061 cv
675.415 165.061 675.335 163.113 675.335 162.065 cv
675.335 161.086 675.415 159.069 676.914 159.069 cv
cp
676.914 158.47 mo
676.914 158.47 li
675.035 158.47 674.585 160.337 674.585 162.065 cv
674.585 163.862 675.035 165.66 676.914 165.66 cv
678.784 165.66 679.234 163.862 679.234 162.065 cv
679.234 160.337 678.784 158.47 676.914 158.47 cv
cp
f
682.533 159.069 mo
682.533 159.069 li
684.033 159.069 684.113 161.086 684.113 162.065 cv
684.113 163.113 684.033 165.061 682.533 165.061 cv
681.034 165.061 680.884 163.113 680.884 162.065 cv
680.884 161.086 681.034 159.069 682.533 159.069 cv
cp
682.533 158.47 mo
682.533 158.47 li
680.664 158.47 680.214 160.337 680.214 162.065 cv
680.214 163.862 680.664 165.66 682.533 165.66 cv
684.413 165.66 684.863 163.862 684.863 162.065 cv
684.863 160.337 684.413 158.47 682.533 158.47 cv
cp
f
688.162 159.069 mo
688.162 159.069 li
689.582 159.069 689.732 161.086 689.732 162.065 cv
689.732 163.113 689.582 165.061 688.162 165.061 cv
686.663 165.061 686.513 163.113 686.513 162.065 cv
686.513 161.086 686.663 159.069 688.162 159.069 cv
cp
688.162 158.47 mo
688.162 158.47 li
686.213 158.47 685.833 160.337 685.833 162.065 cv
685.833 163.862 686.213 165.66 688.162 165.66 cv
690.032 165.66 690.412 163.862 690.412 162.065 cv
690.412 160.337 690.032 158.47 688.162 158.47 cv
cp
f
671.215 186.111 mo
671.215 186.111 li
672.185 186.111 672.865 186.78 672.865 187.759 cv
672.865 188.658 672.115 189.327 671.135 189.327 cv
670.235 189.327 669.716 188.728 669.716 187.829 cv
669.716 186.86 670.165 186.111 671.215 186.111 cv
cp
668.966 190.825 mo
668.966 190.825 li
669.116 191.953 669.785 192.702 671.065 192.702 cv
673.235 192.702 673.685 190.755 673.685 188.878 cv
673.685 187.23 673.235 185.512 671.215 185.512 cv
669.865 185.512 668.966 186.411 668.966 187.759 cv
668.966 189.027 669.865 189.926 671.135 189.926 cv
671.885 189.926 672.635 189.477 672.935 188.878 cv
672.935 189.856 672.785 192.103 671.215 192.103 cv
670.385 192.103 669.716 191.803 669.716 190.825 cv
668.966 190.825 li
cp
f
676.914 186.111 mo
676.914 186.111 li
678.414 186.111 678.564 188.059 678.564 189.107 cv
678.564 190.156 678.414 192.103 676.914 192.103 cv
675.415 192.103 675.335 190.156 675.335 189.107 cv
675.335 188.059 675.415 186.111 676.914 186.111 cv
cp
676.914 185.512 mo
676.914 185.512 li
675.035 185.512 674.585 187.38 674.585 189.107 cv
674.585 190.825 675.035 192.702 676.914 192.702 cv
678.784 192.702 679.234 190.825 679.234 189.107 cv
679.234 187.38 678.784 185.512 676.914 185.512 cv
cp
f
682.533 186.111 mo
682.533 186.111 li
684.033 186.111 684.113 188.059 684.113 189.107 cv
684.113 190.156 684.033 192.103 682.533 192.103 cv
681.034 192.103 680.884 190.156 680.884 189.107 cv
680.884 188.059 681.034 186.111 682.533 186.111 cv
cp
682.533 185.512 mo
682.533 185.512 li
680.664 185.512 680.214 187.38 680.214 189.107 cv
680.214 190.825 680.664 192.702 682.533 192.702 cv
684.413 192.702 684.863 190.825 684.863 189.107 cv
684.863 187.38 684.413 185.512 682.533 185.512 cv
cp
f
688.162 186.111 mo
688.162 186.111 li
689.582 186.111 689.732 188.059 689.732 189.107 cv
689.732 190.156 689.582 192.103 688.162 192.103 cv
686.663 192.103 686.513 190.156 686.513 189.107 cv
686.513 188.059 686.663 186.111 688.162 186.111 cv
cp
688.162 185.512 mo
688.162 185.512 li
686.213 185.512 685.833 187.38 685.833 189.107 cv
685.833 190.825 686.213 192.702 688.162 192.702 cv
690.032 192.702 690.412 190.825 690.412 189.107 cv
690.412 187.38 690.032 185.512 688.162 185.512 cv
cp
f
670.465 216 mo
670.465 216 li
669.565 216.15 668.966 216.829 668.966 217.727 cv
668.966 219.076 670.165 219.745 671.285 219.745 cv
672.485 219.745 673.685 219.076 673.685 217.727 cv
673.685 216.749 673.085 216.23 672.185 216 cv
673.015 215.78 673.615 215.251 673.615 214.352 cv
673.615 213.074 672.415 212.555 671.285 212.555 cv
670.235 212.555 669.036 213.074 669.036 214.352 cv
669.036 215.171 669.635 215.93 670.465 216 cv
cp
669.716 214.352 mo
669.716 214.352 li
669.716 213.453 670.535 213.074 671.285 213.074 cv
672.115 213.074 672.935 213.453 672.935 214.352 cv
672.935 215.251 672.265 215.7 671.285 215.7 cv
670.385 215.7 669.716 215.251 669.716 214.352 cv
cp
669.635 217.727 mo
669.635 217.727 li
669.635 216.749 670.465 216.299 671.285 216.299 cv
672.185 216.299 673.015 216.749 673.015 217.727 cv
673.015 218.696 672.185 219.145 671.285 219.145 cv
670.465 219.145 669.635 218.696 669.635 217.727 cv
cp
f
676.914 213.154 mo
676.914 213.154 li
678.414 213.154 678.564 215.101 678.564 216.15 cv
678.564 217.128 678.414 219.145 676.914 219.145 cv
675.415 219.145 675.335 217.128 675.335 216.15 cv
675.335 215.101 675.415 213.154 676.914 213.154 cv
cp
676.914 212.555 mo
676.914 212.555 li
675.035 212.555 674.585 214.352 674.585 216.15 cv
674.585 217.877 675.035 219.745 676.914 219.745 cv
678.784 219.745 679.234 217.877 679.234 216.15 cv
679.234 214.352 678.784 212.555 676.914 212.555 cv
cp
f
682.533 213.154 mo
682.533 213.154 li
684.033 213.154 684.113 215.101 684.113 216.15 cv
684.113 217.128 684.033 219.145 682.533 219.145 cv
681.034 219.145 680.884 217.128 680.884 216.15 cv
680.884 215.101 681.034 213.154 682.533 213.154 cv
cp
682.533 212.555 mo
682.533 212.555 li
680.664 212.555 680.214 214.352 680.214 216.15 cv
680.214 217.877 680.664 219.745 682.533 219.745 cv
684.413 219.745 684.863 217.877 684.863 216.15 cv
684.863 214.352 684.413 212.555 682.533 212.555 cv
cp
f
688.162 213.154 mo
688.162 213.154 li
689.582 213.154 689.732 215.101 689.732 216.15 cv
689.732 217.128 689.582 219.145 688.162 219.145 cv
686.663 219.145 686.513 217.128 686.513 216.15 cv
686.513 215.101 686.663 213.154 688.162 213.154 cv
cp
688.162 212.555 mo
688.162 212.555 li
686.213 212.555 685.833 214.352 685.833 216.15 cv
685.833 217.877 686.213 219.745 688.162 219.745 cv
690.032 219.745 690.412 217.877 690.412 216.15 cv
690.412 214.352 690.032 212.555 688.162 212.555 cv
cp
f
673.465 239.667 mo
673.465 239.667 li
669.036 239.667 li
669.036 240.266 li
672.785 240.266 li
670.015 246.567 li
670.765 246.567 li
673.465 240.266 li
673.465 239.667 li
cp
f
676.914 240.116 mo
676.914 240.116 li
678.414 240.116 678.564 242.144 678.564 243.122 cv
678.564 244.171 678.414 246.118 676.914 246.118 cv
675.415 246.118 675.335 244.171 675.335 243.122 cv
675.335 242.144 675.415 240.116 676.914 240.116 cv
cp
676.914 239.517 mo
676.914 239.517 li
675.035 239.517 674.585 241.395 674.585 243.122 cv
674.585 244.92 675.035 246.717 676.914 246.717 cv
678.784 246.717 679.234 244.92 679.234 243.122 cv
679.234 241.395 678.784 239.517 676.914 239.517 cv
cp
f
682.533 240.116 mo
682.533 240.116 li
684.033 240.116 684.113 242.144 684.113 243.122 cv
684.113 244.171 684.033 246.118 682.533 246.118 cv
681.034 246.118 680.884 244.171 680.884 243.122 cv
680.884 242.144 681.034 240.116 682.533 240.116 cv
cp
682.533 239.517 mo
682.533 239.517 li
680.664 239.517 680.214 241.395 680.214 243.122 cv
680.214 244.92 680.664 246.717 682.533 246.717 cv
684.413 246.717 684.863 244.92 684.863 243.122 cv
684.863 241.395 684.413 239.517 682.533 239.517 cv
cp
f
688.162 240.116 mo
688.162 240.116 li
689.582 240.116 689.732 242.144 689.732 243.122 cv
689.732 244.171 689.582 246.118 688.162 246.118 cv
686.663 246.118 686.513 244.171 686.513 243.122 cv
686.513 242.144 686.663 240.116 688.162 240.116 cv
cp
688.162 239.517 mo
688.162 239.517 li
686.213 239.517 685.833 241.395 685.833 243.122 cv
685.833 244.92 686.213 246.717 688.162 246.717 cv
690.032 246.717 690.412 244.92 690.412 243.122 cv
690.412 241.395 690.032 239.517 688.162 239.517 cv
cp
f
671.515 269.715 mo
671.515 269.715 li
672.565 269.715 672.935 270.534 672.935 271.433 cv
672.935 272.411 672.415 273.16 671.365 273.16 cv
670.465 273.16 669.785 272.411 669.785 271.513 cv
669.785 270.464 670.385 269.715 671.515 269.715 cv
cp
671.515 266.57 mo
671.515 266.57 li
669.266 266.57 668.966 268.737 668.966 270.534 cv
668.966 272.182 669.565 273.76 671.435 273.76 cv
672.865 273.76 673.685 272.711 673.685 271.433 cv
673.685 270.085 672.935 269.116 671.515 269.116 cv
670.685 269.116 670.015 269.486 669.716 270.234 cv
669.716 268.966 669.865 267.169 671.515 267.169 cv
672.265 267.169 672.865 267.618 672.865 268.367 cv
673.535 268.367 li
673.535 267.169 672.635 266.57 671.515 266.57 cv
cp
f
676.914 267.169 mo
676.914 267.169 li
678.414 267.169 678.564 269.116 678.564 270.165 cv
678.564 271.213 678.414 273.16 676.914 273.16 cv
675.415 273.16 675.335 271.213 675.335 270.165 cv
675.335 269.116 675.415 267.169 676.914 267.169 cv
cp
676.914 266.57 mo
676.914 266.57 li
675.035 266.57 674.585 268.437 674.585 270.165 cv
674.585 271.882 675.035 273.76 676.914 273.76 cv
678.784 273.76 679.234 271.882 679.234 270.165 cv
679.234 268.437 678.784 266.57 676.914 266.57 cv
cp
f
682.533 267.169 mo
682.533 267.169 li
684.033 267.169 684.113 269.116 684.113 270.165 cv
684.113 271.213 684.033 273.16 682.533 273.16 cv
681.034 273.16 680.884 271.213 680.884 270.165 cv
680.884 269.116 681.034 267.169 682.533 267.169 cv
cp
682.533 266.57 mo
682.533 266.57 li
680.664 266.57 680.214 268.437 680.214 270.165 cv
680.214 271.882 680.664 273.76 682.533 273.76 cv
684.413 273.76 684.863 271.882 684.863 270.165 cv
684.863 268.437 684.413 266.57 682.533 266.57 cv
cp
f
688.162 267.169 mo
688.162 267.169 li
689.582 267.169 689.732 269.116 689.732 270.165 cv
689.732 271.213 689.582 273.16 688.162 273.16 cv
686.663 273.16 686.513 271.213 686.513 270.165 cv
686.513 269.116 686.663 267.169 688.162 267.169 cv
cp
688.162 266.57 mo
688.162 266.57 li
686.213 266.57 685.833 268.437 685.833 270.165 cv
685.833 271.882 686.213 273.76 688.162 273.76 cv
690.032 273.76 690.412 271.882 690.412 270.165 cv
690.412 268.437 690.032 266.57 688.162 266.57 cv
cp
f
669.266 297.726 mo
669.266 297.726 li
669.935 297.726 li
670.085 297.057 670.685 296.678 671.365 296.678 cv
672.415 296.678 672.935 297.357 672.935 298.326 cv
672.935 299.374 672.415 300.203 671.365 300.203 cv
670.535 300.203 669.865 299.753 669.865 298.925 cv
669.116 298.925 li
669.186 300.203 670.235 300.802 671.365 300.802 cv
672.785 300.802 673.615 299.674 673.615 298.405 cv
673.615 297.127 672.785 296.079 671.515 296.079 cv
670.915 296.079 670.385 296.378 670.015 296.828 cv
669.935 296.758 li
670.085 294.361 li
673.315 294.361 li
673.315 293.762 li
669.416 293.762 li
669.266 297.726 li
cp
f
676.914 294.211 mo
676.914 294.211 li
678.414 294.211 678.564 296.159 678.564 297.207 cv
678.564 298.176 678.414 300.203 676.914 300.203 cv
675.415 300.203 675.335 298.176 675.335 297.207 cv
675.335 296.159 675.415 294.211 676.914 294.211 cv
cp
676.914 293.612 mo
676.914 293.612 li
675.035 293.612 674.585 295.41 674.585 297.207 cv
674.585 298.925 675.035 300.802 676.914 300.802 cv
678.784 300.802 679.234 298.925 679.234 297.207 cv
679.234 295.41 678.784 293.612 676.914 293.612 cv
cp
f
682.533 294.211 mo
682.533 294.211 li
684.033 294.211 684.113 296.159 684.113 297.207 cv
684.113 298.176 684.033 300.203 682.533 300.203 cv
681.034 300.203 680.884 298.176 680.884 297.207 cv
680.884 296.159 681.034 294.211 682.533 294.211 cv
cp
682.533 293.612 mo
682.533 293.612 li
680.664 293.612 680.214 295.41 680.214 297.207 cv
680.214 298.925 680.664 300.802 682.533 300.802 cv
684.413 300.802 684.863 298.925 684.863 297.207 cv
684.863 295.41 684.413 293.612 682.533 293.612 cv
cp
f
688.162 294.211 mo
688.162 294.211 li
689.582 294.211 689.732 296.159 689.732 297.207 cv
689.732 298.176 689.582 300.203 688.162 300.203 cv
686.663 300.203 686.513 298.176 686.513 297.207 cv
686.513 296.159 686.663 294.211 688.162 294.211 cv
cp
688.162 293.612 mo
688.162 293.612 li
686.213 293.612 685.833 295.41 685.833 297.207 cv
685.833 298.925 686.213 300.802 688.162 300.802 cv
690.032 300.802 690.412 298.925 690.412 297.207 cv
690.412 295.41 690.032 293.612 688.162 293.612 cv
cp
f
672.035 327.615 mo
672.035 327.615 li
672.635 327.615 li
672.635 326.047 li
673.765 326.047 li
673.765 325.518 li
672.635 325.518 li
672.635 320.724 li
671.815 320.724 li
668.736 325.448 li
668.736 326.047 li
672.035 326.047 li
672.035 327.615 li
cp
672.035 325.518 mo
672.035 325.518 li
669.266 325.518 li
671.965 321.403 li
672.035 321.403 li
672.035 325.518 li
cp
f
676.914 321.174 mo
676.914 321.174 li
678.414 321.174 678.564 323.201 678.564 324.17 cv
678.564 325.218 678.414 327.165 676.914 327.165 cv
675.415 327.165 675.335 325.218 675.335 324.17 cv
675.335 323.201 675.415 321.174 676.914 321.174 cv
cp
676.914 320.575 mo
676.914 320.575 li
675.035 320.575 674.585 322.452 674.585 324.17 cv
674.585 325.967 675.035 327.765 676.914 327.765 cv
678.784 327.765 679.234 325.967 679.234 324.17 cv
679.234 322.452 678.784 320.575 676.914 320.575 cv
cp
f
682.533 321.174 mo
682.533 321.174 li
684.033 321.174 684.113 323.201 684.113 324.17 cv
684.113 325.218 684.033 327.165 682.533 327.165 cv
681.034 327.165 680.884 325.218 680.884 324.17 cv
680.884 323.201 681.034 321.174 682.533 321.174 cv
cp
682.533 320.575 mo
682.533 320.575 li
680.664 320.575 680.214 322.452 680.214 324.17 cv
680.214 325.967 680.664 327.765 682.533 327.765 cv
684.413 327.765 684.863 325.967 684.863 324.17 cv
684.863 322.452 684.413 320.575 682.533 320.575 cv
cp
f
688.162 321.174 mo
688.162 321.174 li
689.582 321.174 689.732 323.201 689.732 324.17 cv
689.732 325.218 689.582 327.165 688.162 327.165 cv
686.663 327.165 686.513 325.218 686.513 324.17 cv
686.513 323.201 686.663 321.174 688.162 321.174 cv
cp
688.162 320.575 mo
688.162 320.575 li
686.213 320.575 685.833 322.452 685.833 324.17 cv
685.833 325.967 686.213 327.765 688.162 327.765 cv
690.032 327.765 690.412 325.967 690.412 324.17 cv
690.412 322.452 690.032 320.575 688.162 320.575 cv
cp
f
670.765 351.364 mo
670.765 351.364 li
671.735 351.214 672.785 351.664 672.785 352.713 cv
672.785 353.761 672.035 354.211 671.135 354.211 cv
670.315 354.211 669.565 353.687 669.565 352.863 cv
668.816 352.863 li
668.886 354.136 669.935 354.81 671.135 354.81 cv
672.335 354.81 673.535 354.136 673.535 352.788 cv
673.535 351.889 672.865 351.289 671.965 351.064 cv
672.785 350.914 673.385 350.315 673.385 349.491 cv
673.385 348.143 672.265 347.619 671.065 347.619 cv
670.015 347.619 668.966 348.293 668.966 349.491 cv
669.635 349.491 li
669.716 348.668 670.315 348.218 671.135 348.218 cv
671.965 348.218 672.715 348.668 672.715 349.491 cv
672.715 350.465 671.665 350.84 670.765 350.765 cv
670.765 351.364 li
cp
f
676.914 348.218 mo
676.914 348.218 li
678.414 348.218 678.564 350.165 678.564 351.214 cv
678.564 352.264 678.414 354.211 676.914 354.211 cv
675.415 354.211 675.335 352.264 675.335 351.214 cv
675.335 350.165 675.415 348.218 676.914 348.218 cv
cp
676.914 347.619 mo
676.914 347.619 li
675.035 347.619 674.585 349.491 674.585 351.214 cv
674.585 352.938 675.035 354.81 676.914 354.81 cv
678.784 354.81 679.234 352.938 679.234 351.214 cv
679.234 349.491 678.784 347.619 676.914 347.619 cv
cp
f
682.533 348.218 mo
682.533 348.218 li
684.033 348.218 684.113 350.165 684.113 351.214 cv
684.113 352.264 684.033 354.211 682.533 354.211 cv
681.034 354.211 680.884 352.264 680.884 351.214 cv
680.884 350.165 681.034 348.218 682.533 348.218 cv
cp
682.533 347.619 mo
682.533 347.619 li
680.664 347.619 680.214 349.491 680.214 351.214 cv
680.214 352.938 680.664 354.81 682.533 354.81 cv
684.413 354.81 684.863 352.938 684.863 351.214 cv
684.863 349.491 684.413 347.619 682.533 347.619 cv
cp
f
688.162 348.218 mo
688.162 348.218 li
689.582 348.218 689.732 350.165 689.732 351.214 cv
689.732 352.264 689.582 354.211 688.162 354.211 cv
686.663 354.211 686.513 352.264 686.513 351.214 cv
686.513 350.165 686.663 348.218 688.162 348.218 cv
cp
688.162 347.619 mo
688.162 347.619 li
686.213 347.619 685.833 349.491 685.833 351.214 cv
685.833 352.938 686.213 354.81 688.162 354.81 cv
690.032 354.81 690.412 352.938 690.412 351.214 cv
690.412 349.491 690.032 347.619 688.162 347.619 cv
cp
f
673.385 381.704 mo
673.385 381.704 li
673.385 381.103 li
669.785 381.103 li
670.915 380.055 673.315 378.033 673.315 376.385 cv
673.315 375.186 672.335 374.661 671.215 374.661 cv
670.015 374.661 669.116 375.41 669.116 376.61 cv
669.785 376.61 li
669.785 375.785 670.385 375.261 671.215 375.261 cv
671.965 375.261 672.635 375.635 672.635 376.46 cv
672.635 377.658 669.935 380.205 669.036 381.029 cv
669.036 381.704 li
673.385 381.704 li
cp
f
676.914 375.261 mo
676.914 375.261 li
678.414 375.261 678.564 377.209 678.564 378.257 cv
678.564 379.231 678.414 381.253 676.914 381.253 cv
675.415 381.253 675.335 379.231 675.335 378.257 cv
675.335 377.209 675.415 375.261 676.914 375.261 cv
cp
676.914 374.661 mo
676.914 374.661 li
675.035 374.661 674.585 376.46 674.585 378.257 cv
674.585 379.98 675.035 381.853 676.914 381.853 cv
678.784 381.853 679.234 379.98 679.234 378.257 cv
679.234 376.46 678.784 374.661 676.914 374.661 cv
cp
f
682.533 375.261 mo
682.533 375.261 li
684.033 375.261 684.113 377.209 684.113 378.257 cv
684.113 379.231 684.033 381.253 682.533 381.253 cv
681.034 381.253 680.884 379.231 680.884 378.257 cv
680.884 377.209 681.034 375.261 682.533 375.261 cv
cp
682.533 374.661 mo
682.533 374.661 li
680.664 374.661 680.214 376.46 680.214 378.257 cv
680.214 379.98 680.664 381.853 682.533 381.853 cv
684.413 381.853 684.863 379.98 684.863 378.257 cv
684.863 376.46 684.413 374.661 682.533 374.661 cv
cp
f
688.162 375.261 mo
688.162 375.261 li
689.582 375.261 689.732 377.209 689.732 378.257 cv
689.732 379.231 689.582 381.253 688.162 381.253 cv
686.663 381.253 686.513 379.231 686.513 378.257 cv
686.513 377.209 686.663 375.261 688.162 375.261 cv
cp
688.162 374.661 mo
688.162 374.661 li
686.213 374.661 685.833 376.46 685.833 378.257 cv
685.833 379.98 686.213 381.853 688.162 381.853 cv
690.032 381.853 690.412 379.98 690.412 378.257 cv
690.412 376.46 690.032 374.661 688.162 374.661 cv
cp
f
669.716 403.502 mo
669.716 403.502 li
670.235 403.278 670.765 402.903 671.285 402.529 cv
671.285 408.671 li
671.885 408.671 li
671.885 401.78 li
671.285 401.78 li
670.835 402.229 670.315 402.678 669.716 402.903 cv
669.716 403.502 li
cp
f
676.914 402.229 mo
676.914 402.229 li
678.414 402.229 678.564 404.251 678.564 405.225 cv
678.564 406.275 678.414 408.222 676.914 408.222 cv
675.415 408.222 675.335 406.275 675.335 405.225 cv
675.335 404.251 675.415 402.229 676.914 402.229 cv
cp
676.914 401.63 mo
676.914 401.63 li
675.035 401.63 674.585 403.502 674.585 405.225 cv
674.585 407.023 675.035 408.821 676.914 408.821 cv
678.784 408.821 679.234 407.023 679.234 405.225 cv
679.234 403.502 678.784 401.63 676.914 401.63 cv
cp
f
682.533 402.229 mo
682.533 402.229 li
684.033 402.229 684.113 404.251 684.113 405.225 cv
684.113 406.275 684.033 408.222 682.533 408.222 cv
681.034 408.222 680.884 406.275 680.884 405.225 cv
680.884 404.251 681.034 402.229 682.533 402.229 cv
cp
682.533 401.63 mo
682.533 401.63 li
680.664 401.63 680.214 403.502 680.214 405.225 cv
680.214 407.023 680.664 408.821 682.533 408.821 cv
684.413 408.821 684.863 407.023 684.863 405.225 cv
684.863 403.502 684.413 401.63 682.533 401.63 cv
cp
f
688.162 402.229 mo
688.162 402.229 li
689.582 402.229 689.732 404.251 689.732 405.225 cv
689.732 406.275 689.582 408.222 688.162 408.222 cv
686.663 408.222 686.513 406.275 686.513 405.225 cv
686.513 404.251 686.663 402.229 688.162 402.229 cv
cp
688.162 401.63 mo
688.162 401.63 li
686.213 401.63 685.833 403.502 685.833 405.225 cv
685.833 407.023 686.213 408.821 688.162 408.821 cv
690.032 408.821 690.412 407.023 690.412 405.225 cv
690.412 403.502 690.032 401.63 688.162 401.63 cv
cp
f
624.413 87.5283 mo
599.587 94.0492 li
574.761 101.459 li
549.855 118.465 li
525.029 114.641 li
500.213 118.615 li
475.307 126.704 li
450.481 134.943 li
425.655 142.662 li
400.759 155.694 li
375.933 164.981 li
351.107 169.784 li
326.201 171.951 li
301.375 178.093 li
276.549 182.137 li
251.654 183.415 li
226.828 185.962 li
201.932 192.483 li
177.106 198.245 li
152.28 201.24 li
127.377 202.439 li
102.551 203.787 li
77.7259 204.985 li
52.825 207.312 li
28.0001 211.726 li
28.0001 423.953 li
649.309 423.953 li
649.309 80.5581 li
624.413 87.5283 li
1 /0 /CSD get_res sepcs
.2 sep
f
624.413 187.679 mo
599.587 191.953 li
574.761 195.029 li
549.855 205.814 li
525.029 202.668 li
500.213 205.065 li
475.307 209.778 li
450.481 213.903 li
425.655 218.177 li
400.759 226.186 li
375.933 230.01 li
351.107 233.306 li
326.201 235.173 li
301.375 238.998 li
276.549 242.972 li
251.654 245.069 li
226.828 247.536 li
201.932 252.859 li
177.106 257.053 li
152.28 259.669 li
127.377 260.718 li
102.551 262.665 li
77.7259 264.692 li
52.825 268.367 li
28.0001 272.332 li
28.0001 423.953 li
649.309 423.953 li
649.309 183.785 li
624.413 187.679 li
/1 
[/DeviceCMYK] /CSA add_res
3.0518e-5 .765866 1 .000274662 cmyk
f
624.413 194.2 mo
599.587 197.495 li
574.761 199.593 li
549.855 209.708 li
525.029 206.034 li
500.213 207.981 li
475.307 212.325 li
450.481 216.15 li
425.655 220.194 li
400.759 227.983 li
375.933 231.658 li
351.107 234.724 li
326.201 236.601 li
301.375 240.346 li
276.549 244.171 li
251.654 246.188 li
226.828 248.585 li
201.932 253.827 li
177.106 258.021 li
152.28 260.568 li
127.377 261.616 li
102.551 263.494 li
77.7259 265.521 li
52.825 269.036 li
28.0001 272.781 li
28.0001 423.953 li
649.309 423.953 li
649.309 191.354 li
624.413 194.2 li
.783322 .218265 3.0518e-5 3.0518e-5 cmyk
f
624.413 216.679 mo
599.587 218.926 li
574.761 220.723 li
549.855 229.561 li
525.029 225.666 li
500.213 226.865 li
475.307 230.909 li
450.481 234.055 li
425.655 237.35 li
400.759 244.091 li
375.933 247.836 li
351.107 250.612 li
326.201 252.779 li
301.375 256.374 li
276.549 260.049 li
251.654 261.916 li
226.828 264.013 li
201.932 269.036 li
177.106 272.481 li
152.28 274.878 li
127.377 275.108 li
102.551 276.975 li
77.7259 278.703 li
52.825 281.768 li
28.0001 285.513 li
28.0001 423.953 li
649.309 423.953 li
649.309 214.422 li
624.413 216.679 li
.00396735 .409064 1 3.0518e-5 cmyk
f
624.413 231.808 mo
599.587 235.173 li
574.761 237.65 li
549.855 246.118 li
525.029 242.373 li
500.213 243.642 li
475.307 248.065 li
450.481 250.911 li
425.655 254.207 li
400.759 260.268 li
375.933 264.313 li
351.107 266.789 li
326.201 268.587 li
301.375 271.732 li
276.549 274.878 li
251.654 276.456 li
226.828 278.703 li
201.932 283.197 li
177.106 286.043 li
152.28 288.289 li
127.377 287.99 li
102.551 289.787 li
77.7259 290.916 li
52.825 293.612 li
28.0001 297.057 li
28.0001 423.953 li
649.309 423.953 li
649.309 229.631 li
624.413 231.808 li
.00515755 1 1 3.0518e-5 cmyk
f
624.413 312.336 mo
599.587 313.754 li
574.761 314.962 li
549.855 318.108 li
525.029 316.081 li
500.213 315.562 li
475.307 317.209 li
450.481 318.258 li
425.655 319.606 li
400.759 323.5 li
375.933 325.747 li
351.107 326.566 li
326.201 327.315 li
301.375 328.214 li
276.549 330.091 li
251.654 330.691 li
226.828 333.087 li
201.932 335.104 li
177.106 336.233 li
152.28 338.03 li
127.377 337.202 li
102.551 338.699 li
77.7259 338.699 li
52.825 340.127 li
28.0001 341.555 li
28.0001 423.953 li
649.309 423.953 li
649.309 311.058 li
624.413 312.336 li
.588067 3.0518e-5 1 3.0518e-5 cmyk
f
28.0001 424.44 mo
690.862 424.44 li
690.862 423.167 li
28.0001 423.167 li
28.0001 424.44 li
1 /0 /CSD get_res sepcs
1 sep
f
gsave
28.0001 73.0684 mo
28.0001 443.954 li
691.612 443.954 li
691.612 73.0684 li
28.0001 73.0684 li
clp
28.0001 72.9985 mo
691.162 72.9985 li
691.162 73.298 li
27.9999 73.2982 li
27.9999 72.9985 li
27.9249 72.9985 li
28.0001 72.9985 li
f
grestore
43.6754 84.0032 mo
43.6754 84.0032 li
43.6005 82.735 42.4756 82.2057 41.2748 82.2057 cv
39.1002 82.2057 38.2003 83.9333 38.2003 85.9505 cv
38.2003 87.8978 39.1002 89.6953 41.2748 89.6953 cv
42.4756 89.6953 43.5255 88.9464 43.7504 87.748 cv
43.0755 87.748 li
42.9256 88.6468 42.1007 89.0962 41.2748 89.0962 cv
39.4751 89.0962 38.8752 87.3785 38.8752 85.9505 cv
38.8752 84.4526 39.4751 82.8049 41.2748 82.8049 cv
42.1007 82.8049 42.8506 83.1045 43.0006 84.0032 cv
43.6754 84.0032 li
cp
.751888 .689082 .633234 .883757 cmyk
f
48.8506 86.9991 mo
48.8506 86.9991 li
48.8506 87.9777 48.4007 89.0962 47.1999 89.0962 cv
46.0001 89.0962 45.4752 87.9777 45.4752 86.9991 cv
45.4752 86.1003 46.0001 84.902 47.1999 84.902 cv
48.4007 84.902 48.8506 86.1003 48.8506 86.9991 cv
cp
47.1999 84.3827 mo
47.1999 84.3827 li
45.6251 84.3827 44.8753 85.7308 44.8753 86.9991 cv
44.8753 88.3472 45.6251 89.6953 47.1999 89.6953 cv
48.7756 89.6953 49.5255 88.3472 49.5255 86.9991 cv
49.5255 85.7308 48.7756 84.3827 47.1999 84.3827 cv
cp
f
51.1002 88.1275 mo
51.1002 88.1275 li
51.1002 86.8493 52.825 86.9991 53.7258 86.9991 cv
53.7258 88.0476 53.5008 89.0962 52.2251 89.0962 cv
51.6252 89.0962 51.1002 88.7966 51.1002 88.1275 cv
cp
53.7258 86.4798 mo
53.7258 86.4798 li
52.9759 86.4798 52.0751 86.3999 51.4002 86.6995 cv
50.8003 86.9292 50.4253 87.4485 50.4253 88.1275 cv
50.4253 89.0962 51.1752 89.6953 52.0751 89.6953 cv
52.75 89.6953 53.5008 89.3259 53.6508 88.8765 cv
53.7258 88.7966 li
53.7258 89.5456 li
54.3257 89.5456 li
54.3257 89.176 54.3257 88.7966 54.3257 88.4271 cv
54.3257 86.0304 li
54.3257 84.902 53.6508 84.3827 52.525 84.3827 cv
51.5502 84.3827 50.8003 84.7522 50.6503 85.8008 cv
51.2502 85.8008 li
51.4002 85.1317 51.8501 84.902 52.525 84.902 cv
53.2009 84.902 53.7258 85.2016 53.7258 86.0304 cv
53.7258 86.4798 li
cp
f
56.4254 82.3555 mo
56.4254 82.3555 li
55.8255 82.3555 li
55.8255 89.5456 li
56.4254 89.5456 li
56.4254 82.3555 li
cp
f
39.2502 97.4945 mo
39.2502 97.4945 li
39.2502 94.9481 li
40.7499 94.9481 li
41.4248 94.9481 42.7006 94.7982 42.7006 96.2163 cv
42.7006 97.4146 41.5748 97.4945 40.6749 97.4945 cv
39.2502 97.4945 li
cp
39.2502 98.0937 mo
39.2502 98.0937 li
41.0499 98.0937 li
42.3257 98.0937 42.4756 98.3932 42.6256 100.041 cv
42.6256 100.49 42.7006 101.01 42.8506 101.539 cv
43.6005 101.539 li
43.3005 101.09 43.3755 100.56 43.2255 99.3619 cv
43.1505 98.543 42.9256 97.9439 42.0257 97.7941 cv
42.0257 97.7142 li
42.8506 97.5644 43.3755 96.9652 43.3755 96.2163 cv
43.3755 95.5472 43.1505 95.0179 42.7006 94.7184 cv
42.1007 94.3489 41.5748 94.3489 40.9749 94.3489 cv
38.6503 94.3489 li
38.6503 101.539 li
39.2502 101.539 li
39.2502 98.0937 li
cp
f
49.3005 99.1422 mo
49.3005 99.1422 li
49.3005 97.5644 48.6256 96.3661 46.9749 96.3661 cv
45.4752 96.3661 44.7253 97.6443 44.7253 98.9924 cv
44.7253 100.341 45.4752 101.689 46.9749 101.689 cv
48.1757 101.689 48.9256 101.09 49.2255 99.8912 cv
48.5507 99.8912 li
48.4007 100.64 47.8008 101.09 47.1249 101.09 cv
45.9251 101.09 45.4002 100.191 45.4002 99.1422 cv
49.3005 99.1422 li
cp
45.4002 98.6129 mo
45.4002 98.6129 li
45.4752 97.7142 46.0001 96.8953 46.9749 96.8953 cv
48.0257 96.8953 48.5507 97.6443 48.6256 98.6129 cv
45.4002 98.6129 li
cp
f
51.1752 98.6129 mo
51.1752 98.6129 li
51.1752 97.7142 51.6252 96.8953 52.6 96.8953 cv
53.4259 96.8953 53.9508 97.4146 53.9508 98.3134 cv
53.9508 101.539 li
54.5507 101.539 li
54.5507 98.3932 li
54.5507 97.7941 54.4007 96.3661 52.75 96.3661 cv
52.1501 96.3661 51.5502 96.6656 51.2502 97.2648 cv
51.1752 97.2648 li
51.1752 96.5158 li
50.5753 96.5158 li
50.5753 96.8155 50.5753 97.2648 50.5753 97.6443 cv
50.5753 101.539 li
51.1752 101.539 li
51.1752 98.6129 li
cp
f
60.3257 99.1422 mo
60.3257 99.1422 li
60.3257 97.5644 59.7258 96.3661 58.0751 96.3661 cv
56.5753 96.3661 55.8255 97.6443 55.8255 98.9924 cv
55.8255 100.341 56.5004 101.689 58.0001 101.689 cv
59.2009 101.689 59.9508 101.09 60.3257 99.8912 cv
59.6508 99.8912 li
59.5009 100.64 58.901 101.09 58.2251 101.09 cv
57.0253 101.09 56.5004 100.191 56.5004 99.1422 cv
60.3257 99.1422 li
cp
56.5004 98.6129 mo
56.5004 98.6129 li
56.5753 97.7142 57.1003 96.8953 58.0751 96.8953 cv
59.1259 96.8953 59.6508 97.6443 59.7258 98.6129 cv
56.5004 98.6129 li
cp
f
61.6005 96.5158 mo
61.6005 96.5158 li
60.9256 96.5158 li
62.8003 101.539 li
63.4002 101.539 li
64.976 97.1949 li
66.4757 101.539 li
67.0756 101.539 li
68.9503 96.5158 li
68.2754 96.5158 li
66.8507 100.71 li
65.3509 96.5158 li
64.601 96.5158 li
63.1003 100.71 li
61.6005 96.5158 li
cp
f
70.1511 100.111 mo
70.1511 100.111 li
70.1511 98.8426 71.8759 98.9924 72.7757 98.9924 cv
72.7757 100.041 72.5507 101.09 71.276 101.09 cv
70.676 101.09 70.1511 100.79 70.1511 100.111 cv
cp
72.7757 98.4632 mo
72.7757 98.4632 li
72.0258 98.4632 71.126 98.3932 70.4511 98.6928 cv
69.8512 98.9125 69.4752 99.4418 69.4752 100.111 cv
69.4752 101.09 70.2261 101.689 71.126 101.689 cv
71.8009 101.689 72.5507 101.309 72.7007 100.86 cv
72.7007 100.79 li
72.7757 100.79 li
72.7757 101.539 li
73.3756 101.539 li
73.3756 101.159 73.3756 100.79 73.3756 100.41 cv
73.3756 98.0138 li
73.3756 96.8953 72.7007 96.3661 71.5759 96.3661 cv
70.6011 96.3661 69.8512 96.7455 69.7012 97.7941 cv
70.3011 97.7941 li
70.3761 97.115 70.901 96.8953 71.5759 96.8953 cv
72.2508 96.8953 72.7757 97.1949 72.7757 98.0138 cv
72.7757 98.4632 li
cp
f
77.051 96.8953 mo
77.051 96.8953 li
78.1758 96.8953 78.5508 98.0138 78.5508 98.9125 cv
78.5508 99.8912 78.3258 101.09 77.126 101.09 cv
75.8512 101.09 75.4763 100.041 75.4763 98.9125 cv
75.4763 97.864 75.9262 96.8953 77.051 96.8953 cv
cp
75.4763 100.79 mo
75.4763 100.79 li
75.4763 100.71 li
75.8512 101.309 76.4511 101.689 77.201 101.689 cv
78.6258 101.689 79.2257 100.261 79.2257 98.9924 cv
79.2257 97.7142 78.6258 96.3661 77.201 96.3661 cv
76.5261 96.3661 75.7762 96.6656 75.4763 97.2648 cv
75.4763 94.3489 li
74.8754 94.3489 li
74.8754 100.41 li
74.8754 100.79 74.8004 101.159 74.8004 101.539 cv
75.4013 101.539 li
75.4763 100.79 li
cp
f
81.1763 94.3489 mo
81.1763 94.3489 li
80.5764 94.3489 li
80.5764 101.539 li
81.1763 101.539 li
81.1763 94.3489 li
cp
f
86.9514 99.1422 mo
86.9514 99.1422 li
86.9514 97.5644 86.3515 96.3661 84.7008 96.3661 cv
83.201 96.3661 82.4511 97.6443 82.4511 98.9924 cv
82.4511 100.341 83.201 101.689 84.6258 101.689 cv
85.9006 101.689 86.6514 101.09 86.9514 99.8912 cv
86.2765 99.8912 li
86.1265 100.64 85.5256 101.09 84.8507 101.09 cv
83.6509 101.09 83.126 100.191 83.126 99.1422 cv
86.9514 99.1422 li
cp
83.126 98.6129 mo
83.126 98.6129 li
83.201 97.7142 83.7259 96.8953 84.7008 96.8953 cv
85.7506 96.8953 86.2765 97.6443 86.3515 98.6129 cv
83.126 98.6129 li
cp
f
88.1512 97.7142 mo
88.1512 97.7142 li
88.1512 98.6928 88.9761 98.9125 89.726 99.0623 cv
90.5508 99.292 91.3007 99.3619 91.3007 100.111 cv
91.3007 100.79 90.6258 101.09 90.0259 101.09 cv
89.351 101.09 88.6761 100.86 88.6011 100.111 cv
88.0012 100.111 li
88.0012 101.239 88.9761 101.689 89.8759 101.689 cv
90.9258 101.689 91.9766 101.159 91.9766 100.041 cv
91.9766 99.5117 91.6006 99.0623 91.1507 98.8426 cv
89.726 98.3932 88.8261 98.4632 88.8261 97.7142 cv
88.8261 97.115 89.351 96.8953 89.9509 96.8953 cv
90.5508 96.8953 91.0757 97.115 91.1507 97.7142 cv
91.8266 97.7142 li
91.7516 96.6656 90.9258 96.3661 89.9509 96.3661 cv
89.126 96.3661 88.1512 96.7455 88.1512 97.7142 cv
cp
f
39.2502 113.522 mo
39.2502 113.522 li
39.2502 110.077 li
43.1505 110.077 li
43.1505 113.522 li
43.8254 113.522 li
43.8254 106.332 li
43.1505 106.332 li
43.1505 109.478 li
39.2502 109.478 li
39.2502 106.332 li
38.5753 106.332 li
38.5753 113.522 li
39.2502 113.522 li
cp
f
45.0252 108.499 mo
45.0252 108.499 li
47.0499 113.522 li
46.3 115.39 li
46.9749 115.39 li
49.7505 108.499 li
49.0756 108.499 li
47.4258 112.693 li
45.7001 108.499 li
45.0252 108.499 li
cp
f
54.0258 110.896 mo
54.0258 110.896 li
54.0258 112.024 53.6508 113.073 52.375 113.073 cv
51.1752 113.073 50.9503 111.795 50.9503 110.896 cv
50.9503 109.927 51.3252 108.879 52.45 108.879 cv
53.5758 108.879 54.0258 109.847 54.0258 110.896 cv
cp
54.1007 113.522 mo
54.1007 113.522 li
54.7007 113.522 li
54.7007 113.143 54.7007 112.773 54.7007 112.394 cv
54.7007 106.332 li
54.1007 106.332 li
54.1007 109.248 li
54.0258 109.248 li
53.7258 108.649 52.9759 108.349 52.375 108.349 cv
50.8753 108.349 50.2754 109.698 50.2754 110.976 cv
50.2754 112.244 50.8753 113.672 52.375 113.672 cv
53.0509 113.672 53.6508 113.293 54.0258 112.693 cv
54.1007 112.773 li
54.1007 113.522 li
cp
f
56.8003 110.447 mo
56.8003 110.447 li
56.8003 109.548 57.3252 108.879 58.2251 108.879 cv
58.526 108.949 li
58.526 108.349 li
58.3751 108.349 58.1501 108.349 58.0001 108.349 cv
57.4752 108.349 57.0253 108.729 56.8003 109.248 cv
56.8003 108.499 li
56.2004 108.499 li
56.2004 108.799 56.2004 109.248 56.2004 109.628 cv
56.2004 113.522 li
56.8003 113.522 li
56.8003 110.447 li
cp
f
63.1003 110.976 mo
63.1003 110.976 li
63.1003 111.944 62.5754 113.073 61.3756 113.073 cv
60.1758 113.073 59.7258 111.944 59.7258 110.976 cv
59.7258 110.077 60.1758 108.879 61.3756 108.879 cv
62.5754 108.879 63.1003 110.077 63.1003 110.976 cv
cp
61.3756 108.349 mo
61.3756 108.349 li
59.8008 108.349 59.0509 109.698 59.0509 110.976 cv
59.0509 112.324 59.8008 113.672 61.3756 113.672 cv
63.0253 113.672 63.7002 112.324 63.7002 110.976 cv
63.7002 109.698 63.0253 108.349 61.3756 108.349 cv
cp
f
69.2503 111.126 mo
69.2503 111.126 li
69.2503 109.548 68.6504 108.349 67.0006 108.349 cv
65.5009 108.349 64.751 109.628 64.751 110.976 cv
64.751 112.324 65.4259 113.672 66.9257 113.672 cv
68.1255 113.672 68.8753 113.073 69.1753 111.875 cv
68.5754 111.875 li
68.4254 112.623 67.8255 113.073 67.1506 113.073 cv
65.8758 113.073 65.4259 112.174 65.4259 111.126 cv
69.2503 111.126 li
cp
65.4259 110.596 mo
65.4259 110.596 li
65.5009 109.698 66.0258 108.879 67.0006 108.879 cv
68.0505 108.879 68.5754 109.628 68.5754 110.596 cv
65.4259 110.596 li
cp
f
71.201 106.332 mo
71.201 106.332 li
70.6011 106.332 li
70.6011 113.522 li
71.201 113.522 li
71.201 106.332 li
cp
f
77.051 111.126 mo
77.051 111.126 li
77.051 109.548 76.4511 108.349 74.7254 108.349 cv
73.2256 108.349 72.4758 109.628 72.4758 110.976 cv
72.4758 112.324 73.2256 113.672 74.7254 113.672 cv
75.9262 113.672 76.6761 113.073 76.976 111.875 cv
76.3011 111.875 li
76.1512 112.623 75.6262 113.073 74.8754 113.073 cv
73.6756 113.073 73.1507 112.174 73.1507 111.126 cv
77.051 111.126 li
cp
73.1507 110.596 mo
73.1507 110.596 li
73.2256 109.698 73.7505 108.879 74.7254 108.879 cv
75.7762 108.879 76.3011 109.628 76.3761 110.596 cv
73.1507 110.596 li
cp
f
82.2262 109.997 mo
82.2262 109.997 li
82.1512 108.949 81.3263 108.349 80.2755 108.349 cv
78.7757 108.349 78.0258 109.628 78.0258 110.976 cv
78.0258 112.324 78.7757 113.672 80.2755 113.672 cv
81.4013 113.672 82.0762 113.073 82.2262 111.944 cv
81.5513 111.944 li
81.4763 112.623 80.9514 113.073 80.2005 113.073 cv
79.3006 113.073 78.7007 112.094 78.7007 110.976 cv
78.7007 109.847 79.3006 108.879 80.2005 108.879 cv
81.0264 108.879 81.4763 109.248 81.5513 109.997 cv
82.2262 109.997 li
cp
f
83.8759 112.174 mo
83.8759 112.174 li
83.8759 112.843 83.8009 113.672 85.0757 113.672 cv
85.3007 113.672 85.5256 113.592 85.6756 113.522 cv
85.6756 113.073 li
85.5256 113.073 85.3757 113.073 85.2257 113.073 cv
84.7008 113.073 84.4758 112.843 84.4758 112.394 cv
84.4758 109.028 li
85.6006 109.028 li
85.6006 108.499 li
84.4758 108.499 li
84.4758 107.151 li
83.8759 107.451 li
83.8759 108.499 li
82.9011 108.499 li
82.9011 109.028 li
83.8759 109.028 li
83.8759 112.174 li
cp
f
87.4013 110.447 mo
87.4013 110.447 li
87.4013 109.548 87.8513 108.879 88.7511 108.879 cv
88.9011 108.879 88.9761 108.949 89.126 108.949 cv
89.126 108.349 li
88.9011 108.349 88.7511 108.349 88.5261 108.349 cv
88.0012 108.349 87.5513 108.729 87.4013 109.248 cv
87.3263 108.499 li
86.7264 108.499 li
86.7264 108.799 86.8014 109.248 86.8014 109.628 cv
86.8014 113.522 li
87.4013 113.522 li
87.4013 110.447 li
cp
f
90.1759 108.499 mo
90.1759 108.499 li
90.1759 113.522 li
90.7758 113.522 li
90.7758 108.499 li
90.1759 108.499 li
cp
90.7758 106.332 mo
90.7758 106.332 li
90.1009 106.332 li
90.1009 107.081 li
90.7758 107.081 li
90.7758 106.332 li
cp
f
96.1759 109.997 mo
96.1759 109.997 li
96.1009 108.949 95.276 108.349 94.2262 108.349 cv
92.7265 108.349 91.9766 109.628 91.9766 110.976 cv
91.9766 112.324 92.7265 113.672 94.2262 113.672 cv
95.351 113.672 96.0259 113.073 96.1759 111.944 cv
95.501 111.944 li
95.426 112.623 94.9011 113.073 94.1512 113.073 cv
93.2514 113.073 92.6515 112.094 92.6515 110.976 cv
92.6515 109.847 93.2514 108.879 94.1512 108.879 cv
94.9761 108.879 95.426 109.248 95.501 109.997 cv
96.1759 109.997 li
cp
f
97.3767 108.499 mo
97.3767 108.499 li
97.3767 113.522 li
97.9766 113.522 li
97.9766 108.499 li
97.3767 108.499 li
cp
98.0516 106.332 mo
98.0516 106.332 li
97.3767 106.332 li
97.3767 107.081 li
98.0516 107.081 li
98.0516 106.332 li
cp
f
100.001 112.174 mo
100.001 112.174 li
100.001 112.843 99.9263 113.672 101.201 113.672 cv
101.426 113.672 101.651 113.592 101.801 113.522 cv
101.801 113.073 li
101.651 113.073 101.501 113.073 101.351 113.073 cv
100.826 113.073 100.601 112.843 100.601 112.394 cv
100.601 109.028 li
101.801 109.028 li
101.801 108.499 li
100.601 108.499 li
100.601 107.151 li
100.001 107.451 li
100.001 108.499 li
99.0264 108.499 li
99.0264 109.028 li
100.001 109.028 li
100.001 112.174 li
cp
f
102.476 108.499 mo
102.476 108.499 li
104.577 113.522 li
103.827 115.39 li
104.502 115.39 li
107.276 108.499 li
106.601 108.499 li
104.951 112.693 li
103.227 108.499 li
102.476 108.499 li
cp
f
38.5003 125.506 mo
38.5003 125.506 li
39.1752 125.506 li
39.1752 119.294 li
43.0755 125.506 li
43.9004 125.506 li
43.9004 118.316 li
43.2255 118.316 li
43.2255 124.607 li
39.2502 118.316 li
38.5003 118.316 li
38.5003 125.506 li
cp
f
49.0006 123.339 mo
49.0006 123.339 li
49.0006 124.237 48.5507 125.056 47.5758 125.056 cv
46.7499 125.056 46.3 124.607 46.3 123.708 cv
46.3 120.493 li
45.7001 120.493 li
45.7001 123.638 li
45.7001 124.157 45.7751 125.655 47.4258 125.655 cv
48.1007 125.655 48.6256 125.356 49.0006 124.757 cv
49.0756 125.506 li
49.6755 125.506 li
49.6755 125.136 49.6005 124.757 49.6005 124.387 cv
49.6005 120.493 li
49.0006 120.493 li
49.0006 123.339 li
cp
f
55.0756 121.99 mo
55.0756 121.99 li
55.0006 120.942 54.1757 120.343 53.1259 120.343 cv
51.6252 120.343 50.8753 121.611 50.8753 122.959 cv
50.8753 124.307 51.6252 125.655 53.1259 125.655 cv
54.2507 125.655 54.9256 125.056 55.0756 123.938 cv
54.4007 123.938 li
54.3257 124.607 53.8008 125.056 53.0509 125.056 cv
52.1501 125.056 51.5502 124.088 51.5502 122.959 cv
51.5502 121.841 52.1501 120.862 53.0509 120.862 cv
53.8758 120.862 54.3257 121.242 54.4007 121.99 cv
55.0756 121.99 li
cp
f
56.8753 118.316 mo
56.8753 118.316 li
56.2754 118.316 li
56.2754 125.506 li
56.8753 125.506 li
56.8753 118.316 li
cp
f
62.7253 123.109 mo
62.7253 123.109 li
62.7253 121.541 62.1254 120.343 60.4757 120.343 cv
58.976 120.343 58.2251 121.611 58.2251 122.959 cv
58.2251 124.307 58.901 125.655 60.4007 125.655 cv
61.6005 125.655 62.3504 125.056 62.6504 123.858 cv
62.0505 123.858 li
61.9005 124.607 61.3006 125.056 60.6257 125.056 cv
59.3509 125.056 58.901 124.157 58.826 123.109 cv
62.7253 123.109 li
cp
58.901 122.59 mo
58.901 122.59 li
58.976 121.691 59.5009 120.862 60.4757 120.862 cv
61.5255 120.862 61.9755 121.611 62.0505 122.59 cv
58.901 122.59 li
cp
f
64.3011 124.088 mo
64.3011 124.088 li
64.3011 122.809 66.1008 122.959 66.9257 122.959 cv
67.0006 124.008 66.7757 125.056 65.4259 125.056 cv
64.826 125.056 64.3011 124.757 64.3011 124.088 cv
cp
66.9257 122.44 mo
66.9257 122.44 li
66.2508 122.44 65.3509 122.36 64.676 122.66 cv
64.0761 122.889 63.7002 123.409 63.7002 124.088 cv
63.7002 125.056 64.4511 125.655 65.3509 125.655 cv
66.0258 125.655 66.7007 125.286 66.9257 124.837 cv
66.9257 124.757 li
67.0006 125.506 li
67.6005 125.506 li
67.6005 125.136 67.5256 124.757 67.5256 124.387 cv
67.5256 121.99 li
67.5256 120.862 66.8507 120.343 65.8008 120.343 cv
64.826 120.343 64.0761 120.712 63.9251 121.761 cv
64.5261 121.761 li
64.601 121.092 65.126 120.862 65.8008 120.862 cv
66.4757 120.862 66.9257 121.162 66.9257 121.99 cv
66.9257 122.44 li
cp
f
69.7012 122.44 mo
69.7012 122.44 li
69.7012 121.541 70.1511 120.862 71.051 120.862 cv
71.201 120.862 71.3509 120.942 71.4259 120.942 cv
71.4259 120.343 li
71.276 120.343 71.051 120.343 70.826 120.343 cv
70.3761 120.343 69.9262 120.712 69.7012 121.242 cv
69.7012 120.493 li
69.0253 120.493 li
69.1003 120.792 69.1003 121.242 69.1003 121.611 cv
69.1003 125.506 li
69.7012 125.506 li
69.7012 122.44 li
cp
f
79.4506 123.109 mo
79.4506 123.109 li
79.4506 121.541 78.8507 120.343 77.126 120.343 cv
75.6262 120.343 74.8754 121.611 74.8754 122.959 cv
74.8754 124.307 75.6262 125.655 77.126 125.655 cv
78.3258 125.655 79.0757 125.056 79.3756 123.858 cv
78.7757 123.858 li
78.6258 124.607 78.0258 125.056 77.276 125.056 cv
76.0762 125.056 75.5513 124.157 75.5513 123.109 cv
79.4506 123.109 li
cp
75.5513 122.59 mo
75.5513 122.59 li
75.6262 121.691 76.1512 120.862 77.126 120.862 cv
78.1758 120.862 78.7007 121.611 78.7757 122.59 cv
75.5513 122.59 li
cp
f
81.3263 122.59 mo
81.3263 122.59 li
81.3263 121.691 81.7762 120.862 82.8261 120.862 cv
83.5759 120.862 84.1009 121.391 84.1009 122.29 cv
84.1009 125.506 li
84.7008 125.506 li
84.7008 122.36 li
84.7008 121.761 84.5508 120.343 82.976 120.343 cv
82.3012 120.343 81.7012 120.642 81.4013 121.242 cv
81.3263 121.242 li
81.3263 120.493 li
80.7264 120.493 li
80.7264 120.792 80.7264 121.242 80.7264 121.611 cv
80.7264 125.506 li
81.3263 125.506 li
81.3263 122.59 li
cp
f
90.5508 123.109 mo
90.5508 123.109 li
90.5508 121.541 89.8759 120.343 88.2262 120.343 cv
86.7264 120.343 85.9756 121.611 85.9756 122.959 cv
85.9756 124.307 86.7264 125.655 88.2262 125.655 cv
89.426 125.655 90.1759 125.056 90.4758 123.858 cv
89.8009 123.858 li
89.651 124.607 89.0511 125.056 88.3762 125.056 cv
87.1764 125.056 86.6514 124.157 86.6514 123.109 cv
90.5508 123.109 li
cp
86.6514 122.59 mo
86.6514 122.59 li
86.7264 121.691 87.2514 120.862 88.2262 120.862 cv
89.276 120.862 89.8009 121.611 89.8759 122.59 cv
86.6514 122.59 li
cp
f
92.4265 122.44 mo
92.4265 122.44 li
92.4265 121.541 92.9514 120.862 93.8513 120.862 cv
94.1512 120.942 li
94.1512 120.343 li
94.0013 120.343 93.7763 120.343 93.5513 120.343 cv
93.1014 120.343 92.6515 120.712 92.4265 121.242 cv
92.4265 120.493 li
91.8266 120.493 li
91.8266 120.792 91.8266 121.242 91.8266 121.611 cv
91.8266 125.506 li
92.4265 125.506 li
92.4265 122.44 li
cp
f
98.5765 122.889 mo
98.5765 122.889 li
98.5765 123.858 98.1266 124.906 96.9258 124.906 cv
95.8759 124.906 95.426 123.788 95.426 122.889 cv
95.426 121.99 95.8759 120.862 96.9258 120.862 cv
98.0516 120.862 98.5765 121.911 98.5765 122.889 cv
cp
98.5765 121.242 mo
98.5765 121.242 li
98.5015 121.242 li
98.1266 120.712 97.6017 120.343 96.8508 120.343 cv
95.351 120.343 94.7511 121.611 94.7511 122.959 cv
94.7511 124.307 95.426 125.436 96.9258 125.436 cv
97.5267 125.436 98.2016 125.136 98.5015 124.537 cv
98.5765 124.537 li
98.5765 125.436 li
98.5765 126.334 97.8266 126.854 97.0008 126.854 cv
96.4009 126.854 95.651 126.634 95.651 126.035 cv
94.9761 126.035 li
94.9761 127.083 96.0259 127.383 96.9258 127.383 cv
97.4517 127.383 97.6767 127.383 98.0516 127.153 cv
99.1764 126.634 99.1764 125.585 99.1764 124.607 cv
99.1764 121.611 li
99.1764 121.242 99.1764 120.792 99.1764 120.493 cv
98.5765 120.493 li
98.5765 121.242 li
cp
f
100.076 120.493 mo
100.076 120.493 li
102.176 125.506 li
101.426 127.383 li
102.101 127.383 li
104.801 120.493 li
104.202 120.493 li
102.476 124.687 li
100.826 120.493 li
100.076 120.493 li
cp
f
38.5003 137.489 mo
38.5003 137.489 li
39.1752 137.489 li
39.1752 131.278 li
43.0755 137.489 li
43.9004 137.489 li
43.9004 130.299 li
43.2255 130.299 li
43.2255 136.59 li
39.2502 130.299 li
38.5003 130.299 li
38.5003 137.489 li
cp
f
46.0001 136.071 mo
46.0001 136.071 li
46.0001 134.793 47.7258 134.942 48.6256 134.942 cv
48.6256 135.991 48.4007 137.04 47.1249 137.04 cv
46.525 137.04 46.0001 136.74 46.0001 136.071 cv
cp
48.6256 134.423 mo
48.6256 134.423 li
47.8758 134.423 46.9749 134.343 46.3 134.643 cv
45.7001 134.873 45.3252 135.392 45.3252 136.071 cv
45.3252 137.04 46.0751 137.639 46.9749 137.639 cv
47.6508 137.639 48.4007 137.269 48.5507 136.82 cv
48.6256 136.74 li
48.6256 137.489 li
49.2255 137.489 li
49.2255 137.119 49.2255 136.74 49.2255 136.37 cv
49.2255 133.974 li
49.2255 132.845 48.5507 132.326 47.4258 132.326 cv
46.45 132.326 45.7001 132.696 45.5501 133.744 cv
46.15 133.744 li
46.3 133.075 46.7499 132.845 47.4258 132.845 cv
48.1007 132.845 48.6256 133.145 48.6256 133.974 cv
48.6256 134.423 li
cp
f
51.1752 136.141 mo
51.1752 136.141 li
51.1752 136.82 51.1002 137.639 52.3 137.639 cv
52.525 137.639 52.75 137.569 52.9759 137.489 cv
52.9759 137.04 li
52.75 137.04 52.6 137.04 52.45 137.04 cv
52.0001 137.04 51.7001 136.82 51.7001 136.37 cv
51.7001 132.995 li
52.9009 132.995 li
52.9009 132.476 li
51.7001 132.476 li
51.7001 131.128 li
51.1752 131.427 li
51.1752 132.476 li
50.1254 132.476 li
50.1254 132.995 li
51.1752 132.995 li
51.1752 136.141 li
cp
f
57.3252 135.322 mo
57.3252 135.322 li
57.3252 136.221 56.8753 137.04 55.9005 137.04 cv
55.0756 137.04 54.5507 136.59 54.5507 135.691 cv
54.5507 132.476 li
53.9508 132.476 li
53.9508 135.622 li
53.9508 136.141 54.1007 137.639 55.7505 137.639 cv
56.4254 137.639 56.9503 137.339 57.3252 136.74 cv
57.4002 137.489 li
58.0001 137.489 li
58.0001 137.119 57.9251 136.74 57.9251 136.37 cv
57.9251 132.476 li
57.3252 132.476 li
57.3252 135.322 li
cp
f
60.1008 134.423 mo
60.1008 134.423 li
60.1008 133.524 60.6257 132.845 61.5255 132.845 cv
61.6005 132.845 61.7505 132.925 61.9005 132.925 cv
61.9005 132.326 li
61.6755 132.326 61.4506 132.326 61.3006 132.326 cv
60.7757 132.326 60.3257 132.696 60.1758 133.225 cv
60.1008 133.225 li
60.1008 132.476 li
59.5009 132.476 li
59.5009 132.775 59.5009 133.225 59.5009 133.594 cv
59.5009 137.489 li
60.1008 137.489 li
60.1008 134.423 li
cp
f
63.1003 136.071 mo
63.1003 136.071 li
63.1003 134.793 64.826 134.942 65.7259 134.942 cv
65.7259 135.991 65.5009 137.04 64.2261 137.04 cv
63.6252 137.04 63.1003 136.74 63.1003 136.071 cv
cp
65.7259 134.423 mo
65.7259 134.423 li
64.976 134.423 64.0761 134.343 63.4002 134.643 cv
62.8753 134.873 62.4254 135.392 62.4254 136.071 cv
62.4254 137.04 63.1753 137.639 64.0761 137.639 cv
64.751 137.639 65.5009 137.269 65.6509 136.82 cv
65.7259 136.74 li
65.7259 137.489 li
66.3258 137.489 li
66.3258 137.119 66.3258 136.74 66.3258 136.37 cv
66.3258 133.974 li
66.3258 132.845 65.6509 132.326 64.5261 132.326 cv
63.5502 132.326 62.8003 132.696 62.6504 133.744 cv
63.2503 133.744 li
63.4002 133.075 63.8502 132.845 64.5261 132.845 cv
65.2009 132.845 65.7259 133.145 65.7259 133.974 cv
65.7259 134.423 li
cp
f
68.4254 130.299 mo
68.4254 130.299 li
67.8255 130.299 li
67.8255 137.489 li
68.4254 137.489 li
68.4254 130.299 li
cp
f
76.3011 134.873 mo
76.3011 134.873 li
76.3011 135.841 75.8512 136.89 74.7254 136.89 cv
73.6006 136.89 73.1507 135.771 73.1507 134.873 cv
73.1507 133.974 73.6006 132.845 74.7254 132.845 cv
75.7762 132.845 76.3011 133.894 76.3011 134.873 cv
cp
76.3011 133.225 mo
76.3011 133.225 li
75.8512 132.696 75.3263 132.326 74.6504 132.326 cv
73.0757 132.326 72.4758 133.594 72.4758 134.942 cv
72.4758 136.291 73.1507 137.419 74.6504 137.419 cv
75.3263 137.419 76.0012 137.119 76.3011 136.52 cv
76.3011 137.419 li
76.3011 138.318 75.5513 138.837 74.8004 138.837 cv
74.1255 138.837 73.4506 138.617 73.3756 138.018 cv
72.7007 138.018 li
72.7007 139.067 73.8255 139.366 74.7254 139.366 cv
75.1763 139.366 75.4013 139.366 75.8512 139.137 cv
76.976 138.617 76.901 137.569 76.901 136.59 cv
76.901 133.594 li
76.901 133.225 76.901 132.775 76.976 132.476 cv
76.3011 132.476 li
76.3011 133.225 li
cp
f
78.7007 136.071 mo
78.7007 136.071 li
78.7007 134.793 80.5004 134.942 81.3263 134.942 cv
81.4013 135.991 81.1763 137.04 79.8256 137.04 cv
79.2257 137.04 78.7007 136.74 78.7007 136.071 cv
cp
81.3263 134.423 mo
81.3263 134.423 li
80.5764 134.423 79.7506 134.343 79.0757 134.643 cv
78.4758 134.873 78.0258 135.392 78.0258 136.071 cv
78.0258 137.04 78.7757 137.639 79.7506 137.639 cv
80.4255 137.639 81.1013 137.269 81.3263 136.82 cv
81.3263 136.74 li
81.4013 137.489 li
82.0012 137.489 li
82.0012 137.119 81.9262 136.74 81.9262 136.37 cv
81.9262 133.974 li
81.9262 132.845 81.2513 132.326 80.1255 132.326 cv
79.2257 132.326 78.4008 132.696 78.2508 133.744 cv
78.9257 133.744 li
79.0007 133.075 79.5256 132.845 80.1255 132.845 cv
80.8764 132.845 81.3263 133.145 81.3263 133.974 cv
81.3263 134.423 li
cp
f
83.351 133.674 mo
83.351 133.674 li
83.351 134.643 84.1009 134.873 84.9257 135.022 cv
85.6756 135.242 86.5015 135.322 86.5015 136.071 cv
86.5015 136.74 85.8256 137.04 85.1507 137.04 cv
84.4758 137.04 83.8759 136.82 83.8009 136.071 cv
83.126 136.071 li
83.201 137.189 84.1759 137.639 85.0007 137.639 cv
86.1265 137.639 87.1764 137.119 87.1764 135.991 cv
87.1764 135.472 86.8014 135.022 86.2765 134.793 cv
84.9257 134.343 83.9509 134.423 83.9509 133.674 cv
83.9509 133.075 84.5508 132.845 85.0757 132.845 cv
85.6756 132.845 86.2765 133.075 86.3515 133.674 cv
86.9514 133.674 li
86.8764 132.626 86.1265 132.326 85.1507 132.326 cv
84.2508 132.326 83.351 132.696 83.351 133.674 cv
cp
f
38.9502 145.887 mo
38.9502 145.887 li
38.9502 144.309 39.7001 142.742 41.4998 142.742 cv
43.2255 142.742 43.9754 144.309 43.9754 145.887 cv
43.9754 147.455 43.2255 149.033 41.4998 149.033 cv
39.7001 149.033 38.9502 147.455 38.9502 145.887 cv
cp
44.6503 145.887 mo
44.6503 145.887 li
44.6503 143.64 43.5255 142.142 41.4998 142.142 cv
39.4001 142.142 38.2753 143.64 38.2753 145.887 cv
38.2753 148.134 39.4001 149.632 41.4998 149.632 cv
43.5255 149.632 44.6503 148.134 44.6503 145.887 cv
cp
f
46.225 144.459 mo
46.225 144.459 li
46.225 149.482 li
46.8249 149.482 li
46.8249 144.459 li
46.225 144.459 li
cp
46.8999 142.292 mo
46.8999 142.292 li
46.225 142.292 li
46.225 143.041 li
46.8999 143.041 li
46.8999 142.292 li
cp
f
49.0006 142.292 mo
49.0006 142.292 li
48.4007 142.292 li
48.4007 149.482 li
49.0006 149.482 li
49.0006 142.292 li
cp
f
28 101.539 mo
28 101.539 li
33.9251 101.539 li
33.9251 95.5472 li
28 95.5472 li
28 101.539 li
cp
3.0518e-5 .765866 1 .000274662 cmyk
f
28 89.5456 mo
28 89.5456 li
33.9251 89.5456 li
33.9251 83.5539 li
28 83.5539 li
28 89.5456 li
cp
.32575 .268101 .255405 3.0518e-5 cmyk
f
28 113.442 mo
28 113.442 li
33.9251 113.442 li
33.9251 107.451 li
28 107.451 li
28 113.442 li
cp
.783322 .218265 3.0518e-5 3.0518e-5 cmyk
f
28 137.419 mo
28 137.419 li
33.9251 137.419 li
33.9251 131.427 li
28 131.427 li
28 137.419 li
cp
.0096437 1 1 3.0518e-5 cmyk
f
28 125.436 mo
28 125.436 li
33.9251 125.436 li
33.9251 119.444 li
28 119.444 li
28 125.436 li
cp
.00396735 .409064 1 3.0518e-5 cmyk
f
28 149.402 mo
28 149.402 li
33.9251 149.402 li
33.9251 143.411 li
28 143.411 li
28 149.402 li
cp
.588067 3.0518e-5 1 3.0518e-5 cmyk
f
grestore
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: GFNBAA+Calibri Initial
ct_T42Dict begin
-0.5 -0.305 1.238 0.961
 256 array 0 1 255 {1 index exch /.notdef put} for  /GFNBAA+Calibri
Type42DictBegin
[<00010000000c000c000c000c4f532f32f9dcd9de000000cc000000606376
7420b09bc4d20000012c0000051c6670676df6f64d0c000006480000091a
676c796632d6d0a50000867000004a1668656164ecde32e000000f640000
0036686865610dad079300000f9c00000024686d747819441e7f00000fc0
000026f06c6f6361dfa3ce8e000036b000001e4e6d617870213525020000
5500000000206e616d6519aa717b0000552000000d3e707265706baf02fe
0000626000002410676469720000000000000000000000000003042b0190
00050008059905330000011e05990533000003d0008602000800020f0502
020204030204e00002ff4000acff00000001000000004d53202000400000
22060600fe0001c4079e02262000019f0000000003b7050e000000200003
0000079e0000fe930000000000000000000000000050006a007300800080
0086008d009300bf00db006200830093009900a000a600a900b000c100c9
00d700000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe79056d000c03b700060013
0000fffaffedfea6ffedfeb8050e000600130000fffaffedfe93050e0013
0420000600130000fffaffedff10ffee050e00130420000600130000fffa
ffeefe93ff10feb80612000a050e0006000d02d2fffafff301fdfffa023f
0006000dff36fffafff302870006000f0000fffafff1079efeaffea70000
0000000000000000000000500051005a005b005c005d0060006100620064
00680069006a006b006c006d006e00680069006e00600067006e00660068
005f00610063006400660068006a006b006c006d006e006f0070006f0072
0074007500760076007000720073007400750076006f0070007100720073
00750077007700780079007a007b007c007d007b007c007d00770079007a
007c0078007a007c007d0078007d007e007f008000810082007e007f0081
0082007e007f008000810082008300840085008600870088008900830084
008500860087008800890083008400850086008700880089008900860087
00880089008a008b008c008d008e008f008a008b008c008d008e008f008a
008b008c008d008e008f008d008a008b008c008d008e008f009000900091
0092009300940095009600980099009b009c009000910092009300940095
0096009700980099009a009e009f00a60090009100950098009f00900091
0096009700bc00c600b500ae00af00b6006800690063006a006f00700071
006f0070007100720066006c006d00700079007c007f0083008600870088
0089008a0074007500760077007a007b007c007d007e008200850086008a
0088008900830078007b00820083008600870088008900760079007a007c
007d007e0083008500880089008a0073007400750077007a007d00880089
008a008b008c008d008e00900094008b008c008d00910092009300940095
008c008d00910095008f009000910092009300940095008b008c008d008e
008f009000910092009300940095008b008c008d008e008f009000910092
00930096009700980099009c0096009700980099009a009b009c00960099
009a009c0096009700980099009a009b009c009700980099009a009b009c
009700980099009a009b009c0096009d00a000a1009d009e009f00a000a1
00a2009d009f00a000a1009f00a2009d009e009f00a000a100a2009d009e
00a000a1009d009e00a000a2009d00a300a400a500a600a700a300a400a6
00a700a300a400a500a600a700a600a300a700a800a900aa00ab00ac00ac
00a800a900aa00ab00ac00a800a900aa00ab00ac00a800aa00ab00ac00ae
00ad00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00ad
00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00af00b0
00b100b200b300b400b500b600b700b800b300ae00af00b000b200b500b6
00b700b800b900ba00bb00bc00be00c000c100c200c200b900ba00bb00bc
00bd00be00bf00c000c100c200c400ba00bb00be00bf00c000c200c300c4
00b900ba00bf00c000c200c600c700c900ca00cb00cc00cf00c500c700ce
00c500c700c800cf00d000d200d300d7010d00d000d100e900d000fd00d0
05e4000e0041000005ba009c009c005e005e4047645f5e5d5c5b5a595855
54535251504f4e4d4c4b4a494847464544434241403f3e3d3c3b3a393837
36352f2e2d2c2826252423221f181411100f0d0b0a090807060504030201
002c4523466020b02660b004262348482d2c452346236120b02661b00426
2348482d2c45234660b0206120b04660b004262348482d2c4523462361b0
206020b02661b02061b004262348482d2c45234660b0406120b06660b004
262348482d2c4523462361b0406020b02661b04061b004262348482d2c01
10203c003c2d2c20452320b0cd442320b8015a51582320b08d44235920b0
ed51582320b04d44235920b0042651582320b00d44235921212d2c202045
18684420b001602045b04676688a4560442d2c01b10b0a432343650a2d2c
00b10a0b4323430b2d2c00b0282370b101283e01b0282370b10228453ab1
0200080d2d2c2045b00325456164b050515845441b2121592d2c2045b000
4360442d2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8c
b8100062602b0c642364615c58b00361592d2c8a03458a8a87b0112bb029
2344b0297ae4182d2c4565b02c234445b02b23442d2c4b525845441b2121
592d2c01b005251023208af500b0016023edec2d2c01b005251023208af5
00b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c003c
2d2c20b001610110203c003c2d2c00b00743b006430b2d2c21210c642364
8bb84000622d2c21b08051580c6423648bb82000621bb200402f2b59b002
602d2c21b0c051580c6423648bb81555621bb200802f2b59b002602d2c0c
6423648bb84000626023212d2c4523456023456023456023766818b08062
202d2cb00426b00426b00425b0042545234520b003266062636820b00326
61658a2344442d2c2045b0005458b040442045b04061441b2121592d2c45
b1302f4523456160b0016069442d2c4b5158b02f2370b01423421b212159
2d2c4b515820b0032545695358441b2121591b2121592d2c45b01443b000
6063b0016069442d2cb02f45442d2c452320458a60442d2c45234560442d
2c4b235158b90033ffe0b134201bb3330034005944442d2cb0164358b003
26458a586466b01f601b64b020606620581b21b04059b001615923586559
b02923442310b029e01b2121212121592d2cb0164358b004254564b02060
6620581b21b04059b0016123586559b0292344b00425b00725082058021b
0359b0052510b004252046b0042523423cb0072510b006252046b00425b0
016023423c2058011b0059b0052510b00425b029e0b0072510b00625b029
e0b00425b00725082058021b0359b00425b003254348b00625b00325b001
6043481b2159212121212121212d2cb0164358b004254564b02060662058
1b21b04059b0016123581b6559b0292344b00525b00825082058021b0359
b0042510b005252046b0042523423cb00425b0072508b0072510b0062520
46b00425b0016023423c2058011b0059b0042510b00525b029e0b0292045
6544b0072510b00625b029e0b00525b00825082058021b0359b00525b003
254348b00425b0072508b00625b00325b0016043481b2159212121212121
212d2c02b00425202046b004252342b0052508b003254548212121212d2c
02b0032520b0042508b0022543482121212d2c452320451820b000502058
23652359236820b040505821b04059235865598a60442d2c4b53234b515a
5820458a60441b2121592d2c4b545820458a60441b2121592d2c4b53234b
515a58381b2121592d2cb000214b5458381b2121592d2cb002435458b046
2b1b21212121592d2cb002435458b0472b1b212121592d2cb002435458b0
482b1b21212121592d2cb002435458b0492b1b212121592d2c208a08234b
538a4b515a5823381b2121592d2c0020b200400325b0062649618b381234
2d2c014623466023466123201020468a61b8ff80628ab140408a70456068
3a2d2c208a2349648a2353583c1b21592d2c4b52587d1b7a592d2cb01200
4b014b54422d2cb1020042b123018851b1400188535a58b9100000208854
58b202010243604259b12401885158b920000040885458b2020202436042
b12401885458b2022002436042004b014b5258b2020802436042591bb940
000080885458b202040243604259b94000008063b80100885458b2020802
43604259b94000010063b80200885458b202100243604259b94000020063
b80400885458b202400243604259595959592d2c451868234b5158232045
2064b04050587c59688a6059442d2cb00016b00225b0022501b001233e00
b002233eb10102060cb00a236542b00b234201b001233f00b002233fb101
02060cb006236542b0072342b00116012d2c20b82000628a6023622d2cb0
072558001b0159b0042510b00325b0022520b8ffff545821cd1bed5921b0
06255cb006255a58b0092b5920b005254ab0042547b004254760b0062547
b0806361b00225b0005558b00325b00725496359b0082558001b0159b004
25b0062549b009255cb009255a58b0092b59b0072546b0806361b0032520
b0005558631b2159612320b0005558b080631b21b08059b0592bb006255c
586959b00425202010b00048233ab0062658001b0159b0052658b003252f
598a12233221212d2cb00625b00a2587b00625b009254ab0005358b00625
b00a251bb00925b0072559b00225b00225070cb005256323b00625636020
b94000040063535821b00426b00426b00a1bb94000040063655158b00426
65b0042665b00a1bb00426b00426b000b00325b003250b0d0ab0092eb007
25b007250b0d0ab00b2eb00525b0052507595920b0005558b00525b00525
87b00725b007250bb0092510b00b25b0092620b8ffff545821cd1bed59b0
0525b0052507b00825b00b254923b00625b0062587b00a2510b00b25c159
20b00051b800522378b00161b00225b00725b0072507b00a25b00d254961
b08062b00525b005250bb00a252338b00625b0062587b00825b008250bb0
0a2510b00b25c4b00625b0062507b00925b00c2549b0032554b8ffa72379
2121212121212121212121212d2c23b0005458b9400000001bb900004000
598ab0005458b9400000001bb90000400059b05b2b2d2c08b0005458b940
0000001bb900004000590db05b2b2d2c8a8a080d8ab0005458b940000000
1bb90000400059b05b2b2d2cb00426b00426080db00426b00426080db05b
2b2d2c204569442d0000000100000005b852a8a0c6d25f0f3cf500190800
00000000bbeb7ccc00000000cbdab383fbfafd8b09ec07b6000000090002
000000000000000100000600fe0001c40aa0fbfafaa009ec000100000000
000000000000000000000452040e0000000000000000000001cf000004a1
002300000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000045a00ac044400610000
000000000000000000000000000000000000000000000000000000000000
0000000003e800ac00000000000000000000000000000000000000000000
000000000000000000000000000003ad00ac050c005b0000000000000000
000000000000000004fc00ac0000000000000000020400ac000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000042800ac00000000035d00ac000000000000
000000000000000000000000000006d700ac052a00ac0000000000000000
000000000000000000000000054c00630000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
042200ac0000000000000000045800ac00000000000000000000000003ad
0047000000000000000000000000000000000000000003e6000f00000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000048a002200000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000003bf003b00000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000003d5005c0000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000043400990362005a000000000000
000000000000000000000000000000000000000000000000000000000000
0434006000000000000000000000000003fb005d00000000000000000000
000000000000000000000000000000000000000000000000000002710025
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000003c400350000000000000000000000000000000000000000
0000000000000000000000000000000004340099000000000000000001d6
008500000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000003a3
0099000000000000000001d6009900000000000000000000000000000000
000000000664009904340099000000000000000000000000000000000000
0000000000000438005a0000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000043400990000
00000434006002ca00990000000000000000000000000321005100000000
000000000000000000000000000000000000000000000000000000000000
000002ae0021000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000004340094000000000000
000000000000000000000000000000000000000000000000000000000000
00000000039d002205b80035000000000000000000000000000000000377
0029039f0022000000000000000000000000000000000329005900000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000484003a0000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000046600990000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000029b010a000000000000
000000000000000000000000000000000000000000000000000000000000
0000000001ff002a00000000022400bb0205009700000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000031700010000000000000000000000000000000000000000
027300450000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000026d0085026d007a00000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000335
008b00000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000003fc0057040e00600000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000040e006b00000000
040e00520000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000040e0048040e00ae040e0072040e0067040e0030040e
0065040e006b040e0063040e0052040e0052000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000003fc004600000000000000000000000003fc005e0000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000484003a0000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000a100a100a100a1
012f012f012f012f012f012f012f012f012f012f012f012f012f01e50262
02620262026202620262026202620262026202de02de02de02de02de02de
02de02de02de02de034703ee03ee03ee03ee03ee048e048e048e04d904d9
04d904d904d904d904d904d904d904d904d904d904d90558055805a605a6
05a605a605a605a6065306ee06ee06ee06ee06ee06ee0766076607660766
0766076607660766076607660766076607df07df07df088a088a088a088a
095c095c095c095c095c095c09c309c309c309c309c309c309c309c309c3
09c309c309c309c309c309c30a350a350a350a350a350a350a350a350a35
0a350a350a350a810a810a810a810a810a810a810a810a810a810a810a81
0a810a810a810a810a810a810a810a810a810a810a810a810a810a810a81
0a810a810a810a810a810a810a810a810a810a810a810a810a810a810a81
0a810a810a810a810a810a810a810a810a810a810a810a810a810a810a81
0a810a810a810a810a810a810a810a810a810a810a810a810a810a810a81
0a810a810a810a810a810a810a810a810a810a810a810a810a810a810a81
0a810a810a810a810a810a810a810a810a810a810a810a810a810a810a81
0a810a810a810a810a810a810a810a810a810a810a810a810a810a810a81
0a810a810a810a810a810a810a810a810a810a810a810a810a810a810b30
0b300b300b300b300b300b300b300b300b300b300b300b300bc90c550c55
0c550c550c550c550c550c550c550c550cec0cec0cec0cec0d8d0d8d0d8d
0d8d0d8d0d8d0d8d0d8d0d8d0d8d0e100e100e100e100e100e100e100e10
0e100e100e100e100e100e100e100e100e100e100e100e100e100e100e10
0e100e100e100e100e100e100e100e100e100e100e100e100e100e100e10
0e100e100efd0efd0efd0efd0efd0efd0efd0efd0efd0efd0f810f810f81
0ffa0ffa0ffa0ffa0ffa0ffa0ffa0ffa0ffa0ffa0ffa0ffa0ffa0ffa0ffa
10941094109410d710d710d710d710d710d711b812491249124912491249
1249124912d712d712d712d712d712d712d712d712d712d712d712d7136e
136e14071480148014801480154615461546154615461546154615461546
154615c215c215c215c215c215c215c215c215c215c215c215c215c215c2
15c215c215c215c215c215c215c215c215c215c215c215c215c216521652
165216521652165216521652165216521652170917e117e117e117e117e1
187118d618d618d618d618d6193519351935193519351935193519351935
193519351935193519351935193519351935193519351935193519351935
193519351935193519351935193519351935193519351935193519351935
193519351935193519351935193519351935193519351935193519351935
193519351935193519351935193519351935193519351935193519351935
193519351935193519351935193519351935193519351935193519351935
193519351935193519351935193519351935193519351935193519351935
193519351935193519351989198919891989198919891989198919891989
198919891989198919891989198919891989198919891989198919891989
198919891989198919891989198919891989198919891989198919891989
198919891989198919891989198919891989198919891989198919891989
198919891989198919891989198919891989198919891989198919891989
198919891989198919891989198919891989198919891a101a101a101a10
1a101a101a101a101a101a101a101a101a101a101a101a101a101a101a10
1a101a101a101a101a101a101a101a101a101a101a101a101a101a101a10
1a101a101a101a101a101a101a101a101a101a101a101a101a101a101a10
1a101a101a101a101a101a101a101a101a101a101a101a101a101a101a10
1a101a101a101a101a101a101a101a101a101a101a101a101a101a101a10
1a101a101a101a101a101a101a101a101a101a101a101a101a101a101a10
1a101a101a101a101a101a101a101a101a101a101a101a101a101a101a10
1a101a101a101a101a101a101a101a101a101a101a101a101a101a101a10
1a101a101a101a101a101a101a101a101a101a101a101a101a101a101a10
1a101a101a101a101a101a101a101a101a101a101a101a101a101a101a10
1a101a101a101a101a101a101a101a101a101a101a101a101a101a101a10
1a101a101a101a101a101a101a101a101a101a101a101a101a101a101a10
1a101a101a101a101a101a101a101a101a101a101a101a101a101a551a55
1a551a551a551a551a551a551a551a551a551a861a861ace1af01af01af0
1af01af01af01af01af01af01af01af01af01af01af01af01af01af01af0
1af01af01b181b181b181b181b181b181b3b1b3b1b3b1b3b1b3b1b3b1b3b
1b3b1b3b1b3b1b3b1b3b1b841bd41bd41bd41bd41bd41bd41bd41bd41bd4
1bd41bd41bd41bd41bd41bd41bd41bd41bd41bd41bd41bd41bd41bd41bd4
1c1a1c1a1c1a1c1a1c1a1c1a1c1a1c1a1c1a1c1a1c1a1c1a1c1a1c1a1c1a
1c1a1cae1cc51cc51cc51cc51cc51cc51cc51cc51cc51cc51cc51cc51cc5
1cc51cc51cc51cc51cc51cc51cc51cc51cc51cc51cc51cc51cc51cc51cc5
1cc51cc51cc51cc51cc51cc51d731d731e991e991e991e991e991e991e99
1e991e991e991e991e991e991e991e991e991e991e991e991e991e991e99
1e991e991e991e991e991e991e991e991e991e991f4c200320a32197225c
2311231923b823c024792479247924792479247924792479247924792479
247924792479247924792479247924792479247924792479247924792479
247924792479247924792479247924792479247924792479247924792479
247924792479247924792479247924792479247924792479247924792479
247924792479247924792479247924792479247924792479247924792479
247924c824c824c824c82503250325032503250325032503250325032503
25032503250325032503250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b250b250b250b250b250b250b250b250b250b250b250b
250b250b250b250b0000000100000f26006000050060000300020010002f
0065000011902410000100010000002d0222000000030000000000640000
0000000300000001000e00640000000300000002000e0304000000030000
0003002403120000000300000004000e0064000000030000000500180336
0000000300000006000e006400000003000000070076034e000000030000
0008002a000e0000000300000009002003c4000000030000000a02a00064
000000030000000b005603e4000000030000000c002a043a000000030000
000d02980464000000030000000e006c06fc000100000000000000320768
00010000000000010007079a0001000000000002000708ea000100000000
0003001208f100010000000000040007079a0001000000000005000c0903
00010000000000060007079a0001000000000007003b090f000100000000
00080015076f00010000000000090010094a000100000000000a0150079a
000100000000000b002b095a000100000000000c00150985000100000000
000d014c099a000100000000000e00360ae6000300010409000000640000
0003000104090001000e00640003000104090002000e0304000300010409
0003002403120003000104090004000e0064000300010409000500180336
0003000104090006000e006400030001040900070076034e000300010409
0008002a000e0003000104090009002003c4000300010409000a02a00064
000300010409000b005603e4000300010409000c002a043a000300010409
000d02980464000300010409000e006c06fc00a900200032003000310032
0020004d006900630072006f0073006f0066007400200043006f00720070
006f0072006100740069006f006e002e00200041006c006c002000520069
0067006800740073002000520065007300650072007600650064002e0043
0061006c0069006200720069002000690073002000610020006d006f0064
00650072006e002000730061006e00730020007300650072006900660020
00660061006d0069006c0079002000770069007400680020007300750062
0074006c006500200072006f0075006e00640069006e006700730020006f
006e0020007300740065006d007300200061006e006400200063006f0072
006e006500720073002e0020004900740020006600650061007400750072
006500730020007200650061006c0020006900740061006c006900630073
002c00200073006d0061006c006c00200063006100700073002c00200061
006e00640020006d0075006c007400690070006c00650020006e0075006d
006500720061006c00200073006500740073002e00200049007400730020
00700072006f0070006f007200740069006f006e007300200061006c006c
006f00770020006800690067006800200069006d00700061006300740020
0069006e002000740069006700680074006c007900200073006500740020
006c0069006e006500730020006f0066002000620069006700200061006e
006400200073006d0061006c006c0020007400650078007400200061006c
0069006b0065002e002000430061006c0069006200720069002700730020
006d0061006e0079002000630075007200760065007300200061006e0064
00200074006800650020006e006500770020007200610073007400650072
00690073006500720020007400650061006d00200075007000200069006e
0020006200690067006700650072002000730069007a0065007300200074
006f002000720065007600650061006c002000610020007700610072006d
00200061006e006400200073006f00660074002000630068006100720061
0063007400650072002e0052006500670075006c00610072004d00690063
0072006f0073006f00660074003a002000430061006c0069006200720069
00560065007200730069006f006e00200035002e0037003200430061006c
006900620072006900200069007300200061002000740072006100640065
006d00610072006b0020006f006600200074006800650020004d00690063
0072006f0073006f00660074002000670072006f007500700020006f0066
00200063006f006d00700061006e006900650073002e004c007500630028
006100730029002000640065002000470072006f006f0074006800740074
0070003a002f002f007700770077002e006d006900630072006f0073006f
00660074002e0063006f006d002f007400790070006f0067007200610070
00680079002f006300740066006f006e007400730068007400740070003a
002f002f0066006f006e007400660061006200720069006b002e0063006f
006d0059006f00750020006d006100790020007500730065002000740068
0069007300200066006f006e00740020006100730020007000650072006d
006900740074006500640020006200790020007400680065002000450055
004c004100200066006f00720020007400680065002000700072006f0064
00750063007400200069006e002000770068006900630068002000740068
0069007300200066006f006e007400200069007300200069006e0063006c
007500640065006400200074006f00200064006900730070006c00610079
00200061006e00640020007000720069006e007400200063006f006e0074
0065006e0074002e00200059006f00750020006d006100790020006f006e
006c0079002000280069002900200065006d006200650064002000740068
0069007300200066006f006e007400200069006e00200063006f006e0074
0065006e00740020006100730020007000650072006d0069007400740065
0064002000620079002000740068006500200065006d0062006500640064
0069006e00670020007200650073007400720069006300740069006f006e
007300200069006e0063006c007500640065006400200069006e00200074
00680069007300200066006f006e0074003b00200061006e006400200028
006900690029002000740065006d0070006f0072006100720069006c0079
00200064006f0077006e006c006f00610064002000740068006900730020
0066006f006e007400200074006f002000610020007000720069006e0074
006500720020006f00720020006f00740068006500720020006f00750074
007000750074002000640065007600690063006500200074006f00200068
0065006c00700020007000720069006e007400200063006f006e00740065
006e0074002e0068007400740070003a002f002f007700770077002e006d
006900630072006f0073006f00660074002e0063006f006d002f00740079
0070006f006700720061007000680079002f0066006f006e00740073002f
00640065006600610075006c0074002e0061007300700078a92032303132
204d6963726f736f667420436f72706f726174696f6e2e20416c6c205269
676874732052657365727665642e43616c696272692069732061206d6f64
65726e2073616e732073657269662066616d696c79207769746820737562
746c6520726f756e64696e6773206f6e207374656d7320616e6420636f72
6e6572732e204974206665617475726573207265616c206974616c696373
2c20736d616c6c20636170732c20616e64206d756c7469706c65206e756d
6572616c20736574732e204974732070726f706f7274696f6e7320616c6c
6f77206869676820696d7061637420696e2074696768746c792073657420
6c696e6573206f662062696720616e6420736d616c6c207465787420616c
696b652e2043616c696272692773206d616e792063757276657320616e64
20746865206e65772072617374657269736572207465616d20757020696e
206269676765722073697a657320746f2072657665616c2061207761726d
20616e6420736f6674206368617261637465722e526567756c61724d6963
726f736f66743a2043616c6962726956657273696f6e20352e373243616c
6962726920697320612074726164656d61726b206f6620746865204d6963
726f736f66742067726f7570206f6620636f6d70616e6965732e4c756328
6173292064652047726f6f74687474703a2f2f7777772e6d6963726f736f
66742e636f6d2f7479706f6772617068792f6374666f6e7473687474703a
2f2f666f6e7466616272696b2e636f6d596f75206d617920757365207468
697320666f6e74206173207065726d697474656420627920746865204555
4c4120666f72207468652070726f6475637420696e207768696368207468
697320666f6e7420697320696e636c7564656420746f20646973706c6179
20616e64207072696e7420636f6e74656e742e20596f75206d6179206f6e
6c792028692920656d626564207468697320666f6e7420696e20636f6e74
656e74206173207065726d69747465642062792074686520656d62656464
696e67207265737472696374696f6e7320696e636c7564656420696e2074
68697320666f6e743b20616e6420286969292074656d706f726172696c79
20646f776e6c6f6164207468697320666f6e7420746f2061207072696e74
6572206f72206f74686572206f75747075742064657669636520746f2068
656c70207072696e7420636f6e74656e742e687474703a2f2f7777772e6d
6963726f736f66742e636f6d2f7479706f6772617068792f666f6e74732f
64656661756c742e61737078000000>
<b2090320b80284b40918014a20b80283b40918014a20b80282b40918014a
20b80281b40918014a20b80280b40918014a20b8027fb40918014a20b802
7eb40918014a20b8027db40918014a20b8027cb40918014a20b8027bb409
18014a20b8027ab40918014a20b80279b40918014a20b80278b40918014a
20b80277b40918014a20b80276b40918014a20b80275b40918014a20b802
74b40918014a20b80273b40918014a20b80271b40918014a20b80270b409
18014a20b8026fb40918014a20b8026eb40918014a20b8026db40918014a
20b8026cb40918014a20b8026bb40918014a20b8026ab40918014a20b802
69b40918014a20b80268b40918014a20b80267b40918014a20b80266b409
18014a20b80265b40918014a20b80264b40918014a20b80263b40918014a
20b80262b40918014a20b80261b40918014a20b80260b40918014a20b802
5fb40918014a20b8025eb40918014a20b8025db40918014a20b8025cb409
18014a20b8025bb40918014a20b8025ab40918014a20b80259b40918014a
20b80258b40918014a20b80257b40918014a20b80256b40918014a20b802
55b40918014a20b80254b40918014a20b80253b40918014a20b80252b409
18014a20b80251b40918014a20b80250b40918014a20b8024fb40918014a
20b8024eb40918014a20b8024db40918014a20b8024cb40918014a20b802
4bb40918014a20b8024ab40918014a20b80249b40918014a20b80248b409
18014a20b80247b40918014a20b80246b40918014a20b80245b40918014a
20b80244b40918014a20b80243b40918014a20b80242b40918014a20b802
41b40918014a20b80240b40918014a20b8023fb40918014a20b8023eb409
18014a20b8023db40918014a20b8023cb40918014a20b8023bb40918014a
20b8023ab40918014a20b80239b40918014a20b80238b40918014a20b802
37b40918014a20b80236b40918014a20b80235b40918014a20b80234b409
18014a20b80233b40918014a20b80232b40918014a20b80231b40918014a
20b80230b40918014a20b8022fb40918014a20b8022eb40918014a20b802
2db40918014a20b8022cb40918014a20b8022bb40918014a20b8022ab409
18014a20b80229b40918014a20b80228b40918014a20b80227b40918014a
20b80226b40918014a20b80225b40918014a20b80224b40918014a20b802
23b40918014a20b80222b40918014a20b80221b40918014a20b80220b409
18014a20b8021fb40918014a20b8021eb40918014a20b8021db40918014a
20b8021cb40918014a20b8021bb40918014a20b8021ab40918014a20b802
19b40918014a20b80218b40918014a20b80217b40918014a20b80216b409
18014a20b80215b40918014a20b80214b40918014a20b80213b40918014a
20b80212b40918014a20b80211b40918014a20b80210b40918014a20b802
0fb40918014a20b8020eb40918014a20b8020db40918014a20b8020cb409
18014a20b8020bb40918014a20b8020ab40918014a20b80209b40918014a
20b80208b40918014a20b80207b40918014a20b80206b40918014a20b802
05b40918014a20b80204b40918014a20b80203b40918014a20b80202b409
18014a20b80201b40918014a20b80200b40918014a20b801ffb40918014a
20b801feb40918014a20b801fdb40918014a20b801fcb40918014a20b801
fbb40918014a20b801fab40918014a20b801f9b40918014a20b801f8b409
18014a20b801f7b40918014a20b801f6b40918014a20b801f5b40918014a
20b801f4b40918014a20b801f3b40918014a20b801f2b40918014a20b801
f1b40918014a20b801f0b40918014a20b801efb40918014a20b801eeb409
18014a20b801edb40918014a20b801ecb40918014a20b801ebb40918014a
20b801eab40918014a20b801e9b40918014a20b801e8b40918014a20b801
e7b40918014a20b801e6b40918014a20b801e5b40918014a20b801e4b409
18014a20b801e3b40918014a20b801e2b40918014a20b801e1b40918014a
20b801e0b40918014a20b801dfb40918014a20b801deb40918014a20b801
ddb40918014a20b801dcb40918014a20b801dbb40918014a20b801dab409
18014a20b801d9b40918014a20b801d8b40918014a20b801d7b40918014a
20b801d6b40918014a20b801d5b40918014a20b801d4b40918014a20b801
d3b40918014a20b801d2b40918014a20b801d1b40918014a20b801d0b409
18014a20b801cfb40918014a20b801ceb40918014a20b801cdb40918014a
20b801ccb40918014a20b801cbb40918014a20b801cab40918014a20b801
c9b40918014a20b801c8b40918014a20b801c7b40918014a20b801c6b409
18014a20b801c5b40918014a20b801c4b40918014a20b801c3b40918014a
20b801c2b40918014a20b801c1b40918014a20b801c0b40918014a20b801
bfb40918014a20b801beb40918014a20b801bdb40918014a20b801bcb409
18014a20b801bbb40918014a20b801bab40918014a20b801b9b40918014a
20b801b8b40918014a20b801b7b40918014a20b801b6b40918014a20b801
b5b40918014a20b801b4b40918014a20b801b3b40918014a20b801b2b409
18014a20b801b1b40918014a20b801b0b40918014a20b801afb40918014a
20b801aeb40918014a20b801adb40918014a20b801acb40918014a20b801
abb40918014a20b801aab40918014a20b801a9b40918014a20b801a8b409
18014a20b801a7b40918014a20b801a6b40918014a20b801a5b40918014a
20b801a4b40918014a20b801a3b40918014a20b801a2b40918014a20b801
a1b40918014a20b801a0b40918014a20b8019fb40918014a20b8019eb409
18014a20b8019db40918014a20b8019cb40918014a20b8019bb40918014a
20b8019ab40918014a20b80199b40918014a20b80198b40918014a20b801
97b40918014a20b80196b40918014a20b80195b40918014a20b80194b409
18014a20b80193b40918014a20b80192b40918014a20b80191b40918014a
20b80190b40918014a20b8018fb40918014a20b8018eb40918014a20b801
8db40918014a20b8018cb40918014a20b8018bb40918014a20b8018ab409
18014a20b80189b40918014a20b80188b40918014a20b80187b40918014a
20b80186b40918014a20b80185b40918014a20b80184b40918014a20b801
83b40918014a20b80182b40918014a20b80181b40918014a20b80180b409
18014a20b8017fb40918014a20b8017eb40918014a20b8017db40918014a
20b8017cb40918014a20b8017bb40918014a20b8017ab40918014a20b801
79b40918014a20b80178b40918014a20b80177b40918014a20b80176b409
18014a20b80175b40918014a20b80174b40918014a20b80173b40918014a
20b80172b40918014a20b80171b40918014a20b80170b40918014a20b801
6fb40918014a20b8016eb40918014a20b8016db40918014a20b8016cb409
18014a20b8016bb40918014a20b8016ab40918014a20b80169b40918014a
20b80168b40918014a20b80167b40918014a20b80166b40918014a20b801
65b40918014a20b80164b40918014a20b80163b40918014a20b80162b409
18014a20b80161b40918014a20b80160b40918014a20b8015fb40918014a
20b8015eb40918014a20b8015db40918014a20b8015cb40918014a20b801
5bb40918014a20b8015ab40918014a20b80159b40918014a20b80158b409
18014a20b80157b40918014a20b80156b40918014a20b80155b40918014a
20b80154b40918014a20b80153b40918014a20b80152b40918014a20b801
50b40918014a20b8014fb40918014a20b8014eb40918014a20b8014cb409
18014a20b8014bb40918014a20b8014ab40918014a20b80149b40918014a
20b80148b40918014a20b80147b40918014a20b80146b40918014a20b801
45b40918014a20b80144b40918014a20b80143b30918014ab80284b21e3e
1fb80283b21e151fb80282b21e3e1fb80281b21e3a1fb80280b21e3e1fb8
027fb21e3e1fb8027eb21e0c1fb8027db21e3e1fb8027cb21e3e1fb8027b
b21e3e1fb8027ab21e3e1fb80279b21d411fb80278b21d431fb80277b21d
431fb80276b21d431fb80275b21d411fb80274b21d431fb80273b21d431f
b80272b21d411fb80271b21d421fb80270b21d421fb8026fb21d421fb802
6eb21d431fb8026db21d431fb8026cb21d431fb8026bb21c451fb8026ab2
1c451fb80269b21c451fb80268b21c451fb80267b21c451fb80266b21c44
1fb80265b21c451fb80264b21c451fb80263b21c451fb80262b21c451fb8
0261b21c451fb80260b21c451fb8025fb21c451fb8025eb21c441fb8025d
b21c451fb8025cb21c451fb8025bb21c451fb8025ab21c451fb80259b21c
451fb80258b21c451fb80257b21c451fb80256b21c451fb80255b21c451f
b80254b21c451fb80253b21c451fb80252b21c451fb80251b21c451fb802
50b21c451fb8024fb21c451fb8024eb21c451fb8024db21c451fb8024cb2
1c451fb8024bb21c451fb8024ab21b491fb80249b21b491fb80248b21b4a
1fb80247b21b4a1fb80246b21b4b1fb80245b21b4c1fb80244b21b4c1fb8
0243b21b4c1fb80242b21b4b1fb80241b21b491fb80240b21b491fb8023f
b21b4a1fb8023eb21b4a1fb8023db21b4a1fb8023cb21b4b1fb8023bb21b
4b1fb8023ab21b4c1fb80239b21b4c1fb80238b21b4c1fb80237b21b4c1f
b80236b21b4c1fb80235b21b491fb80234b21b491fb80233b21b4a1fb802
32b21b4a1fb80231b21b4a1fb80230b21b4b1fb8022fb21b4b1fb8022eb2
1b4c1fb8022db21b4c1fb8022cb21b4c1fb8022bb21b4c1fb8022ab21b4c
1fb80229b21b4c1fb80228b21b4c1fb80227b21b491fb80226b21b491fb8
0225b21b4a1fb80224b21b4a1fb80223b21b4a1fb80222b21b4b1fb80221
b21b4b1fb80220b21b4c1fb8021fb21b4c1fb8021eb21b4c1fb8021db21b
4c1fb8021cb21b4c1fb8021bb21b4c1fb8021ab21a4e1fb80219b21a4e1f
b80218b21a4f1fb80217b21a4f1fb80216b21a4e1fb80215b21a4e1fb802
14b21a4f1fb80213b21a4f1fb80212b21a4f1fb80211b21a4e1fb80210b2
1a4e1fb8020fb21a4f1fb8020eb21a4f1fb8020db21a4f1fb8020cb21a4e
1fb8020bb21a4e1fb8020ab21a4e1fb80209b21a4f1fb80208b21a4f1fb8
0207b21a4f1fb80206b219501fb80205b219511fb80204b219511fb80203
b219501fb80202b219511fb80201b219511fb80200b219511fb801ffb219
511fb801feb219501fb801fdb219511fb801fcb219511fb801fbb219511f
b801fab219501fb801f9b219511fb801f8b219511fb801f7b219511fb801
f6b219511fb801f5b218541fb801f4b218531fb801f3b218541fb801f2b2
18541fb801f1b218541fb801f0b218531fb801efb218541fb801eeb21854
1fb801edb218541fb801ecb218531fb801ebb218531fb801eab218541fb8
01e9b218541fb801e8b218541fb801e7b218541fb801e6b218531fb801e5
b218541fb801e4b218531fb801e3b218541fb801e2b218541fb801e1b218
541fb801e0b218531fb801dfb218531fb801deb218541fb801ddb218541f
b801dcb218541fb801dbb218541fb801dab218531fb801d9b218541fb801
d8b218541fb801d7b217571fb801d6b217561fb801d5b217561fb801d4b2
17571fb801d3b217571fb801d2b217571fb801d1b217571fb801d0b21756
1fb801cfb217561fb801ceb217571fb801cdb217571fb801ccb217571fb8
01cbb217571fb801cab217561fb801c9b217561fb801c8b217571fb801c7
b217571fb801c6b217571fb801c5b217571fb801c4b217571fb801c3b217
561fb801c2b217571fb801c1b217571fb801c0b217571fb801bfb217561f
b801beb217561fb801bdb217571fb801bcb217571fb801bbb217571fb801
bab217571fb801b9b217571fb801b8b217561fb801b7b217571fb801b6b2
17571fb801b5b217571fb801b4b217571fb801b3b2163f1fb801b2b2165b
1fb801b1b2165b1fb801b0b2165b1fb801afb2165b1fb801aeb2165b1fb8
01adb2165b1fb801acb2165b1fb801abb2165b1fb801aab2163e1fb801a9
b2163f1fb801a8b2163f1fb801a7b2165b1fb801a6b2165b1fb801a5b216
5b1fb801a4b2165b1fb801a3b2165b1fb801a2b2165b1fb801a1b2165b1f
b801a0b2165b1fb8019fb2163e1fb8019eb2163f1fb8019db2163f1fb801
9cb2165b1fb8019bb2165b1fb8019ab2165b1fb80199b2165b1fb80198b2
163e1fb80197b2165b1fb80196b2165b1fb80195b2165b1fb80194b2163e
1fb80193b2163f1fb80192b2163f1fb80191b2165b1fb80190b2165b1fb8
018fb2165b1fb8018eb2165b1fb8018db2165b1fb8018cb2163f1fb8018b
b2165b1fb8018ab2165b1fb80189b2165b1fb80188b2165b1fb80187b216
5b1fb80186b215611fb80185b215621fb80184b215621fb80183b215661f
b80182b215661fb80181b215551fb80180b215451fb8017fb215361fb801
7eb215361fb8017db215611fb8017cb215621fb8017bb215621fb8017ab2
15641fb80179b215661fb80178b215661fb80177b215661fb80176b21566
1fb80175b215661fb80174b215661fb80173b215451fb80172b215621fb8
0171b215621fb80170b215631fb8016fb215641fb8016eb215661fb8016d
b215661fb8016cb215661fb8016bb215661fb8016ab215661fb80169b215
621fb80168b215621fb80167b215611fb80166b215641fb80165b215641f
b80164b215661fb80163b215661fb80162b215661fb80161b215661fb801
60b215661fb8015fb215661fb8015eb215551fb8015db215451fb8015cb2
15451fb8015bb215361fb8015ab215611fb80159b215621fb80158b21562
1fb80157b215631fb80156b215641fb80155b215661fb80154b215661fb8
0153b215661fb80152b215661fb80151b214401fb80150b214551fb8014f
b214561fb8014eb214831fb8014db2142d1fb8014cb214401fb8014bb214
401fb8014ab214411fb80149b214401fb80148b214401fb80147b214411f
b80146b2147e1fb80145b214871fb80144b2147f1fb80143b214801fb801
42b212461fb80141b212461fb80140b212461fb8013fb212461fb8013eb2
12441fb8013db212461fb8013cb211591fb8013bb211591fb8013ab2115b
1fb80139b2115b1fb80138b211471fb80137b211581fb80136b2115a1fb8
0135b2115b1fb80134b2115b1fb80133b2112c1fb80132b211471fb80131
b211551fb80130b211571fb8012fb211571fb8012eb211581fb8012db211
591fb8012cb211591fb8012bb2115a1fb8012ab2115a1fb80129b2115b1f
b80128b2115b1fb80127b2115b1fb80126b2115b1fb80125b211561fb801
24b211561fb80123b211571fb80122b211581fb80121b211591fb80120b2
115a1fb8011fb2115a1fb8011eb2115b1fb8011db2115b1fb8011cb2115b
1fb8011bb2115b1fb8011ab2115b1fb80119b2105d1fb80118b2105e1fb8
0117b2105f1fb80116b2105f1fb80115b2105f1fb80114b2105f1fb80113
b2105f1fb80112b2105d1fb80111b2105e1fb80110b2105f1fb8010fb210
5f1fb8010eb2105f1fb8010db2105f1fb8010cb2105d1fb8010bb2105e1f
b8010ab2105f1fb80109b2105f1fb80108b2105f1fb80107b2105f1fb801
06b2105d1fb80105b2105e1fb80104b2105f1fb80103b2105f1fb80102b2
105f1fb80101b2105f1fb8010040ff0f621fff0f621ffe0f631ffd0f641f
fc0f621ffb0f621ffa0f621ff90f631ff80f641ff70f641ff60f641ff50f
641ff40f621ff30f621ff20f631ff10f641ff00f641fef0f641fee0f641f
ed0f621fec0f621feb0f631fea0f641fe90f641fe80f641fe70f641fe60e
671fe50e681fe40e681fe30e681fe20e681fe10e671fe00e681fdf0e681f
de0e681fdd0e671fdc0e681fdb0e681fda0e681fd90e681fd80d6b1fd70d
311fd60d6b1fd50d6c1fd40d261fd30d261fd20d6c1fd10d2b1fd00d2b1f
cf0d2b1fce0d6b1fcd0d6c1fcc0d6d1fcb0d6b1fca0d6c1fc90d6d1fc80d
6a1fc70d691fc60d681fc50d671fc40d261fc30d311fc20d311fc10d311f
40ffc00d311fbf0d311fbe0d311fbd0c711fbc0c721fbb0c731fba0c741f
b90c741fb80c741fb70c711fb60c711fb50c721fb40c731fb30c741fb20c
741fb10c741fb00c741faf0b791fae0b7a1fad0b7c1fac0b7d1fab0b7e1f
aa0b7e1fa90b7e1fa80b7e1fa70b7e1fa60b7e1fa50b2d1fa40b7e1fa30b
7e1fa20b791fa10b7e1fa00b6b1f9f0b791f9e0b7e1f9d0b7e1f9c0b791f
9b0b7a1f9a0b7c1f990b7d1f980b7e1f970b7e1f960b7e1f950b7e1f940b
7e1f930b7e1f920b6b1f910b2d1f900a4e1f8f0a4f1f8e0a671f8d0aa51f
8c0aa71f8503251f8403381f8301381f8255805581ab80557f557d557eab
7d550b7d010b7d1b7d4b7d7b7dab7ddb7d4012060a7c557a557bab7a5579
55775578ab7755ba028600660285403c5576ab755504751475747503f475
01ab750144750130750102007510752075030c7455725573ab7255007250
728072b072043bb072e072020072010ab8ffc0b3721b1e46b8ffc0407c72
0d104671556f5570ab6f556e666d556a03251f6938675568ab6755663864
5565ab645563386255613860555f385d555eab5d555c385a555bab5a5559
3858555703251f5638545555ab54555338515552ab51554f384e554e0325
1f4d384b554cab4b554a38485549ab4855473846554503381f001c101c20
1c0310b8ffc0404e1c1b1e46001b0142301b401be01bf01b04001bb01bc0
1b03120f1a1f1a02290f1901434f19016f197f198f19030f18cf18024018
292c460f17cf17df17ef1704134017292e460016101620160315b8ffc0b3
164d5446b8ffc0b3163f4446b8ffc0b316313546b8ffc0404d162326460f
15010f151f1502451f15010011e011f0110315bf10cf10020f0f010f0fff
0f02400f3135460f0e1f0e020f0e1f0eff0e03400e3137460f0d1f0d020f
0d1f0dff0d0316400d313746b8ffc040270c5054460f0b1f0b02553f0b4f
0b02400b3f4346400b2d30460003012001010001100120010308b8ffc0b3
01151f46b80100b316010501b80190b154532b2b4bb80800524bb008505b
b00188b02553b00188b040515ab00688b000555a5b58b101018e59b10102
4354b0144b515a58b101018e59858d8d00421d4bb01d5358b0a01d594bb0
805358b0401d594bb0ff5358b0001db1160042592b5e7375732b2b745e73
2b2b5e73742b73742b7374745e7301755e73742b2b2b2b5e732b5e732b73
74755e735e735e73755e732b5e73002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b5e73755e732b2b5e735f7373737374
2b2b2b2b2b2b5e73742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2bb1000243545841ff02840064028300640282
00640281006402800064027f0064027e0064027d0064027c0064027b0064
027a00640279006402780064027700640276006402750064027400640273
00640271006402700064026f0064026e0064026d0064026c0064026b0064
026a00640269006402680064026700640266006402650064026400640263
0064026200640261006402600064025f0064025e0064025d0064025c0064
025b0064025a006402590064025800640257006402560064025500640254
006402530064025200640251006402500064024f0064024e0064024d0064
024c0064024b0064024a0064024900640248006402470064024600640245
00640244006402430064024200640241006402400064023f0064023e0064
023d0064023c0064023b0064023a00640239006402380064023700640236
0064023500640234006402330064023200640231006402300064022f0064
022e0064022d0064022c0064022b0064022a006402290064022800640227
006402260064022500640224006402230064022200640221006402200064
021f0064021e0064021d0064021c0064021b0064021a0064021900640218
006402170064021600640215006402140064021300640212006402110064
02100064020f0064020e0064020d0064020c0064020b0064020a00640209
006402080064020700640206006402050064020441ff0064020300640202
0064020100640200006401ff006401fe006401fd006401fc006401fb0064
01fa006401f9006401f8006401f7006401f6006401f5006401f4006401f3
006401f2006401f1006401f0006401ef006401ee006401ed006401ec0064
01eb006401ea006401e9006401e8006401e7006401e6006401e5006401e4
006401e3006401e2006401e1006401e0006401df006401de006401dd0064
01dc006401db006401da006401d9006401d8006401d7006401d6006401d5
006401d4006401d3006401d2006401d1006401d0006401cf006401ce0064
01cd006401cc006401cb006401ca006401c9006401c8006401c7006401c6
006401c5006401c4006401c3006401c2006401c1006401c0006401bf0064
01be006401bd006401bc006401bb006401ba006401b9006401b8006401b7
006401b6006401b5006401b4006401b3006401b2006401b1006401b00064
01af006401ae006401ad006401ac006401ab006401aa006401a9006401a8
006401a7006401a6006401a5006401a4006401a3006401a2006401a10064
01a00064019f0064019e0064019d0064019c0064019b0064019a00640199
006401980064019700640196006401950064019400640193006401920064
0191006401900064018f0064018e0064018d0064018c0064018b0064018a
006401890064018800640187006401860064018500644180018400640183
0064018200640181006401800064017f0064017e0064017d0064017c0064
017b0064017a006401790064017800640177006401760064017500640174
006401730064017200640171006401700064016f0064016e0064016d0064
016c0064016b0064016a0064016900640168006401670064016600640165
00640164006401630064016200640161006401600064015f0064015e0064
015d0064015c0064015b0064015a00640159006401580064015700640156
00640155006401540064015300640152006401500064014f0064014e0064
014c0064014b0064014a0064014900640148006401470064014600640145
006401440064014300642b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b59
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b185f5e00>
[16025 2943 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

2 0 3 <> GFNBAA+Calibri AddT42Char 
2 3788 87 <000200acfffa03c7050e001c00290078b12406b8ffe8b310014d06b8fff0
b30f014d06b8fff0b30d014d06b8fff6b30c014d06b8ffe8b30b014d06b8
02114017111d1810014d1d100f014d1d100c0d014c1d200b014d1db80232
b2001125b8010ab306060c23b8010bb315510c55003f3fed12392fed012f
d4e12b2b2b2b10e12b2b2b2b2b32313001140e02232311140e0223222e02
351134363321321e0407342e0223231133323e0203c74077ad7893091321
19192114082a1a01152a4d696d4c29b53b575d2c9f9b4e6746240393619c
6e3cfe2e080c070505070c0804aa282207173f5c79574f6a340efdf92847
6300>GFNBAA+Calibri AddT42Char 
2 5378 258 <0002005cffed033f03ca0033004000b040200f421f422f42030b0917340c
0c014d34100d014d34180b014d34100f10014c34b801f7400e0027270f00
010c00100f014d003ab8fff0b30c014d3ab8ffe8b30d014d3ab8ffe8b30b
014d3ab8ffe8b40f10014c3ab8020840141117c500341034023bc0340100
340134342e412ab8011b400fd022012222041dea2e4a3ddc0c4d04002f3f
ed3fed12392f5ded1112392f5d715e5ded012fe12b2b2b2bc42b5e5d392f
10e12b2b2b2b323931305e5d25140606232226263535060623222e023534
3e02333335342e0223220e0223222e0235343e0433321e02150723220e02
15141633323637033f101c1b1a1f0e3b91514773512d3e74a8697c16314e
393d6149310c080c0904071b4256663461885426a48d4464421f5950416f
3d180c0c06060c0c5a3f46254666414c704a25463450351b1d231d081019
0f191d1a231d132c557e54c4172d3f2946534244>GFNBAA+Calibri AddT42Char 
2 6034 272 <0001005affed032003c900350089b11c00b8ffc0b310014d00b8ffe0b30d
014d00b8ffe8b40b014d0027b8ffe8b310014d27b8fff0b30f014d27b8ff
eeb30c014d27b8ffe8b30b014d27b8ffeab30d014d27b8020b400d2f0e01
0e19e71f400a0d481f24b80102b4134a03eb31b8ffc0b4090d48312cb801
06b1094d003ffdd42bed3ffdd42bed012f5de12b2b2b2b2bc42b2b2b3231
3025140e0623222e0235343e0233321e0615140623222e0223220615141e
0233323e0233321e020320020507193c4b582f61966535417199592b5144
3518090602120d0f273c553a777f21405d3c39563f2b0c070a0703a21119
110d19251d12407bb37585bf7a3b101a22180e131812271f212821b7ae57
83582b242b2308131d00>GFNBAA+Calibri AddT42Char 
2 6314 282 <00020060ffed039c056d00260039008b401f3f3b010b1b39100d014d390a
0c014d391010014d39100f014d39180b014d39bb01f90000002fffe0b30d
014d2fb8ffe8b310014d2fb8fff0b30f014d2fb8fff0b30c014d2fb8ffe8
b30b014d2fb8020a400a1321460b39271b040e2ab80105b2184a34b80104
b30e4d054c003f3fed3fed1217393f012fe12b2b2b2b2bd4e12b2b2b2b2b
323931305d25140e0223222e023535060623222e0235343e023332161711
343e0233321e021503262623220e0215141e0233323e0237039c07111c14
151c120847995b638c57283262915f4f834007141f1819201209a6437d44
3f58371915345641213d40462719080c070404070c08774d564d83b16274
bb84474543020b070d070505070d07fd4553573c627c404482653d122a43
3100>GFNBAA+Calibri AddT42Char 
2 6616 286 <0002005dffed039903ca002b003400ae402a2f363f366f360313200d014d
13200f014d1313212c100c014d2c180b014d2c100d014d2c100f10014c2c
b801f9b5442ba42b022bb8fff0b50f014d2b3404b8ffe0b30d014d04b8ff
eeb30c014d04b8ffe0b30b014d04b8ffe8b40f10014c04b8020a4021212c
c78004900402c00401d0040104041c2fdc264a18ea600e700e020e09ea1c
4d003ffdd45ded3fed12392f5d7172ed012fe12b2b2b2b32dd2b5de12b2b
2b2b12392f2b2b31305d0114062321141e0233323e0233321e0215140e06
23222e0235343e0233321e021527362623220e020703992719fdb21e4670
514064492f0c070b06030203070b365671406fa7723a3c71a0636a95602d
a60379773d5c3e2202020227214b78562e151a15070e19120d130f0c0b19
18133e7ab87a74b9814544739b581382942e4c653700>GFNBAA+Calibri AddT42Char 
2 7200 336 <00030035fe93038903c8003e004e005f00d04015122d47100f014d47080c
014d47201013014c47333fb8fff8b30c014d3fb8fff0b30f014d3fb8ffe0
b61013014c3f074fb8ffe0400d0f12014c4f1b040f3003330707b8ffe0b3
10014d1bb8ffc0400d10014d2d33071b1b07332d0400b8ffe040340b014d
0058100f014d58201012014c582a25400b12014c250f300703384ada0c53
e81515603803e93c482a2042d9384a5bd9204f003fed3fed12393fed1112
392fedd6ed121739012f2b33cd2b2bc42b17392f2f2f2f2b2b1112173910
cd2b10cd2b2b2b10cd2b2b2b10cd31300114062323161615140e02232226
27060615141617171e0315140e0223222e0235343e023726263534363726
2635343e023332161721321601342623220e0215141633323e0213342627
270e0315141633323e020389130f81231c325d804e37631b12174136eb43
70522e346ba6716d99622c10213120312f32251f24345c814c29471f0110
1111fefe655d30472f17655b31482f17535f51e92029180984764b653e1b
0374231f24572f4e78532c1d16122e1e232e020a02213d593b3e70553125
405934213e383319194c2c3d6026255d424d7a542d090821fef15c672038
492859661f3748fd5e3a3f0208192d29281541431d303e00>GFNBAA+Calibri AddT42Char 
2 7938 349 <00020085fffa0151052f00150021008cb73f234f236f230316b8ffe8b30d
014d16b8fff6b30c014d16b8ffe8b313014d16b8ffe0b310014d16b8fff0
b30f014d16b8ffe8b30b014d16bb0271001c0015fff0b30d014d15b8fff6
b30c014d15b8ffe8b30b014d15b8fff0b40f10014c15b801f8b60a1f400f
014d1fb8013eb4191049054c003f3fd6ed2b012fe12b2b2b2bd4e12b2b2b
2b2b2b31305d25140e0223222e023511343e0233321e0215131406232226
353436333216013e08122019182013070713201819201208132c3b3a2b2c
3b3a2b19080b080404080b080384070c080404080c0701303a2a29393a2a
2900>GFNBAA+Calibri AddT42Char 
2 8488 367 <00010099fffa013e057100150040b73f174f176f170300b8fff0b30d014d
00b8fff6b30c014d00b8ffe8b30b014d00b8fff0b40f10014c00b801f8b4
0a1046054c003f3f012fe12b2b2b2b31305d25140e0223222e023511343e
0233321e0215013e0812201918201307071320181920120819080b080404
080b080538080c080404080c0800>GFNBAA+Calibri AddT42Char 
2 8622 373 <00010099fffa05d003ca005000ea401b12100b014d13180b014d26100b0c
014c27180b0c014c7052014613b8fff6b30c014d13b8ffe8b30b014d13b8
fff0b310014d13b8fff0b30f014d13b8ffeab30d014d13b801f8401e1e16
0d014d1e1e320a0a0c014d0a100d014d0a180b014d0a100f10014c0ab801
f9b7504011014d503e27b8fff6b30c014d27b8ffe8b30b014d27b8fff0b3
10014d27b8fff0b30f014d27b8fff0b30d014d27bb01f8003200100106b2
4b4a24b80106400d414a3e462d38492d4c194c054c003f3f3f3f1239393f
ed3fed012fe12b2b2b2b2b39d42be12b2b2b2b11392f2be12b2b2b2b2b39
31305d002b2b2b2b25140e0223222e023511342e022322060711140e0223
222e023511342e022322060711140e0223222e023511343e0233321e0215
15363633321e02173e0333321e021505d00812201819201308142c442e39
73450813201817211307162c432e397444081220191820130706121c1716
1d10074c8f4938594430102d514b47245776491f19080b080404080b0802
23395e44245855fd8b080b080404080b080223395e44245855fd8b080b08
0404080b080384080b090303090b0877554f1a2f412831442a133d66894c
>GFNBAA+Calibri AddT42Char 
2 9072 374 <00010099fffa03a003ca00320094400f12100b014d13100b014d3f34012a
13b8fff0b310014d13b8fff0b30f014d13b8fff0b30d014d13b8fff6b30c
014d13b8ffe8b30b014d13b801f8401b1e0b1010014d0b100d014d0b100f
014d0b0a0c014d0b180b014d0bb801f8b700400c014d001e10b80106400a
2d4a2a192449194c054c003f3f3f12393fed012f2f2be12b2b2b2b2b10e1
2b2b2b2b2b3931305d002b2b25140e0223222e023511342e022322060711
140e0223222e023511343e0233321e021515363633321e021503a0081220
1819201208182e49303e7c44081220191820130706121c17161d10074c97
4d5a7b4c2119080b080404080b08020f4d5e44245855fd8b080b08040408
0b080384080b090303090b0877554f3d66896000>GFNBAA+Calibri AddT42Char 
2 9362 381 <0002005affed03de03ca0013002700a8401c3f2901281201291101260d01
260c012608012607012a03012902011eb8ffe8b310014d1eb8fff0b30f01
4d1eb8ffe0b30d014d1eb8ffeeb30c014d1eb8ffe8b30b014d1eb8020a40
1e2f0a010a141810014d14100f014d14200d014d14120c014d14180b014d
14ba020a0000ffc0b70f004d7000010019b80101b20f4a23b80102b1054d
003fed3fed012f5d2be12b2b2b2b2b2f5de12b2b2b2b2b31305d5d5d5d5d
5d5d5d5d01140e0223222e0235343e0233321e0207342e0223220e021514
1e0233323e0203de3a73ad726fa56e363973ac736fa56e37ae1b3e6a4f49
6944211b3f6a4f486a442001e56eb9864b427eb4726eb9864a427eb47c49
826239345f824d4a826139345e82>GFNBAA+Calibri AddT42Char 
2 9646 393 <00020099fe9403d503ca002a003d0080b53f3f0121360ab8fff0b30d014d
0ab8fff6b30c014d0ab8fff0b40f10014c0ab8ffe8b30b014d0ab801f840
17152b200d014d2b120c014d2b180f10014c2b180b014d2bb8020a400900
150a363521040530b80105b6264a1b49104f39b80105b1054d003fed3f3f
3fed121739012fd4e12b2b2b2b10e12b2b2b2b323931305d01140e022322
2e022711140e0223222e023511343e0233321e0215153e0333321e020734
2e0223220e020711161633323e0203d53363925e28444140240812201918
20130706121c14151b1207294c4d512d628a5728ae15335640203e404627
447a433e59371a01e976bc834710223423fe3e080c080404080c0804e909
0b080303080b09792a3e29154c84af754581643c13294331fe9a53583c64
7c00>GFNBAA+Calibri AddT42Char 
2 10254 396 <00010099fffa02a703ca00330063b4703501260fb8fff6b30c014d0fb8ff
e8b30b014d0fb8fff0b40f10014c0fb8fff0b30d014d0fb801f840120040
13014d004011014d00200d014d001a0ab8012540092b4a260f152049154c
003f3f1239393fed012fc42b2b2be12b2b2b2b3931305d01140e0223222e
0223220e020711140e0223222e023511343e0233321e0215153e0333321e
0602a70206090808171d24151930353a23081220191820130706121c1716
1d100725413a391d0d21241d0c0403010362161e1109090908142e4c37fd
b0080b080404080b080384080b090303090b08833644270f03080a0a090e
1b00>GFNBAA+Calibri AddT42Char 
2 10496 400 <00010051ffed02ce03ca004900ce400c2f4b3f4b4f4b7f4baf4b0541b8ff
f0b30d014d41b8fff6b30c014d41b8fff0b30f014d41b8ffc0b313014d41
b8fff0b310014d41b8fff0b30b014d41b801dc401f243224320c1b100d01
4d1b0a0c014d1b1010014d1b100b014d1b100f014d1bba01f60000ffc040
0a0f014d000c400b014d0cb8ffc0402613014d3f0caf0c020c2edd370aeb
115011601170110337113711163cdb411b05294a16e8054d003fed3f1239
39ed1139392f2f5d10ed10ed012f5d2b2bd42be12b2b2b2b2b1239392f2f
e12b2b2b2b2b2b31305d01140e0223222e0435343e0233321e0233323e02
35342e0635343e0233321e0615140e0223222e0223220e0215141e0602ce
335e824e30574530160a04060b070b2b3f56382a44321b27405055514027
29527b5224483a291507030303070a06092236492f2a4029152840525553
4027010e456c4a260f171914241f131a10071b201b122336252634281f22
2b3e563c3561492c0c1215100c0f1610111910071619161323301c273528
20222a3c5400>GFNBAA+Calibri AddT42Char 
2 10892 410 <00010021ffef026d04ad003a005cb4290011232db8fff0b30f014d2db8ff
f0b30d014d2db8fff6b30c014d2db8ffe8b310014d2db8ffe8b30b014d2d
b801f8400c170d2ded23481d0ded174831b80104b1074d003fed3fedcd3f
ed012f33e12b2b2b2b2b32cdc432313025140e0423222e02351123222635
343e02333335343e0233321e02151533321e02151406232311141633323e
0233321e02026d081020292e174664401d7e0f1205080d087d0713201819
201208e7080c0904120fe7374717241c1408050905045b1d22100e090625
4b734e020e2024131a1107d6070c090404090c07d607111a132420fe0a5d
5f090a09050e1800>GFNBAA+Calibri AddT42Char 
2 11140 437 <00010094ffed039c03bc00320092401f3f34010b27100d014d270a0c014d
27080b014d27100f10014c27100b014d27b801f9b6004011014d001fb8ff
f0b30d014d1fb8fff6b30c014d1fb8fff8b40f10014c1fb8fff8b30b014d
1fb8fff0b40f10014c1fb8fff0b30b014d1fb801f94009132d49270b0519
4924b80105b30e4d054c003f3fed3f1239393f012fe12b2b2b2b2b2bd42b
e12b2b2b2b2b3931305d25140e0223222e023535060623222e023511343e
0233321e021511141e023332363711343e0233321e0215039c07121d1517
1d11064d964d5a7b4c210714201818201308172f48303e7b4507141f1918
20120919080b080404080b0877554e3c6789620222080b090303090b08fd
f44f5f432558550275080b090303090b0800>GFNBAA+Calibri AddT42Char 
2 11794 449 <00010035fffa058403bc004500deb90047ffc0403d0f014d38080c014d29
380137080c014d252e01262101262001261f01261e01261d01271c012804
012903013a3b013b3a013b2d013c2c01102015014d10b8ffe0b310014d10
b8ffe0400a0d014d10200c014d100fb8ffe0b310014d0fb8ffe0400c0d01
4d0f200c014d0f414910b8ffe040200f014d3f104f106f107f1004104012
164810334925493a902c012c200f014d2cb8ffc04010131648672c772c02
452c012c174c094c003f3fd55d5d2b2b5dc43f3fcd2b5d2b3f012f2b2b2b
2f2b2b2b2b3130005d5d5d5d015d5d5d5d5d5d5d5d5d2b5d2b2b01140607
010e0323222e0227032707030e0323222e022701262635343e0233321e02
17131737133e0333321e0217131737133e0333321e0205840405fef7030d
17281e1f2a190c03bd0202af030d1a291e1f27190c03fef9050408132017
1c22120803d90202c70209121f19181f120802d70201d6020913211a181d
1107039f07140ffca90b0e080304080e0a028d0909fd730b0e080304080e
0a03570f1407090b070203070d09fd1a090902e6090d070303070c08fd18
090902e6090d070302080a00>GFNBAA+Calibri AddT42Char 
2 12514 455 <00010022fe94037c03bc00240052b9001bfff040350b014d371b01291b01
18180b014d261801260e360e022709011a400b014d3a1a0119380b014d3b
19011f49190a13490a4b044f004b003f3f3f3f12393f31305d2b5d2b015d
5d5d2b5d5d2b2103060623222e023713262627012634363633321e021701
33133e023332161614070233780631321a201102067c091003febf081024
1e1e22140905010103f8061122201c241106feb51011050c140e01390412
0a035c15180e0503080f0dfd2e02d6130b05050e1812>GFNBAA+Calibri AddT42Char 
2 0 0 <00050000fe7303d2050e000300070039004d004e005bbc000d0152001600
3a01b5b5154444082d07be0143000200200154000800010143400f04020d
b71a1a3f23b735068d031149b8012db43f078d0202003ffddefdce2ffdde
ed12392fed012fdde1dee110f1ce11392f33e1d4e1313001112111011121
1101140e020707140623222e02352726363333323e0235342623220e0223
222e02353436373e0333321e0203140e0223222e0235343e0233321e0201
03d2fc5a034ffd06027e233f5633051e1a0f140d0605021c18122d3c2510
535b253c2e1d0703070603050807283742224b6c4522da07111d15161d12
0808121d16151d1107fddb050efaf2050efb43046cfb9403063b5c3f2403
980a0802040606b81e18192a3b2149560f1310040b13101116080712110c
28445cfd86151c120808121c15151d120808121dfd4d>GFNBAA+Calibri AddT42Char 
GFNBAA+Calibri /CharStrings get begin
/space 3 def
/P 87 def
/a 258 def
/c 272 def
/d 282 def
/e 286 def
/g 336 def
/i 349 def
/l 367 def
/m 373 def
/n 374 def
/o 381 def
/p 393 def
/r 396 def
/s 400 def
/t 410 def
/u 437 def
/w 449 def
/y 455 def
end
GFNBAA+Calibri /Encoding get
dup 32 /space put
dup 80 /P put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
dup 121 /y put
pop
end
%ADOEndSubsetFont
/LDOGTY+Calibri /GFNBAA+Calibri findfont ct_VMDictPut
/LDOGTY+Calibri*1 
[32{/.notdef}rp /space 47{/.notdef}rp /P 16{/.notdef}rp /a /.notdef /c 
/d /e /.notdef /g /.notdef /i 2{/.notdef}rp /l 
/m /n /o /p /.notdef /r /s /t 
/u /.notdef /w /.notdef /y 134{/.notdef}rp]
LDOGTY+Calibri nf
LDOGTY+Calibri*1 [24.024 0 0 -24.024 0 0 ]msf
28.344 23.14 mo
(Primary energy world consumption)
[11.5315 7.56754 4.68458 18.3542 10.6908 7.68765 10.0902 4.20415 11.1712 11.7716 11.1712 7.20718 
10.4503 10.0901 4.4444 16.072 11.7716 7.56754 4.68459 11.7716 4.44438 9.12923 11.7716 11.7716 
8.52866 11.7716 18.3542 11.6515 7.20734 4.6846 11.7716 0 ]xsh
LDOGTY+Calibri*1 [24.024 0 0 -24.024 0 0 ]msf
344.02 23.14 mo
( )sh
%ADOBeginSubsetFont: GFNBAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GFNBAA+Calibri gcheck setglobal} if
2 2892 68 <000100acfffa062b050e003c00ac4010603e703e020d3030172f2f0a2e18
181ab8ffe8b310014d1ab8fff0b30f014d1ab8fff0b30d014d1ab8fff6b3
0c014d1ab8ffe8b30b014d1ab80211401e24310c0c0a1810014d0a100f01
4d0a100d014d0a0a0c014d0a180b014d0aba02110000ffc040190b014d00
2436510b18170d2f18312e061f28511f5512550555003f3f3f3f12173911
333f012fd42be12b2b2b2b2b32113310e12b2b2b2b2b32113311393d2f33
33113331305d25140e0223222e02351123010e0323222e0227012311140e
0223222e02351134363333321e02170133013e033333321e0215062b0814
1f191721130802fe33030b151d14151e140b02fe47010814201918201307
2c1b68203024180901770501860b1a1f26196d0f1b130c1a080c07050507
0c080467fb94070a070304070a06046cfb99080c070505070c0804a62a24
0c1a281bfc5703a61e2a190b09131d15>GFNBAA+Calibri AddT42Char 
2 9948 395 <00020060fe94039c03ca002a003d0086401b3f3f011f0b2b100d014d2b0a
0c014d2b180b014d2b100f10014c2bbb01f9002a0033ffeeb30c014d33b8
fff0b30f014d33b8ffeab30d014d33b8ffe8b310014d33b8ffe8b30b014d
33b8020a400a1525490b3d2b1f04102eb80105b21a4a38b80104b3104d05
4f003f3fed3fed1217393f012fe12b2b2b2b2bd4e12b2b2b2b323931305d
01140e0223222e0235110e0323222e0235343e0233321e021735343e0233
321e021503262623220e0215141e0233323e0237039c09122018191f1407
294a484927628a57283263915f284645472a08121c15141c1107a6437d44
3f58371915345641213d404627feb4080c080404080c0801cd2939230f4d
83b16274bb844711253b296d090b080303080b09fef553573c627c404582
643d122a4331>GFNBAA+Calibri AddT42Char 
2 11428 448 <00010022fffa037b03bc002c00e3b90023fff840170b0c014c1f080b0c01
4c251f011e080b0c014c251e0116b8fff0b30b014d15b8fff0b30b014d14
b8ffe8b30b014d13b8ffe8b30b014d12b8ffe8b30b014d11b8fff040370b
014d37110126110127100128050122280b014d3d220124220121280b014d
3f210124210120280b014d3d2001242001270f0176210121b8ffd0400911
1548212013014d21b8ffe8400910014d21200f014d21b8ffe8b30c014d21
b8fff0400c0b014d212849210b1a490b4c003f3f12393f012f2b2b2b2b2b
002b5d31305d5d5d2b5d5d2b5d5d2b015d5d5d5d2b2b2b2b2b2b5d2b5d2b
2b01140e0207010e0323222e0227012e0235343e0233321e021713173713
3e0333321e02037b01020302fecd040d1a281e1e28190e04fece04050108
131f171d23130904fe0403fb020a13211b171e1107039f04090a0c07fca9
0b0e080304080e0a03570c120903080c070203080c09fd1a0c0c02e6090c
080302080b00>GFNBAA+Calibri AddT42Char 
GFNBAA+Calibri /CharStrings get begin
/M 68 def
/q 395 def
/v 448 def
end
GFNBAA+Calibri /Encoding get
dup 77 /M put
dup 113 /q put
dup 118 /v put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/LDOGTY+Calibri*1 
[32{/.notdef}rp /space 44{/.notdef}rp /M 2{/.notdef}rp /P 16{/.notdef}rp /a 
/.notdef /c /d /e /.notdef /g /.notdef /i 
2{/.notdef}rp /l /m /n /o /p /q /r 
/s /t /u /v /w /.notdef /y 134{/.notdef}rp]
LDOGTY+Calibri nf
LDOGTY+Calibri*1 [18 0 0 -18 0 0 ]msf
28.344 46.06 mo
(Million tonnes oil equivalent)
[14.5259 3.23993 3.23992 3.23992 3.23993 8.63987 8.63988 3.47397 5.04012 8.63987 8.63989 8.63989 
8.15401 6.24612 3.11396 8.63986 3.23993 3.23991 3.36597 8.15402 8.63988 8.63989 3.23991 7.07393 
7.79408 3.23991 8.15402 8.51389 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
LDOGTY+Calibri*1 [18 0 0 -18 0 0 ]msf
212.23 46.06 mo
( )sh
27.2321 214.54 mo
212.582 214.54 li
212.582 76.4 li
27.2321 76.4 li
27.2321 214.54 li
1 /0 /CSD get_res sepcs
0 sep
ef
1 /0 /CSD get_res sepcs
1 sep
LDOGTY+Calibri*1 [18 0 0 -18 0 0 ]msf
34.44 96.84 mo
(        )
[4.06796 4.19396 4.06796 4.06796 4.21196 4.06796 4.19396 0 ]xsh
%ADOBeginSubsetFont: GFNBAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GFNBAA+Calibri gcheck setglobal} if
2 970 18 <00010061fff0040c051e00390062b31c003b2bb8ffe8b310014d2bb8fff0
b30f014d2bb8ffecb30d014d2bb8ffeeb30c014d2bb8ffe8b30b014d2bbe
0233000e0018012f00210026012cb2135304bb012a00350030012eb10956
003ffdd4ed3ffdd4ed012fe12b2b2b2b2b10d6c4313025140e0623222e02
35343e0233321e0615140e0223222e0223220e0215141e0233323e023332
1e02040c02050814405f7b497ecb8f4d5396d17f386a5a461b0805030408
0b080e324f714f568d64373563905b4d7351340f070a0603b71018120e14
29271b54a4f19da1fcaf5c15202a1b0e131a12141c1309272f274586c17c
7bbd7f41262f2606111e>GFNBAA+Calibri AddT42Char 
GFNBAA+Calibri /CharStrings get begin
/C 18 def
end
GFNBAA+Calibri /Encoding get
dup 67 /C put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/LDOGTY+Calibri*1 
[32{/.notdef}rp /space 34{/.notdef}rp /C 9{/.notdef}rp /M 2{/.notdef}rp /P 
16{/.notdef}rp /a /.notdef /c /d /e /.notdef /g 
/.notdef /i 2{/.notdef}rp /l /m /n /o /p 
/q /r /s /t /u /v /w /.notdef 
/y 134{/.notdef}rp]
LDOGTY+Calibri nf
LDOGTY+Calibri*1 [18 0 0 -18 0 0 ]msf
67.44 96.84 mo
(Coal)
[9.59409 9.48587 8.62207 0 ]xsh
LDOGTY+Calibri*1 [18 0 0 -18 0 0 ]msf
99.24 96.84 mo
( )sh
LDOGTY+Calibri*1 [18 0 0 -18 0 0 ]msf
34.44 118.44 mo
(        )
[4.06796 4.19396 4.06796 4.06796 4.21196 4.06796 4.19396 0 ]xsh
%ADOBeginSubsetFont: GFNBAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GFNBAA+Calibri gcheck setglobal} if
2 4030 90 <000200acfffa040b050e003600440091401e102e1137080b014d37100f01
4d37100c0d014c371810014d37180b014d37b80233b7294010014d293f11
b8fff0b310014d11b8fff0b30f014d11b8fff0b30d014d11b8fff6b30c01
4d11b8ffe8b30b014d11b80211b21c2e10b80108b67040014040173db801
0bb5215117550555003f3f3fed12392f5ded39012fe12b2b2b2b2b32d42b
e12b2b2b2b2b123939313025140e0223222e0227032e03232311140e0223
222e023511343633213216171e0315140e02071e03171316160134262726
2623231133323e02040b0614241e1a21140b0477152d3e543b7309132119
192114082917011331411a4b734e2723425c3920342d2814740e08fefd44
50193f3391a84463421f1a080c08040409100c013134573f23fdd9080c07
0505070c0804ae271f05030d38566f4341674f3a140e2b3c4e31fee3241d
03854c69170706fe4c213b50>GFNBAA+Calibri AddT42Char 
2 5728 271 <00020099ffed03d50571002a003d0085b53f3f010a2136b8fff6b30c014d
36b8fff0b30d014d36b8ffe8b30b014d36b8fff0b40f10014c36b801f840
1b152b120c014d2b200d014d2b180b014d2b1810014d2b100f014d2bb802
0a400900150a363521040530b80105b6264a1b46104c39b80105b1054d00
3fed3f3f3fed121739012fd4e12b2b2b2b2b10e12b2b2b2b323931305d01
140e0223222e022715140e0223222e023511343e0233321e0215113e0333
321e0207342e0223220e020711161633323e0203d53363905d2b49464627
08121b15141c12060713201819201208284b484828628b5728ae15345640
203e404527447c433e58371901e775bb844611263a296e080c070404070c
080538080c080404080c08fde5293823104e83b0754582643d122a4232fe
9953573c637b>GFNBAA+Calibri AddT42Char 
GFNBAA+Calibri /CharStrings get begin
/R 90 def
/b 271 def
end
GFNBAA+Calibri /Encoding get
dup 82 /R put
dup 98 /b put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/LDOGTY+Calibri*1 
[32{/.notdef}rp /space 34{/.notdef}rp /C 9{/.notdef}rp /M 2{/.notdef}rp /P 
/.notdef /R 14{/.notdef}rp /a /b /c /d /e 
/.notdef /g /.notdef /i 2{/.notdef}rp /l /m /n 
/o /p /q /r /s /t /u /v 
/w /.notdef /y 134{/.notdef}rp]
LDOGTY+Calibri nf
LDOGTY+Calibri*1 [18 0 0 -18 0 0 ]msf
67.44 118.44 mo
(Renewables)
[9.35999 8.96402 9.50389 8.87402 12.5999 8.62207 9.44989 4.13992 8.96402 0 ]xsh
LDOGTY+Calibri*1 [18 0 0 -18 0 0 ]msf
155.06 118.44 mo
( )sh
LDOGTY+Calibri*1 [18.024 0 0 -18.024 0 0 ]msf
34.44 140.06 mo
(        )
[4.07339 4.18153 4.07339 4.07339 4.19955 4.07339 4.18153 0 ]xsh
%ADOBeginSubsetFont: GFNBAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GFNBAA+Calibri gcheck setglobal} if
2 2012 44 <000100acfffa04500514002f00b8b43f3101230cb8ffe8b310014d0cb8ff
f0b30f014d0cb8fff0b30d014d0cb8fff6b30c014d0cb8ffe8b30b014d0c
b80211401c17240b1810014d0b100f014d0b100d014d0b0a0c014d0b180b
014d0bb802104017004015014d004013014d00401011014c00400c014d00
17b8ffc0b315014d17b8ffc0b613014d172a5224b8012c400fc00c01d00c
010c0c121d5212550555003f3f3f12392f5d71ed3f012f2b2bd42b2b2b2b
e12b2b2b2b2b3210e12b2b2b2b2b3231305d25140e0223222e0235112111
140e0223222e023511343e0233321e0215112111343e0233321e02150450
081421181a201408fdb308142119182214080814221819211408024d0814
201a182114081a080c070505070c08023efdc2080c070505070c0804da08
0c070505070c08fdfa0206080c070505070c0800>GFNBAA+Calibri AddT42Char 
GFNBAA+Calibri /CharStrings get begin
/H 44 def
end
GFNBAA+Calibri /Encoding get
dup 72 /H put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/LDOGTY+Calibri*1 
[32{/.notdef}rp /space 34{/.notdef}rp /C 4{/.notdef}rp /H 4{/.notdef}rp /M 
2{/.notdef}rp /P /.notdef /R 14{/.notdef}rp /a /b /c 
/d /e /.notdef /g /.notdef /i 2{/.notdef}rp /l 
/m /n /o /p /q /r /s /t 
/u /v /w /.notdef /y 134{/.notdef}rp]
LDOGTY+Calibri nf
LDOGTY+Calibri*1 [18.024 0 0 -18.024 0 0 ]msf
67.44 140.06 mo
(Hydroelectricity)
[11.1569 7.91259 9.46249 6.02 9.49852 8.97597 4.09137 8.97597 7.62424 5.96605 6.29036 4.03729 
7.55214 4.07335 6.03815 0 ]xsh
LDOGTY+Calibri*1 [18.024 0 0 -18.024 0 0 ]msf
183.26 140.06 mo
( )sh
LDOGTY+Calibri*1 [18 0 0 -18 0 0 ]msf
34.44 161.66 mo
(        )
[4.06796 4.19396 4.06796 4.06796 4.21196 4.06796 4.19396 0 ]xsh
%ADOBeginSubsetFont: GFNBAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GFNBAA+Calibri gcheck setglobal} if
2 3238 69 <000100acfffa047e0511003d0085b3270f0f14b8ffe8b310014d14b8ffe8
b30f014d14b8ffe8b30d014d14b8fff0b30c014d14b8ffe8b30b014d14b8
0211401e1e0a2e2e321810014d32180f014d32180d014d32100c014d3218
0b014d32b802114010001e38520a2e0f270419225119550654003f3f3f12
17393f012fd4e12b2b2b2b2b32113310e12b2b2b2b2b322f33313025140e
022323222e0227012626272316161511140e0223222e0235113436333332
1e0217011e03173326263511343e0233321e0215047e0d151a0d371a2723
2315fe6820411c02020208131f18181f12082c1a521d271f1d11013a1d36
32311801020108131f191620120847141c12080b1d322702e0397d3b4896
4afcf3070d070505070d0704aa28220a17291ffdc83463605d2f4fab4f02
be070c090404090c0700>GFNBAA+Calibri AddT42Char 
GFNBAA+Calibri /CharStrings get begin
/N 69 def
end
GFNBAA+Calibri /Encoding get
dup 78 /N put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/LDOGTY+Calibri*1 
[32{/.notdef}rp /space 34{/.notdef}rp /C 4{/.notdef}rp /H 4{/.notdef}rp /M 
/N /.notdef /P /.notdef /R 14{/.notdef}rp /a /b 
/c /d /e /.notdef /g /.notdef /i 2{/.notdef}rp 
/l /m /n /o /p /q /r /s 
/t /u /v /w /.notdef /y 134{/.notdef}rp]
LDOGTY+Calibri nf
LDOGTY+Calibri*1 [18 0 0 -18 0 0 ]msf
67.44 161.66 mo
(Nuclear)
[11.6279 9.44989 7.61407 4.06792 8.96402 8.62207 0 ]xsh
LDOGTY+Calibri*1 [18 0 0 -18 0 0 ]msf
124.1 161.66 mo
( )sh
LDOGTY+Calibri*1 [18 0 0 -18 0 0 ]msf
128.3 161.66 mo
(energy)
[8.96402 9.50389 8.96402 6.02998 8.47787 0 ]xsh
LDOGTY+Calibri*1 [18 0 0 -18 0 0 ]msf
178.46 161.66 mo
( )sh
LDOGTY+Calibri*1 [18 0 0 -18 0 0 ]msf
34.44 183.26 mo
(        )
[4.06796 4.19396 4.06796 4.06796 4.21196 4.06796 4.19396 0 ]xsh
LDOGTY+Calibri*1 [18 0 0 -18 0 0 ]msf
67.44 183.26 mo
(Natural)
[11.6279 8.53207 6.03012 9.44989 5.88598 8.62207 0 ]xsh
LDOGTY+Calibri*1 [18 0 0 -18 0 0 ]msf
121.7 183.26 mo
( )sh
LDOGTY+Calibri*1 [18 0 0 -18 0 0 ]msf
125.78 183.26 mo
(gas)
[8.15387 8.62207 0 ]xsh
LDOGTY+Calibri*1 [18 0 0 -18 0 0 ]msf
149.66 183.26 mo
( )sh
LDOGTY+Calibri*1 [18 0 0 -18 0 0 ]msf
34.44 204.86 mo
(        )
[4.06796 4.19396 4.06796 4.06796 4.21196 4.06796 4.19396 0 ]xsh
%ADOBeginSubsetFont: GFNBAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GFNBAA+Calibri gcheck setglobal} if
2 3548 75 <00020063ffed04e8052100130027007c401a141810014d14100f014d1414
0d014d14120c014d14180b014d14b80233400920003000800003001eb8ff
e8b310014d1eb8fff0b30f014d1eb8ffecb30d014d1eb8ffeeb30c014d1e
b8ffe8b30b014d1ebb0233000a00190129b20f5323b8012bb10556003fed
3fed012fe12b2b2b2b2bd45de12b2b2b2b2b313001140e0223222e023534
3e0233321e0207342e0223220e0215141e0233323e0204e84a93de9492d5
8b444a94de948fd48d45b5275b987070985f29265a9772719a5e2802969d
fcb15f57a6f6a099faaf5f56a5f3a96ebd8b4e548cbb6772c08b4d548fbc
>GFNBAA+Calibri AddT42Char 
GFNBAA+Calibri /CharStrings get begin
/O 75 def
end
GFNBAA+Calibri /Encoding get
dup 79 /O put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/LDOGTY+Calibri*1 
[32{/.notdef}rp /space 34{/.notdef}rp /C 4{/.notdef}rp /H 4{/.notdef}rp /M 
/N /O /P /.notdef /R 14{/.notdef}rp /a /b 
/c /d /e /.notdef /g /.notdef /i 2{/.notdef}rp 
/l /m /n /o /p /q /r /s 
/t /u /v /w /.notdef /y 134{/.notdef}rp]
LDOGTY+Calibri nf
LDOGTY+Calibri*1 [18 0 0 -18 0 0 ]msf
67.44 204.86 mo
(Oil)
[11.916 4.04993 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
LDOGTY+Calibri*1 [18 0 0 -18 0 0 ]msf
87.48 204.86 mo
( )sh
36.814 98.59 mo
53.824 98.59 li
53.824 84.417 li
36.814 84.417 li
cp
.132479 .103334 .241825 3.0518e-5 cmyk
ef
2 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
36.814 98.59 mo
53.824 98.59 li
53.824 84.417 li
36.814 84.417 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
36.814 120.69 mo
53.824 120.69 li
53.824 106.517 li
36.814 106.517 li
cp
.0706187 .719692 1 .00894179 cmyk
ef
36.814 120.69 mo
53.824 120.69 li
53.824 106.517 li
36.814 106.517 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
36.85 142.39 mo
53.86 142.39 li
53.86 128.217 li
36.85 128.217 li
cp
.720088 .130068 3.0518e-5 3.0518e-5 cmyk
ef
36.85 142.39 mo
53.86 142.39 li
53.86 128.217 li
36.85 128.217 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
36.85 163.32 mo
53.86 163.32 li
53.86 149.147 li
36.85 149.147 li
cp
3.0518e-5 .507561 .871336 3.0518e-5 cmyk
ef
36.85 163.32 mo
53.86 163.32 li
53.86 149.147 li
36.85 149.147 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
36.85 186.59 mo
53.86 186.59 li
53.86 172.417 li
36.85 172.417 li
cp
3.0518e-5 1 1 3.0518e-5 cmyk
ef
36.85 186.59 mo
53.86 186.59 li
53.86 172.417 li
36.85 172.417 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
36.85 208.48 mo
53.86 208.48 li
53.86 194.307 li
36.85 194.307 li
cp
.483131 3.0518e-5 .939818 3.0518e-5 cmyk
ef
36.85 208.48 mo
53.86 208.48 li
53.86 194.307 li
36.85 194.307 li
cp
1 /0 /CSD get_res sepcs
0 sep
@
649.36 413.023 mo
700.389 413.023 li
700.389 383.942 li
649.36 383.942 li
649.36 413.023 li
ef
649.36 413.023 mo
649.36 412.648 li
700.014 412.648 li
700.014 384.317 li
649.735 384.317 li
649.735 413.023 li
649.36 413.023 li
649.36 412.648 li
649.36 413.023 li
648.985 413.023 li
648.985 383.942 li
648.985 383.843 649.025 383.747 649.095 383.677 cv
649.165 383.607 649.261 383.567 649.36 383.567 cv
700.389 383.567 li
700.488 383.567 700.584 383.607 700.654 383.677 cv
700.724 383.747 700.764 383.843 700.764 383.942 cv
700.764 413.023 li
700.764 413.122 700.724 413.218 700.654 413.288 cv
700.584 413.358 700.488 413.398 700.389 413.398 cv
649.36 413.398 li
649.261 413.398 649.165 413.358 649.095 413.288 cv
649.025 413.218 648.985 413.122 648.985 413.023 cv
649.36 413.023 li
f
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: GFNBAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GFNBAA+Calibri gcheck setglobal} if
3 0 1005 <000100ae0000039f0517002e00e54024241e01241d01241c01231b01241a
01241901261801261701291201291101122010014d30b8ffc0400d0f024d
60300100200b014d0029b8ffe8b310014d29b8fff0b30f014d29b8fff0b3
0d014d29b8fff6b30c014d29b8fff8b30b014d29b80211400e1e18200b01
4d180b200b014d0b11b8ffe0b30f014d11b8ffd4b30f024d11b8ffc0b310
014d11b8ffe0b30f014d11b8ffc0b30c014d11b8fff040090b014da01101
111312b8013fb323522910b80107b10654003fed323ffdcd012f5d2b2b2b
2b2b2bcd2bc42b33f12b2b2b2b2bc52b31305d2b002b015d5d5d5d5d5d5d
5d5d5d25140e022321222e0235343e02332111070606262635343e023725
3e0333321e02151133321e02039f060a0d07fd5c070c0b0606090d08010e
fa13170e0503060b09012a040c12181218201206ea080e090544131a1007
07101a13121a110903d8950a040d1e171118100c06bf0304040104070b06
fb8f09111a00>GFNBAA+Calibri AddT42Char 
GFNBAA+Calibri /CharStrings get begin
/one 1005 def
end
GFNBAA+Calibri /Encoding get
dup 49 /one put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/LDOGTY+Calibri*1 
[32{/.notdef}rp /space 16{/.notdef}rp /one 17{/.notdef}rp /C 4{/.notdef}rp /H 
4{/.notdef}rp /M /N /O /P /.notdef /R 14{/.notdef}rp 
/a /b /c /d /e /.notdef /g /.notdef 
/i 2{/.notdef}rp /l /m /n /o /p /q 
/r /s /t /u /v /w /.notdef /y 
134{/.notdef}rp]
LDOGTY+Calibri nf
LDOGTY+Calibri*1 [18 0 0 -18 0 0 ]msf
656.66 404.448 mo
(1)sh
%ADOBeginSubsetFont: GFNBAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GFNBAA+Calibri gcheck setglobal} if
2 15666 1004 <00020048ffed03c705210013002b00ea4019281201291101260d01260c01
2608012507012a03012902012db8ffc040250f024d602d01141810014d14
100f014d14160d014d140a0c014d14200b014d14180c014d14bb022d0000
0020ffe8b310014d20b8fff0b30f014d20b8ffeab30d014d20b8fff6b30c
014d20b8ffe8b60c014d24200120b8022d40090a200030004000030ab8ff
f040090f014d2f0a4f0a0200b8ffd040090f014d0a100f024d00b8ffc040
0a0f024d000a000a2d2c1bb8010ab20f5325b8010ab10556003fed3fed11
120139392f2f2b2b2b5d2b5d10e15d2b2b2b2b2b10e12b2b2b2b2b2b3130
5d2b5d5d5d5d5d5d5d5d01140e0223222e0235343e0233321e0207342e04
23220e0215141e0233323e0403c72f6db0817aa7662b306cb0807ba7662b
b00e1b2b3c4d30556a3d161e41654838553d281809028a95f6b16157a9f7
a094f7b16157a9f7ac619a76553719508cbc6c91cb803a24435e7285>GFNBAA+Calibri AddT42Char 
GFNBAA+Calibri /CharStrings get begin
/zero 1004 def
end
GFNBAA+Calibri /Encoding get
dup 48 /zero put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/LDOGTY+Calibri*1 
[32{/.notdef}rp /space 15{/.notdef}rp /zero /one 17{/.notdef}rp /C 4{/.notdef}rp 
/H 4{/.notdef}rp /M /N /O /P /.notdef /R 
14{/.notdef}rp /a /b /c /d /e /.notdef /g 
/.notdef /i 2{/.notdef}rp /l /m /n /o /p 
/q /r /s /t /u /v /w /.notdef 
/y 134{/.notdef}rp]
LDOGTY+Calibri nf
LDOGTY+Calibri*1 [18 0 0 -18 0 0 ]msf
665.78 404.448 mo
(000)
[9.12006 9.12006 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
LDOGTY+Calibri*1 [18 0 0 -18 0 0 ]msf
693.14 404.448 mo
( )sh
28.797 437.333 mo
649.587 437.333 li
649.587 425.994 li
28.797 425.994 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
28.797 437.333 mo
649.587 437.333 li
649.587 425.994 li
28.797 425.994 li
cp
@
513.09 457.216 mo
550.254 457.216 li
550.254 428.135 li
513.09 428.135 li
cp
ef
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: GFNBAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GFNBAA+Calibri gcheck setglobal} if
2 15078 972 <00030052ffed03ba05210027003700470182b90036fff0b40f11014c36b8
fff0b40c0d014c35b8fff0b40f11014c35b8fff0b40c0d014c34b8fff0b4
0f11014c34b8fff0b40c0d014c33b8fff0b311014d33b8fff0b30f014d49
b8ffc0b60f024d60490130b8fff0b40c0d014c30b8fff0b40f10014c30b8
fff0b40c0d014c30b8ffe0b30b014d30b8021940191428100c0d014c2810
0f10014c28100c0d014c28200b014d28b80218401a1e0f231e1e180f014d
14180f014d141e141e0a38100c0d014c38b8ffd040151d014d38100f1001
4c38100c0d014c38200b014d38ba02430000ffd4b30f024d00b8ffe0b30f
014d00b8ffc0b314014d00b8ffc0b310014d00b8ffc0b30d014d00b8ffc0
b40b014d0042b8fff0400a0c0d014c42301d014d42b8fff0b40f10014c42
b8fff0b40c0d014c42b8ffe0b30b014d42b8024340110a400b014d0a353d
052dfd195945fd055f003fed3fed123939012f2be12b2b2b2b2bd42b2b2b
2b2b2be12b2b2b2b2b1239392f2f2b2b12393910e12b2b2b2b10e12b2b2b
2b31305d2b002b2b2b2b2b2b2b2b01140e0223222e0235343e02372e0335
343e0233321e0215140e02071e0303342e0223220615141e021736361334
2e02270e0315141633323603ba3c71a66b649e6e3a284b6e453c5c402131
639966628f5d2c21405d3c476f4b27d81d3853356c6f1b39573c656c2a22
4567443f5f3d1f85848083014c54835a2e2a52784d3d66564b221f45515c
36447758332f516e3f335e544920234a555f025f2a443019625527433c39
1f347efda22e4b413d211f3e42492c616a6b>GFNBAA+Calibri AddT42Char 
3 2264 1012 <ffff0052ffed03ba0521020603cc0000>GFNBAA+Calibri AddT42Char 
GFNBAA+Calibri /CharStrings get begin
/eight 1012 def
end
GFNBAA+Calibri /Encoding get
dup 56 /eight put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/LDOGTY+Calibri*1 
[32{/.notdef}rp /space 15{/.notdef}rp /zero /one 6{/.notdef}rp /eight 10{/.notdef}rp 
/C 4{/.notdef}rp /H 4{/.notdef}rp /M /N /O /P 
/.notdef /R 14{/.notdef}rp /a /b /c /d /e 
/.notdef /g /.notdef /i 2{/.notdef}rp /l /m /n 
/o /p /q /r /s /t /u /v 
/w /.notdef /y 134{/.notdef}rp]
LDOGTY+Calibri nf
LDOGTY+Calibri*1 [18 0 0 -18 0 0 ]msf
520.37 448.656 mo
(08)
[9.12006 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
LDOGTY+Calibri*1 [18 0 0 -18 0 0 ]msf
538.61 448.656 mo
( )sh
388.35 457.216 mo
425.514 457.216 li
425.514 428.135 li
388.35 428.135 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: GFNBAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GFNBAA+Calibri gcheck setglobal} if
3 686 1007 <00010067ffed0392052100580105b9005affc0401c0f024d605a01310810
014d31100f014d31100c0d014c31200b014d31b80235400a4e53264e4e18
13014d40b8ffe840260f014d26200f014d40264e4e2640030e1b0810014d
1b100f014d1b100c0d014c1b200b014d1bb8fff8b30b014d1bb8022db500
080b014d00b8ffe8b40f024d000eb8ffe0b30f014d0eb8fff0b30f014d0e
b8ffc040130c014d0e3b400f014d3b400c0d014c2f3b0111b8ffc0b30f01
4d11b8ffc0400a0c0d014c3b113b111636b8010b400a49532cf320200549
5316b8010bb10556003fed3f12392fed3910ed1139392f2f2b2b5d2b2b01
2f2b2b2bd42b2be12b2b2b2b2b1217392f2f2f2b2b2b11123910e12b2b2b
2b31305d2b01140e0223222e0635343633321e0233323e0235342e022323
222e0235343e023333323e0235342e0223220e0223222e0235343e063332
1e0215140e0207151e0303923e74aa6b4171583a0f0806030e0d0935536f
44426444222b53794d7b080f0b07060b0e0971426949271a3451353a614c
320a070b0703020608133a556f405a885b2d203e5a3b436f502d0172598f
6637151d1f0e0e141d15241c202520223e55323758402207101a1513190f
07224059372849361f232823050f1b160f17110e132423182e5475473d69
51390b020735506b>GFNBAA+Calibri AddT42Char 
GFNBAA+Calibri /CharStrings get begin
/three 1007 def
end
GFNBAA+Calibri /Encoding get
dup 51 /three put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/LDOGTY+Calibri*1 
[32{/.notdef}rp /space 15{/.notdef}rp /zero /one /.notdef /three 4{/.notdef}rp 
/eight 10{/.notdef}rp /C 4{/.notdef}rp /H 4{/.notdef}rp /M /N 
/O /P /.notdef /R 14{/.notdef}rp /a /b /c 
/d /e /.notdef /g /.notdef /i 2{/.notdef}rp /l 
/m /n /o /p /q /r /s /t 
/u /v /w /.notdef /y 134{/.notdef}rp]
LDOGTY+Calibri nf
LDOGTY+Calibri*1 [18 0 0 -18 0 0 ]msf
395.62 448.656 mo
(03)
[9.12006 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
LDOGTY+Calibri*1 [18 0 0 -18 0 0 ]msf
413.86 448.656 mo
( )sh
263.61 457.216 mo
300.774 457.216 li
300.774 428.135 li
263.61 428.135 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: GFNBAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GFNBAA+Calibri gcheck setglobal} if
3 2280 1013 <00020052ffed03a605210030004200bd4013292e012a0501290401290301
2a2601260a0144b8ffc040200f024d60440131080d014d31100c0d014c1d
7a3101393149316931032b310131b8022c4009000e0e200070000200b8ff
e0b30f024d00b8ffe0b40f014d003bb8fff8b30d014d3bb8fff040120c0d
014c753b01363b463b663b03243b013bb8022b400e2f25012540f2202007
36f42a5318b80108b10756003fed3fed12392fed012f5de15d5d5d2b2bc4
2b2b5d392f10e15d5d5d322b2b31305d2b005d5d015d5d5d5d01140e0423
222e0435343e0233321e0233323e0237060623222e0235343e0233321e04
07342e0223220e0215141e0233323603a61430517ba9702b51412c140903
060b080b283d5233618b582c023594606c935927326aa472517d5c402711
af2242603f415c3b1c19385a424b8c02ba54ac9f8b683b0b1012121f1a16
1a0e050f120f4b7ea65c1f303b668c53569b7646294d6d8aa14680af6c30
2f4f64353b6244252d00>GFNBAA+Calibri AddT42Char 
GFNBAA+Calibri /CharStrings get begin
/nine 1013 def
end
GFNBAA+Calibri /Encoding get
dup 57 /nine put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/LDOGTY+Calibri*1 
[32{/.notdef}rp /space 15{/.notdef}rp /zero /one /.notdef /three 4{/.notdef}rp 
/eight /nine 9{/.notdef}rp /C 4{/.notdef}rp /H 4{/.notdef}rp /M 
/N /O /P /.notdef /R 14{/.notdef}rp /a /b 
/c /d /e /.notdef /g /.notdef /i 2{/.notdef}rp 
/l /m /n /o /p /q /r /s 
/t /u /v /w /.notdef /y 134{/.notdef}rp]
LDOGTY+Calibri nf
LDOGTY+Calibri*1 [18 0 0 -18 0 0 ]msf
270.86 448.656 mo
(98)
[9.12006 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
LDOGTY+Calibri*1 [18 0 0 -18 0 0 ]msf
289.1 448.656 mo
( )sh
138.87 457.216 mo
176.034 457.216 li
176.034 428.135 li
138.87 428.135 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
1 /0 /CSD get_res sepcs
1 sep
LDOGTY+Calibri*1 [18 0 0 -18 0 0 ]msf
146.09 448.656 mo
(93)
[9.12007 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
LDOGTY+Calibri*1 [18 0 0 -18 0 0 ]msf
164.35 448.656 mo
( )sh
25.475 457.216 mo
62.639 457.216 li
62.639 428.135 li
25.475 428.135 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
1 /0 /CSD get_res sepcs
1 sep
LDOGTY+Calibri*1 [18 0 0 -18 0 0 ]msf
32.688 448.656 mo
(88)
[9.12007 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
LDOGTY+Calibri*1 [18 0 0 -18 0 0 ]msf
50.928 448.656 mo
( )sh
528.915 422.465 mo
528.165 422.465 li
528.165 419.569 li
528.915 419.569 li
528.915 422.465 li
528.915 417.319 mo
528.165 417.319 li
528.165 414.319 li
528.915 414.319 li
528.915 417.319 li
528.915 412.069 mo
528.165 412.069 li
528.165 409.069 li
528.915 409.069 li
528.915 412.069 li
528.915 406.819 mo
528.165 406.819 li
528.165 403.819 li
528.915 403.819 li
528.915 406.819 li
528.915 401.569 mo
528.165 401.569 li
528.165 398.569 li
528.915 398.569 li
528.915 401.569 li
528.915 396.319 mo
528.165 396.319 li
528.165 393.319 li
528.915 393.319 li
528.915 396.319 li
528.915 391.069 mo
528.165 391.069 li
528.165 388.069 li
528.915 388.069 li
528.915 391.069 li
528.915 385.819 mo
528.165 385.819 li
528.165 382.819 li
528.915 382.819 li
528.915 385.819 li
528.915 380.569 mo
528.165 380.569 li
528.165 377.569 li
528.915 377.569 li
528.915 380.569 li
528.915 375.319 mo
528.165 375.319 li
528.165 372.319 li
528.915 372.319 li
528.915 375.319 li
528.915 370.069 mo
528.165 370.069 li
528.165 367.069 li
528.915 367.069 li
528.915 370.069 li
528.915 364.819 mo
528.165 364.819 li
528.165 361.819 li
528.915 361.819 li
528.915 364.819 li
528.915 359.569 mo
528.165 359.569 li
528.165 356.569 li
528.915 356.569 li
528.915 359.569 li
528.915 354.319 mo
528.165 354.319 li
528.165 351.319 li
528.915 351.319 li
528.915 354.319 li
528.915 349.069 mo
528.165 349.069 li
528.165 346.069 li
528.915 346.069 li
528.915 349.069 li
528.915 343.819 mo
528.165 343.819 li
528.165 343.465 li
528.64 343.465 li
528.64 342.715 li
528.165 342.715 li
528.165 340.819 li
528.915 340.819 li
528.915 343.819 li
528.915 338.569 mo
528.165 338.569 li
528.165 335.569 li
528.915 335.569 li
528.915 338.569 li
528.915 333.319 mo
528.165 333.319 li
528.165 330.319 li
528.915 330.319 li
528.915 333.319 li
528.915 328.069 mo
528.165 328.069 li
528.165 325.069 li
528.915 325.069 li
528.915 328.069 li
528.915 322.819 mo
528.165 322.819 li
528.165 319.819 li
528.915 319.819 li
528.915 322.819 li
.490196 0 .831372 .168627 cmyk
f
528.915 316.398 mo
528.165 316.337 li
528.165 314.57 li
528.915 314.57 li
528.915 316.398 li
.00392157 .831372 .831372 .168627 cmyk
f
528.915 317.569 mo
528.165 317.569 li
528.165 316.337 li
528.915 316.398 li
528.915 317.569 li
.490196 0 .831372 .168627 cmyk
f
528.915 312.32 mo
528.165 312.32 li
528.165 309.32 li
528.915 309.32 li
528.915 312.32 li
528.915 307.07 mo
528.165 307.07 li
528.165 304.07 li
528.915 304.07 li
528.915 307.07 li
528.915 301.82 mo
528.165 301.82 li
528.165 298.82 li
528.915 298.82 li
528.915 301.82 li
528.915 296.57 mo
528.165 296.57 li
528.165 293.57 li
528.915 293.57 li
528.915 296.57 li
528.915 291.32 mo
528.165 291.32 li
528.165 288.515 li
528.915 288.515 li
528.915 291.32 li
528.915 286.07 mo
528.165 286.07 li
528.165 283.07 li
528.915 283.07 li
528.915 286.07 li
528.915 280.82 mo
528.165 280.82 li
528.165 277.82 li
528.915 277.82 li
528.915 280.82 li
528.915 275.57 mo
528.165 275.57 li
528.165 272.57 li
528.915 272.57 li
528.915 275.57 li
528.915 270.32 mo
528.165 270.32 li
528.165 267.32 li
528.915 267.32 li
528.915 270.32 li
528.915 265.07 mo
528.165 265.07 li
528.165 262.07 li
528.915 262.07 li
528.915 265.07 li
528.915 259.82 mo
528.165 259.82 li
528.165 256.82 li
528.915 256.82 li
528.915 259.82 li
528.915 254.57 mo
528.165 254.57 li
528.165 251.57 li
528.915 251.57 li
528.915 254.57 li
528.915 249.32 mo
528.165 249.32 li
528.165 246.32 li
528.915 246.32 li
528.915 249.32 li
.00392157 .831372 .831372 .168627 cmyk
f
528.915 242.959 mo
528.165 242.846 li
528.165 241.07 li
528.915 241.07 li
528.915 242.959 li
.00392157 .337255 .831372 .168627 cmyk
f
528.915 244.07 mo
528.165 244.07 li
528.165 242.846 li
528.915 242.959 li
528.915 244.07 li
.00392157 .831372 .831372 .168627 cmyk
f
528.915 238.82 mo
528.165 238.82 li
528.165 235.82 li
528.915 235.82 li
528.915 238.82 li
528.915 233.57 mo
528.165 233.57 li
528.165 230.57 li
528.915 230.57 li
528.915 233.57 li
.00392157 .337255 .831372 .168627 cmyk
f
528.915 226.276 mo
528.165 226.158 li
528.165 225.32 li
528.915 225.32 li
528.915 226.276 li
.65098 .184314 0 .168627 cmyk
f
528.915 228.32 mo
528.165 228.32 li
528.165 226.158 li
528.915 226.276 li
528.915 228.32 li
.00392157 .337255 .831372 .168627 cmyk
f
528.915 223.07 mo
528.165 223.07 li
528.165 220.07 li
528.915 220.07 li
528.915 223.07 li
528.915 217.82 mo
528.165 217.82 li
528.165 214.82 li
528.915 214.82 li
528.915 217.82 li
528.915 212.57 mo
528.165 212.57 li
528.165 209.57 li
528.915 209.57 li
528.915 212.57 li
.65098 .184314 0 .168627 cmyk
f
528.915 206.609 mo
528.165 206.498 li
528.165 204.32 li
528.915 204.32 li
528.915 206.609 li
0 .635294 .831372 .168627 cmyk
f
528.915 207.32 mo
528.165 207.32 li
528.165 206.498 li
528.915 206.609 li
528.915 207.32 li
.65098 .184314 0 .168627 cmyk
f
528.915 202.07 mo
528.165 202.07 li
528.165 199.07 li
528.915 199.07 li
528.915 202.07 li
528.915 196.82 mo
528.165 196.82 li
528.165 193.82 li
528.915 193.82 li
528.915 196.82 li
528.915 191.57 mo
528.165 191.57 li
528.165 188.57 li
528.915 188.57 li
528.915 191.57 li
528.915 186.32 mo
528.165 186.32 li
528.165 183.32 li
528.915 183.32 li
528.915 186.32 li
528.915 181.07 mo
528.37 181.07 li
528.37 180.635 li
528.165 180.635 li
528.165 178.07 li
528.915 178.07 li
528.915 181.07 li
528.915 175.82 mo
528.165 175.82 li
528.165 172.82 li
528.915 172.82 li
528.915 175.82 li
528.915 170.57 mo
528.165 170.57 li
528.165 167.57 li
528.915 167.57 li
528.915 170.57 li
528.915 165.32 mo
528.165 165.32 li
528.165 162.32 li
528.915 162.32 li
528.915 165.32 li
528.915 160.07 mo
528.165 160.07 li
528.165 157.07 li
528.915 157.07 li
528.915 160.07 li
528.915 154.82 mo
528.165 154.82 li
528.165 151.82 li
528.915 151.82 li
528.915 154.82 li
528.915 149.57 mo
528.165 149.57 li
528.165 146.57 li
528.915 146.57 li
528.915 149.57 li
528.915 144.32 mo
528.165 144.32 li
528.165 141.32 li
528.915 141.32 li
528.915 144.32 li
528.915 139.07 mo
528.165 139.07 li
528.165 136.07 li
528.915 136.07 li
528.915 139.07 li
528.915 133.82 mo
528.165 133.82 li
528.165 130.82 li
528.915 130.82 li
528.915 133.82 li
528.915 128.57 mo
528.165 128.57 li
528.165 125.57 li
528.915 125.57 li
528.915 128.57 li
528.915 123.32 mo
528.165 123.32 li
528.165 120.32 li
528.915 120.32 li
528.915 123.32 li
/1 
<<
/Name (Black)
/CSA /1 get_csa_by_name
/MappedCSA /1 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /1 /CSD get_res sepcs
.333333 sep
f
528.915 115.239 mo
528.165 115.124 li
528.165 115.07 li
528.915 115.07 li
528.915 115.239 li
1 /1 /CSD get_res sepcs
.168627 sep
f
528.915 118.07 mo
528.165 118.07 li
528.165 115.124 li
528.915 115.239 li
528.915 118.07 li
1 /1 /CSD get_res sepcs
.333333 sep
f
528.915 112.82 mo
528.165 112.82 li
528.165 109.82 li
528.915 109.82 li
528.915 112.82 li
528.915 107.57 mo
528.165 107.57 li
528.165 104.57 li
528.915 104.57 li
528.915 107.57 li
528.915 102.32 mo
528.165 102.32 li
528.165 99.5117 li
528.915 99.5117 li
528.915 102.32 li
1 /1 /CSD get_res sepcs
.168627 sep
f
528.915 99.5117 mo
528.165 99.5117 li
528.165 99.3199 li
528.915 99.3199 li
528.915 99.5117 li
1 /1 /CSD get_res sepcs
1 sep
f
528.915 97.0699 mo
528.165 97.0699 li
528.165 94.07 li
528.915 94.07 li
528.915 97.0699 li
528.915 91.82 mo
528.165 91.82 li
528.165 88.82 li
528.915 88.82 li
528.915 91.82 li
528.915 86.57 mo
528.165 86.57 li
528.165 83.57 li
528.915 83.57 li
528.915 86.57 li
528.915 81.32 mo
528.165 81.32 li
528.165 78.32 li
528.915 78.32 li
528.915 81.32 li
528.915 76.07 mo
528.165 76.07 li
528.165 73.2981 li
528.915 73.2981 li
528.915 76.07 li
1 /1 /CSD get_res sepcs
.168627 sep
f
528.165 73.2981 mo
528.165 73.07 li
528.915 73.07 li
528.915 73.2981 li
528.165 73.2981 li
1 /1 /CSD get_res sepcs
1 sep
f
404.955 422.465 mo
404.205 422.465 li
404.205 419.569 li
404.955 419.569 li
404.955 422.465 li
404.955 417.319 mo
404.205 417.319 li
404.205 414.319 li
404.955 414.319 li
404.955 417.319 li
404.955 412.069 mo
404.205 412.069 li
404.205 409.069 li
404.955 409.069 li
404.955 412.069 li
404.955 406.819 mo
404.205 406.819 li
404.205 403.819 li
404.955 403.819 li
404.955 406.819 li
404.955 401.569 mo
404.205 401.569 li
404.205 398.569 li
404.955 398.569 li
404.955 401.569 li
404.955 396.088 mo
404.205 396.088 li
404.205 393.319 li
404.955 393.319 li
404.955 396.088 li
404.955 391.069 mo
404.205 391.069 li
404.205 388.069 li
404.955 388.069 li
404.955 391.069 li
404.955 385.819 mo
404.205 385.819 li
404.205 382.819 li
404.955 382.819 li
404.955 385.819 li
404.955 380.569 mo
404.205 380.569 li
404.205 377.569 li
404.955 377.569 li
404.955 380.569 li
404.955 375.319 mo
404.205 375.319 li
404.205 372.319 li
404.955 372.319 li
404.955 375.319 li
404.955 370.069 mo
404.205 370.069 li
404.205 367.069 li
404.955 367.069 li
404.955 370.069 li
404.955 364.819 mo
404.205 364.819 li
404.205 361.819 li
404.955 361.819 li
404.955 364.819 li
404.955 359.569 mo
404.205 359.569 li
404.205 356.569 li
404.955 356.569 li
404.955 359.569 li
404.955 354.319 mo
404.205 354.319 li
404.205 351.319 li
404.955 351.319 li
404.955 354.319 li
404.955 349.069 mo
404.205 349.069 li
404.205 346.069 li
404.955 346.069 li
404.955 349.069 li
404.955 343.819 mo
404.205 343.819 li
404.205 340.819 li
404.955 340.819 li
404.955 342.715 li
404.89 342.715 li
404.89 343.465 li
404.955 343.465 li
404.955 343.819 li
404.955 338.569 mo
404.205 338.569 li
404.205 335.569 li
404.955 335.569 li
404.955 338.569 li
404.955 333.319 mo
404.205 333.319 li
404.205 330.319 li
404.955 330.319 li
404.955 333.319 li
404.955 328.069 mo
404.205 328.069 li
404.205 325.069 li
404.955 325.069 li
404.955 328.069 li
.490196 0 .831372 .168627 cmyk
f
404.955 322.819 mo
404.205 322.819 li
404.205 319.819 li
404.955 319.819 li
404.955 322.819 li
404.955 317.569 mo
404.205 317.569 li
404.205 314.57 li
404.955 314.57 li
404.955 317.569 li
404.955 312.32 mo
404.205 312.32 li
404.205 309.32 li
404.955 309.32 li
404.955 312.32 li
404.955 307.07 mo
404.205 307.07 li
404.205 304.07 li
404.955 304.07 li
404.955 307.07 li
404.955 301.82 mo
404.205 301.82 li
404.205 298.82 li
404.955 298.82 li
404.955 301.82 li
404.955 296.57 mo
404.205 296.57 li
404.205 293.57 li
404.955 293.57 li
404.955 296.57 li
404.955 291.32 mo
404.205 291.32 li
404.205 288.515 li
404.4 288.515 li
404.4 288.32 li
404.955 288.32 li
404.955 291.32 li
404.955 286.07 mo
404.205 286.07 li
404.205 283.07 li
404.955 283.07 li
404.955 286.07 li
404.955 280.82 mo
404.205 280.82 li
404.205 277.82 li
404.955 277.82 li
404.955 280.82 li
404.955 275.57 mo
404.205 275.57 li
404.205 272.57 li
404.955 272.57 li
404.955 275.57 li
404.955 270.32 mo
404.205 270.32 li
404.205 267.32 li
404.955 267.32 li
404.955 270.32 li
404.955 265.07 mo
404.205 265.07 li
404.205 262.07 li
404.955 262.07 li
404.955 265.07 li
.00392157 .831372 .831372 .168627 cmyk
f
404.205 259.429 mo
404.205 256.82 li
404.955 256.82 li
404.955 259.247 li
404.205 259.429 li
.00392157 .337255 .831372 .168627 cmyk
f
404.955 259.82 mo
404.205 259.82 li
404.205 259.429 li
404.955 259.247 li
404.955 259.82 li
.00392157 .831372 .831372 .168627 cmyk
f
404.955 254.57 mo
404.205 254.57 li
404.205 251.57 li
404.955 251.57 li
404.955 254.57 li
404.955 249.32 mo
404.205 249.32 li
404.205 246.32 li
404.955 246.32 li
404.955 249.32 li
.00392157 .337255 .831372 .168627 cmyk
f
404.205 243.158 mo
404.205 241.07 li
404.955 241.07 li
404.955 242.955 li
404.205 243.158 li
.65098 .184314 0 .168627 cmyk
f
404.955 244.07 mo
404.205 244.07 li
404.205 243.158 li
404.955 242.955 li
404.955 244.07 li
.00392157 .337255 .831372 .168627 cmyk
f
404.955 238.82 mo
404.205 238.82 li
404.205 235.82 li
404.955 235.82 li
404.955 238.82 li
404.955 233.57 mo
404.205 233.57 li
404.205 230.57 li
404.955 230.57 li
404.955 233.57 li
.65098 .184314 0 .168627 cmyk
f
404.205 226.905 mo
404.205 225.32 li
404.955 225.32 li
404.955 226.67 li
404.205 226.905 li
0 .635294 .831372 .168627 cmyk
f
404.955 228.32 mo
404.205 228.32 li
404.205 226.905 li
404.955 226.67 li
404.955 228.32 li
.65098 .184314 0 .168627 cmyk
f
404.955 223.07 mo
404.205 223.07 li
404.205 220.07 li
404.955 220.07 li
404.955 223.07 li
404.955 217.82 mo
404.205 217.82 li
404.205 214.82 li
404.955 214.82 li
404.955 217.82 li
404.955 212.57 mo
404.205 212.57 li
404.205 209.57 li
404.955 209.57 li
404.955 212.57 li
404.955 207.32 mo
404.205 207.32 li
404.205 204.32 li
404.955 204.32 li
404.955 207.32 li
404.955 202.07 mo
404.205 202.07 li
404.205 199.07 li
404.955 199.07 li
404.955 202.07 li
404.955 196.82 mo
404.205 196.82 li
404.205 193.82 li
404.955 193.82 li
404.955 196.82 li
404.955 191.57 mo
404.205 191.57 li
404.205 188.57 li
404.955 188.57 li
404.955 191.57 li
404.955 186.32 mo
404.205 186.32 li
404.205 183.32 li
404.955 183.32 li
404.955 186.32 li
404.62 181.07 mo
404.205 181.07 li
404.205 178.07 li
404.955 178.07 li
404.955 180.635 li
404.62 180.635 li
404.62 181.07 li
404.955 175.82 mo
404.205 175.82 li
404.205 172.82 li
404.955 172.82 li
404.955 175.82 li
404.955 170.57 mo
404.205 170.57 li
404.205 167.57 li
404.955 167.57 li
404.955 170.57 li
404.955 165.32 mo
404.205 165.32 li
404.205 162.32 li
404.955 162.32 li
404.955 165.32 li
404.955 160.07 mo
404.205 160.07 li
404.205 157.07 li
404.955 157.07 li
404.955 160.07 li
1 /1 /CSD get_res sepcs
.333333 sep
f
404.205 153.89 mo
404.205 151.82 li
404.955 151.82 li
404.955 153.497 li
404.205 153.89 li
1 /1 /CSD get_res sepcs
.168627 sep
f
404.955 154.82 mo
404.205 154.82 li
404.205 153.89 li
404.955 153.497 li
404.955 154.82 li
1 /1 /CSD get_res sepcs
.333333 sep
f
404.955 149.57 mo
404.205 149.57 li
404.205 146.57 li
404.955 146.57 li
404.955 149.57 li
404.955 144.32 mo
404.205 144.32 li
404.205 141.32 li
404.955 141.32 li
404.955 144.32 li
404.955 139.07 mo
404.205 139.07 li
404.205 136.07 li
404.955 136.07 li
404.955 139.07 li
404.955 133.82 mo
404.205 133.82 li
404.205 130.82 li
404.955 130.82 li
404.955 133.82 li
404.955 128.57 mo
404.205 128.57 li
404.205 126.554 li
404.955 126.554 li
404.955 128.57 li
1 /1 /CSD get_res sepcs
.168627 sep
f
404.955 126.554 mo
404.205 126.554 li
404.205 126.435 li
404.955 126.435 li
404.955 126.554 li
1 /1 /CSD get_res sepcs
1 sep
f
404.955 121.445 mo
404.205 121.445 li
404.205 120.32 li
404.955 120.32 li
404.955 121.445 li
404.955 118.07 mo
404.205 118.07 li
404.205 115.07 li
404.955 115.07 li
404.955 118.07 li
404.955 112.82 mo
404.205 112.82 li
404.205 109.82 li
404.955 109.82 li
404.955 112.82 li
404.955 107.57 mo
404.205 107.57 li
404.205 104.57 li
404.955 104.57 li
404.955 107.57 li
404.955 102.32 mo
404.205 102.32 li
404.205 99.5117 li
404.955 99.5117 li
404.955 102.32 li
1 /1 /CSD get_res sepcs
.168627 sep
f
404.955 99.5117 mo
404.205 99.5117 li
404.205 99.3199 li
404.955 99.3199 li
404.955 99.5117 li
1 /1 /CSD get_res sepcs
1 sep
f
404.955 97.0699 mo
404.205 97.0699 li
404.205 94.07 li
404.955 94.07 li
404.955 97.0699 li
404.955 91.82 mo
404.205 91.82 li
404.205 88.82 li
404.955 88.82 li
404.955 91.82 li
404.955 86.57 mo
404.205 86.57 li
404.205 83.57 li
404.955 83.57 li
404.955 86.57 li
404.955 81.32 mo
404.205 81.32 li
404.205 78.32 li
404.955 78.32 li
404.955 81.32 li
404.955 76.07 mo
404.205 76.07 li
404.205 73.2981 li
404.955 73.2981 li
404.955 76.07 li
1 /1 /CSD get_res sepcs
.168627 sep
f
404.205 73.2981 mo
404.205 73.07 li
404.955 73.07 li
404.955 73.2981 li
404.205 73.2981 li
1 /1 /CSD get_res sepcs
1 sep
f
156.255 420.43 mo
155.505 420.43 li
155.505 417.43 li
156.255 417.43 li
156.255 420.43 li
156.255 415.18 mo
155.505 415.18 li
155.505 412.18 li
156.255 412.18 li
156.255 415.18 li
156.255 409.93 mo
155.505 409.93 li
155.505 406.93 li
156.255 406.93 li
156.255 409.93 li
156.255 404.68 mo
155.505 404.68 li
155.505 401.68 li
156.255 401.68 li
156.255 404.68 li
156.255 399.43 mo
155.505 399.43 li
155.505 396.43 li
156.255 396.43 li
156.255 399.43 li
156.255 394.18 mo
155.505 394.18 li
155.505 391.18 li
156.255 391.18 li
156.255 394.18 li
156.255 388.93 mo
155.505 388.93 li
155.505 385.93 li
156.255 385.93 li
156.255 388.93 li
156.255 383.68 mo
155.505 383.68 li
155.505 380.68 li
156.255 380.68 li
156.255 383.68 li
156.255 378.43 mo
155.505 378.43 li
155.505 375.43 li
156.255 375.43 li
156.255 378.43 li
156.255 373.18 mo
155.505 373.18 li
155.505 370.18 li
156.255 370.18 li
156.255 373.18 li
156.255 367.93 mo
155.505 367.93 li
155.505 364.93 li
156.255 364.93 li
156.255 367.93 li
156.255 362.68 mo
155.505 362.68 li
155.505 359.68 li
156.255 359.68 li
156.255 362.68 li
156.255 357.43 mo
155.505 357.43 li
155.505 354.43 li
156.255 354.43 li
156.255 357.43 li
156.255 352.18 mo
155.505 352.18 li
155.505 349.18 li
156.255 349.18 li
156.255 352.18 li
156.255 346.93 mo
155.505 346.93 li
155.505 343.93 li
156.255 343.93 li
156.255 346.93 li
156.255 341.68 mo
155.505 341.68 li
155.505 338.68 li
156.255 338.68 li
156.255 341.68 li
.490196 0 .831372 .168627 cmyk
f
156.255 336.43 mo
155.505 336.43 li
155.505 333.43 li
156.255 333.43 li
156.255 336.43 li
156.255 331.18 mo
155.505 331.18 li
155.505 328.18 li
156.255 328.18 li
156.255 331.18 li
156.255 325.93 mo
155.505 325.93 li
155.505 322.93 li
156.255 322.93 li
156.255 325.93 li
156.255 320.68 mo
155.505 320.68 li
155.505 317.68 li
156.255 317.68 li
156.255 320.68 li
156.255 315.43 mo
155.505 315.43 li
155.505 312.43 li
156.255 312.43 li
156.255 315.43 li
156.255 310.18 mo
155.505 310.18 li
155.505 307.18 li
156.255 307.18 li
156.255 310.18 li
156.255 304.93 mo
155.505 304.93 li
155.505 301.93 li
156.255 301.93 li
156.255 304.93 li
156.255 299.68 mo
155.505 299.68 li
155.505 296.68 li
156.255 296.68 li
156.255 299.68 li
156.255 294.43 mo
155.505 294.43 li
155.505 291.43 li
156.255 291.43 li
156.255 294.43 li
.00392157 .831372 .831372 .168627 cmyk
f
156.255 287.765 mo
155.505 287.765 li
155.505 286.18 li
156.255 286.18 li
156.255 287.765 li
.00392157 .337255 .831372 .168627 cmyk
f
156.255 289.18 mo
155.505 289.18 li
155.505 288.515 li
156.255 288.515 li
156.255 289.18 li
.00392157 .831372 .831372 .168627 cmyk
f
156.255 283.93 mo
155.505 283.93 li
155.505 280.93 li
156.255 280.93 li
156.255 283.93 li
156.255 278.68 mo
155.505 278.68 li
155.505 275.68 li
156.255 275.68 li
156.255 278.68 li
.00392157 .337255 .831372 .168627 cmyk
f
156.255 273.43 mo
155.505 273.43 li
155.505 270.43 li
156.255 270.43 li
156.255 273.43 li
156.255 268.18 mo
155.505 268.18 li
155.505 265.18 li
156.255 265.18 li
156.255 268.18 li
.65098 .184314 0 .168627 cmyk
f
155.505 260.237 mo
155.505 259.93 li
156.255 259.93 li
156.255 260.16 li
155.505 260.237 li
0 .635294 .831372 .168627 cmyk
f
156.255 262.93 mo
155.505 262.93 li
155.505 260.237 li
156.255 260.16 li
156.255 262.93 li
.65098 .184314 0 .168627 cmyk
f
156.255 257.68 mo
155.505 257.68 li
155.505 254.68 li
156.255 254.68 li
156.255 257.68 li
156.255 252.43 mo
155.505 252.43 li
155.505 249.43 li
156.255 249.43 li
156.255 252.43 li
156.255 247.18 mo
155.505 247.18 li
155.505 244.18 li
156.255 244.18 li
156.255 247.18 li
156.255 241.93 mo
155.505 241.93 li
155.505 238.93 li
156.255 238.93 li
156.255 241.93 li
156.255 236.68 mo
155.505 236.68 li
155.505 233.68 li
156.255 233.68 li
156.255 236.68 li
156.255 231.43 mo
155.505 231.43 li
155.505 228.43 li
156.255 228.43 li
156.255 231.43 li
156.255 226.18 mo
155.505 226.18 li
155.505 223.18 li
156.255 223.18 li
156.255 226.18 li
156.255 220.93 mo
155.505 220.93 li
155.505 217.93 li
156.255 217.93 li
156.255 220.93 li
156.255 215.68 mo
155.505 215.68 li
155.505 214.54 li
156.255 214.54 li
156.255 215.68 li
1 /1 /CSD get_res sepcs
.333333 sep
f
156.255 214.54 mo
155.505 214.54 li
155.505 212.68 li
156.255 212.68 li
156.255 214.54 li
1 /1 /CSD get_res sepcs
.168627 sep
f
280.995 422.861 mo
280.245 422.861 li
280.245 419.969 li
280.995 419.969 li
280.995 422.861 li
280.995 417.719 mo
280.245 417.719 li
280.245 414.719 li
280.995 414.719 li
280.995 417.719 li
280.995 412.469 mo
280.245 412.469 li
280.245 409.469 li
280.995 409.469 li
280.995 412.469 li
280.995 407.219 mo
280.245 407.219 li
280.245 404.219 li
280.995 404.219 li
280.995 407.219 li
280.995 401.969 mo
280.245 401.969 li
280.245 398.969 li
280.995 398.969 li
280.995 401.969 li
280.995 396.088 mo
280.245 396.088 li
280.245 393.719 li
280.995 393.719 li
280.995 396.088 li
280.995 391.469 mo
280.245 391.469 li
280.245 388.469 li
280.995 388.469 li
280.995 391.469 li
280.995 386.219 mo
280.245 386.219 li
280.245 383.219 li
280.995 383.219 li
280.995 386.219 li
280.995 380.969 mo
280.245 380.969 li
280.245 377.969 li
280.995 377.969 li
280.995 380.969 li
280.995 375.719 mo
280.245 375.719 li
280.245 372.719 li
280.995 372.719 li
280.995 375.719 li
280.995 370.469 mo
280.245 370.469 li
280.245 367.469 li
280.995 367.469 li
280.995 370.469 li
280.995 365.219 mo
280.245 365.219 li
280.245 362.219 li
280.995 362.219 li
280.995 365.219 li
280.995 359.969 mo
280.245 359.969 li
280.245 356.969 li
280.995 356.969 li
280.995 359.969 li
280.995 354.72 mo
280.245 354.72 li
280.245 351.72 li
280.995 351.72 li
280.995 354.72 li
280.995 349.47 mo
280.245 349.47 li
280.245 346.47 li
280.995 346.47 li
280.995 349.47 li
280.995 344.22 mo
280.245 344.22 li
280.245 343.465 li
280.995 343.465 li
280.995 344.22 li
280.995 342.715 mo
280.245 342.715 li
280.245 341.22 li
280.995 341.22 li
280.995 342.715 li
280.995 338.97 mo
280.245 338.97 li
280.245 335.97 li
280.995 335.97 li
280.995 338.97 li
280.995 333.72 mo
280.245 333.72 li
280.245 330.72 li
280.995 330.72 li
280.995 333.72 li
.490196 0 .831372 .168627 cmyk
f
280.995 328.47 mo
280.245 328.47 li
280.245 325.47 li
280.995 325.47 li
280.995 328.47 li
280.995 323.219 mo
280.245 323.219 li
280.245 320.22 li
280.995 320.22 li
280.995 323.219 li
280.995 317.97 mo
280.245 317.97 li
280.245 314.97 li
280.995 314.97 li
280.995 317.97 li
280.995 312.72 mo
280.245 312.72 li
280.245 309.72 li
280.995 309.72 li
280.995 312.72 li
280.995 307.47 mo
280.245 307.47 li
280.245 304.47 li
280.995 304.47 li
280.995 307.47 li
280.995 302.22 mo
280.245 302.22 li
280.245 299.22 li
280.995 299.22 li
280.995 302.22 li
280.995 296.97 mo
280.245 296.97 li
280.245 293.97 li
280.995 293.97 li
280.995 296.97 li
280.995 291.72 mo
280.245 291.72 li
280.245 288.72 li
280.995 288.72 li
280.995 291.72 li
280.995 286.47 mo
280.245 286.47 li
280.245 283.47 li
280.995 283.47 li
280.995 286.47 li
280.995 281.22 mo
280.245 281.22 li
280.245 278.22 li
280.995 278.22 li
280.995 281.22 li
.00392157 .831372 .831372 .168627 cmyk
f
280.245 274.41 mo
280.245 272.97 li
280.995 272.97 li
280.995 274.315 li
280.245 274.41 li
.00392157 .337255 .831372 .168627 cmyk
f
280.995 275.97 mo
280.245 275.97 li
280.245 274.41 li
280.995 274.315 li
280.995 275.97 li
.00392157 .831372 .831372 .168627 cmyk
f
280.995 270.72 mo
280.245 270.72 li
280.245 267.72 li
280.995 267.72 li
280.995 270.72 li
280.995 265.47 mo
280.245 265.47 li
280.245 262.47 li
280.995 262.47 li
280.995 265.47 li
.00392157 .337255 .831372 .168627 cmyk
f
280.245 259.502 mo
280.245 257.22 li
280.995 257.22 li
280.995 259.391 li
280.245 259.502 li
.65098 .184314 0 .168627 cmyk
f
280.995 260.22 mo
280.245 260.22 li
280.245 259.502 li
280.995 259.391 li
280.995 260.22 li
.00392157 .337255 .831372 .168627 cmyk
f
280.995 254.97 mo
280.245 254.97 li
280.245 251.97 li
280.995 251.97 li
280.995 254.97 li
280.995 249.72 mo
280.245 249.72 li
280.245 246.72 li
280.995 246.72 li
280.995 249.72 li
.65098 .184314 0 .168627 cmyk
f
280.245 242.381 mo
280.245 241.47 li
280.995 241.47 li
280.995 242.261 li
280.245 242.381 li
1 /1 /CSD get_res sepcs
.333333 sep
f
280.245 243.601 mo
280.245 242.381 li
280.995 242.261 li
280.995 243.486 li
280.245 243.601 li
0 .635294 .831372 .168627 cmyk
f
280.995 244.47 mo
280.245 244.47 li
280.245 243.601 li
280.995 243.486 li
280.995 244.47 li
.65098 .184314 0 .168627 cmyk
f
280.995 239.22 mo
280.245 239.22 li
280.245 236.22 li
280.995 236.22 li
280.995 239.22 li
280.995 233.97 mo
280.245 233.97 li
280.245 230.97 li
280.995 230.97 li
280.995 233.97 li
280.995 228.72 mo
280.245 228.72 li
280.245 225.72 li
280.995 225.72 li
280.995 228.72 li
280.995 223.47 mo
280.245 223.47 li
280.245 220.47 li
280.995 220.47 li
280.995 223.47 li
280.995 218.22 mo
280.245 218.22 li
280.245 215.22 li
280.995 215.22 li
280.995 218.22 li
280.995 212.97 mo
280.245 212.97 li
280.245 209.97 li
280.995 209.97 li
280.995 212.97 li
280.995 207.72 mo
280.245 207.72 li
280.245 204.72 li
280.995 204.72 li
280.995 207.72 li
280.995 202.47 mo
280.245 202.47 li
280.245 199.47 li
280.995 199.47 li
280.995 202.47 li
280.995 197.22 mo
280.245 197.22 li
280.245 194.22 li
280.995 194.22 li
280.995 197.22 li
280.995 191.97 mo
280.245 191.97 li
280.245 188.97 li
280.995 188.97 li
280.995 191.97 li
280.995 186.72 mo
280.245 186.72 li
280.245 183.72 li
280.995 183.72 li
280.995 186.72 li
1 /1 /CSD get_res sepcs
.333333 sep
f
280.643 181.47 mo
280.245 181.47 li
280.245 181.385 li
280.995 181.385 li
280.995 181.413 li
280.643 181.47 li
1 /1 /CSD get_res sepcs
.168627 sep
f
280.995 181.47 mo
280.643 181.47 li
280.995 181.413 li
280.995 181.47 li
1 /1 /CSD get_res sepcs
.333333 sep
f
280.995 174.917 mo
280.874 174.867 280.743 174.84 280.611 174.84 cv
280.245 174.84 li
280.245 173.22 li
280.995 173.22 li
280.995 174.917 li
280.995 170.97 mo
280.245 170.97 li
280.245 167.97 li
280.995 167.97 li
280.995 170.97 li
280.995 165.72 mo
280.245 165.72 li
280.245 162.72 li
280.995 162.72 li
280.995 165.72 li
280.995 160.47 mo
280.245 160.47 li
280.245 157.47 li
280.995 157.47 li
280.995 160.47 li
280.995 155.22 mo
280.245 155.22 li
280.245 154.425 li
280.995 154.425 li
280.995 155.22 li
280.995 154.126 mo
280.245 154.126 li
280.245 152.22 li
280.995 152.22 li
280.995 154.126 li
1 /1 /CSD get_res sepcs
.168627 sep
f
280.995 154.425 mo
280.245 154.425 li
280.245 154.126 li
280.995 154.126 li
280.995 154.425 li
1 /1 /CSD get_res sepcs
1 sep
f
280.995 149.97 mo
280.245 149.97 li
280.245 146.97 li
280.995 146.97 li
280.995 149.97 li
280.995 144.72 mo
280.245 144.72 li
280.245 141.72 li
280.995 141.72 li
280.995 144.72 li
280.995 139.47 mo
280.245 139.47 li
280.245 136.47 li
280.995 136.47 li
280.995 139.47 li
280.995 134.22 mo
280.245 134.22 li
280.245 131.22 li
280.995 131.22 li
280.995 134.22 li
280.995 128.97 mo
280.245 128.97 li
280.245 128.006 li
280.293 127.887 280.319 127.759 280.319 127.63 cv
280.319 126.554 li
280.995 126.554 li
280.995 128.97 li
280.995 126.255 mo
280.831 126.255 li
280.831 125.97 li
280.995 125.97 li
280.995 126.255 li
1 /1 /CSD get_res sepcs
.168627 sep
f
280.995 126.554 mo
280.319 126.554 li
280.319 126.435 li
280.831 126.435 li
280.831 126.255 li
280.995 126.255 li
280.995 126.554 li
1 /1 /CSD get_res sepcs
1 sep
f
280.995 123.72 mo
280.269 123.72 li
280.262 123.698 280.254 123.676 280.245 123.654 cv
280.245 120.72 li
280.995 120.72 li
280.995 123.72 li
280.995 118.47 mo
280.245 118.47 li
280.245 115.47 li
280.995 115.47 li
280.995 118.47 li
280.995 113.22 mo
280.245 113.22 li
280.245 110.22 li
280.995 110.22 li
280.995 113.22 li
280.995 107.97 mo
280.245 107.97 li
280.245 104.97 li
280.995 104.97 li
280.995 107.97 li
280.995 102.72 mo
280.245 102.72 li
280.245 99.7201 li
280.995 99.7201 li
280.995 102.72 li
280.995 97.4701 mo
280.245 97.4701 li
280.245 94.4699 li
280.995 94.4699 li
280.995 97.4701 li
280.995 92.2201 mo
280.245 92.2201 li
280.245 89.2201 li
280.995 89.2201 li
280.995 92.2201 li
280.995 86.9699 mo
280.245 86.9699 li
280.245 83.97 li
280.995 83.97 li
280.995 86.9699 li
280.995 81.72 mo
280.245 81.72 li
280.245 78.72 li
280.995 78.72 li
280.995 81.72 li
280.995 76.47 mo
280.245 76.47 li
280.245 73.47 li
280.995 73.47 li
280.995 76.47 li
1 /1 /CSD get_res sepcs
.168627 sep
f
648.61 396.838 mo
645.61 396.838 li
645.61 396.088 li
648.61 396.088 li
648.61 396.838 li
643.36 396.838 mo
640.36 396.838 li
640.36 396.088 li
643.36 396.088 li
643.36 396.838 li
638.11 396.838 mo
635.11 396.838 li
635.11 396.088 li
638.11 396.088 li
638.11 396.838 li
632.86 396.838 mo
629.86 396.838 li
629.86 396.088 li
632.86 396.088 li
632.86 396.838 li
627.61 396.838 mo
624.61 396.838 li
624.61 396.088 li
627.61 396.088 li
627.61 396.838 li
622.36 396.838 mo
619.36 396.838 li
619.36 396.088 li
622.36 396.088 li
622.36 396.838 li
617.11 396.838 mo
614.11 396.838 li
614.11 396.088 li
617.11 396.088 li
617.11 396.838 li
611.86 396.838 mo
608.86 396.838 li
608.86 396.088 li
611.86 396.088 li
611.86 396.838 li
606.61 396.838 mo
603.61 396.838 li
603.61 396.088 li
606.61 396.088 li
606.61 396.838 li
601.36 396.838 mo
598.36 396.838 li
598.36 396.088 li
601.36 396.088 li
601.36 396.838 li
596.11 396.838 mo
593.11 396.838 li
593.11 396.088 li
596.11 396.088 li
596.11 396.838 li
590.86 396.838 mo
587.86 396.838 li
587.86 396.088 li
590.86 396.088 li
590.86 396.838 li
585.61 396.838 mo
582.61 396.838 li
582.61 396.088 li
585.61 396.088 li
585.61 396.838 li
580.36 396.838 mo
577.36 396.838 li
577.36 396.088 li
580.36 396.088 li
580.36 396.838 li
575.11 396.838 mo
572.11 396.838 li
572.11 396.088 li
575.11 396.088 li
575.11 396.838 li
569.86 396.838 mo
566.86 396.838 li
566.86 396.088 li
569.86 396.088 li
569.86 396.838 li
564.61 396.838 mo
561.61 396.838 li
561.61 396.088 li
564.61 396.088 li
564.61 396.838 li
559.36 396.838 mo
556.36 396.838 li
556.36 396.088 li
559.36 396.088 li
559.36 396.838 li
554.11 396.838 mo
551.11 396.838 li
551.11 396.088 li
554.11 396.088 li
554.11 396.838 li
548.86 396.838 mo
545.86 396.838 li
545.86 396.088 li
548.86 396.088 li
548.86 396.838 li
543.61 396.838 mo
540.61 396.838 li
540.61 396.088 li
543.61 396.088 li
543.61 396.838 li
538.36 396.838 mo
535.36 396.838 li
535.36 396.088 li
538.36 396.088 li
538.36 396.838 li
533.11 396.838 mo
530.11 396.838 li
530.11 396.088 li
533.11 396.088 li
533.11 396.838 li
527.86 396.838 mo
524.86 396.838 li
524.86 396.088 li
527.86 396.088 li
527.86 396.838 li
522.61 396.838 mo
519.61 396.838 li
519.61 396.088 li
522.61 396.088 li
522.61 396.838 li
517.36 396.838 mo
514.36 396.838 li
514.36 396.088 li
517.36 396.088 li
517.36 396.838 li
512.11 396.838 mo
509.11 396.838 li
509.11 396.088 li
512.11 396.088 li
512.11 396.838 li
506.86 396.838 mo
503.86 396.838 li
503.86 396.088 li
506.86 396.088 li
506.86 396.838 li
501.61 396.838 mo
498.61 396.838 li
498.61 396.088 li
501.61 396.088 li
501.61 396.838 li
496.36 396.838 mo
493.36 396.838 li
493.36 396.088 li
496.36 396.088 li
496.36 396.838 li
491.11 396.838 mo
488.11 396.838 li
488.11 396.088 li
491.11 396.088 li
491.11 396.838 li
485.86 396.838 mo
482.86 396.838 li
482.86 396.088 li
485.86 396.088 li
485.86 396.838 li
480.61 396.838 mo
477.61 396.838 li
477.61 396.088 li
480.61 396.088 li
480.61 396.838 li
475.36 396.838 mo
472.36 396.838 li
472.36 396.088 li
475.36 396.088 li
475.36 396.838 li
470.11 396.838 mo
467.11 396.838 li
467.11 396.088 li
470.11 396.088 li
470.11 396.838 li
464.86 396.838 mo
461.86 396.838 li
461.86 396.088 li
464.86 396.088 li
464.86 396.838 li
459.61 396.838 mo
456.61 396.838 li
456.61 396.088 li
459.61 396.088 li
459.61 396.838 li
454.36 396.838 mo
451.36 396.838 li
451.36 396.088 li
454.36 396.088 li
454.36 396.838 li
449.11 396.838 mo
446.11 396.838 li
446.11 396.088 li
449.11 396.088 li
449.11 396.838 li
443.86 396.838 mo
440.86 396.838 li
440.86 396.088 li
443.86 396.088 li
443.86 396.838 li
438.61 396.838 mo
435.61 396.838 li
435.61 396.088 li
438.61 396.088 li
438.61 396.838 li
433.36 396.838 mo
430.36 396.838 li
430.36 396.088 li
433.36 396.088 li
433.36 396.838 li
428.11 396.838 mo
425.11 396.838 li
425.11 396.088 li
428.11 396.088 li
428.11 396.838 li
422.86 396.838 mo
419.86 396.838 li
419.86 396.088 li
422.86 396.088 li
422.86 396.838 li
417.61 396.838 mo
414.61 396.838 li
414.61 396.088 li
417.61 396.088 li
417.61 396.838 li
412.36 396.838 mo
409.36 396.838 li
409.36 396.088 li
412.36 396.088 li
412.36 396.838 li
407.11 396.838 mo
404.11 396.838 li
404.11 396.088 li
404.205 396.088 li
404.205 396.319 li
404.955 396.319 li
404.955 396.088 li
407.11 396.088 li
407.11 396.838 li
.490196 0 .831372 .168627 cmyk
f
404.955 396.319 mo
404.205 396.319 li
404.205 396.088 li
404.955 396.088 li
404.955 396.319 li
.407843 0 .690196 .309804 cmyk
f
401.86 396.838 mo
398.86 396.838 li
398.86 396.088 li
401.86 396.088 li
401.86 396.838 li
396.61 396.838 mo
393.61 396.838 li
393.61 396.088 li
396.61 396.088 li
396.61 396.838 li
391.36 396.838 mo
388.36 396.838 li
388.36 396.088 li
391.36 396.088 li
391.36 396.838 li
386.11 396.838 mo
383.11 396.838 li
383.11 396.088 li
386.11 396.088 li
386.11 396.838 li
380.86 396.838 mo
377.86 396.838 li
377.86 396.088 li
380.86 396.088 li
380.86 396.838 li
375.61 396.838 mo
372.61 396.838 li
372.61 396.088 li
375.61 396.088 li
375.61 396.838 li
370.36 396.838 mo
367.36 396.838 li
367.36 396.088 li
370.36 396.088 li
370.36 396.838 li
365.11 396.838 mo
362.11 396.838 li
362.11 396.088 li
365.11 396.088 li
365.11 396.838 li
359.86 396.838 mo
356.86 396.838 li
356.86 396.088 li
359.86 396.088 li
359.86 396.838 li
354.61 396.838 mo
351.61 396.838 li
351.61 396.088 li
354.61 396.088 li
354.61 396.838 li
349.36 396.838 mo
346.36 396.838 li
346.36 396.088 li
349.36 396.088 li
349.36 396.838 li
344.11 396.838 mo
341.11 396.838 li
341.11 396.088 li
344.11 396.088 li
344.11 396.838 li
338.86 396.838 mo
335.86 396.838 li
335.86 396.088 li
338.86 396.088 li
338.86 396.838 li
333.61 396.838 mo
330.61 396.838 li
330.61 396.088 li
333.61 396.088 li
333.61 396.838 li
328.36 396.838 mo
325.36 396.838 li
325.36 396.088 li
328.36 396.088 li
328.36 396.838 li
323.11 396.838 mo
320.11 396.838 li
320.11 396.088 li
323.11 396.088 li
323.11 396.838 li
317.86 396.838 mo
314.86 396.838 li
314.86 396.088 li
317.86 396.088 li
317.86 396.838 li
312.611 396.838 mo
309.61 396.838 li
309.61 396.088 li
312.611 396.088 li
312.611 396.838 li
307.361 396.838 mo
304.361 396.838 li
304.361 396.088 li
307.361 396.088 li
307.361 396.838 li
302.111 396.838 mo
299.111 396.838 li
299.111 396.088 li
302.111 396.088 li
302.111 396.838 li
296.861 396.838 mo
293.861 396.838 li
293.861 396.088 li
296.861 396.088 li
296.861 396.838 li
291.611 396.838 mo
288.611 396.838 li
288.611 396.088 li
291.611 396.088 li
291.611 396.838 li
286.361 396.838 mo
283.361 396.838 li
283.361 396.088 li
286.361 396.088 li
286.361 396.838 li
281.111 396.838 mo
278.111 396.838 li
278.111 396.088 li
280.245 396.088 li
280.245 396.719 li
280.995 396.719 li
280.995 396.088 li
281.111 396.088 li
281.111 396.838 li
.490196 0 .831372 .168627 cmyk
f
280.995 396.719 mo
280.245 396.719 li
280.245 396.088 li
280.995 396.088 li
280.995 396.719 li
.407843 0 .690196 .309804 cmyk
f
275.861 396.838 mo
272.861 396.838 li
272.861 396.088 li
275.861 396.088 li
275.861 396.838 li
270.611 396.838 mo
267.611 396.838 li
267.611 396.088 li
270.611 396.088 li
270.611 396.838 li
265.361 396.838 mo
262.361 396.838 li
262.361 396.088 li
265.361 396.088 li
265.361 396.838 li
260.111 396.838 mo
257.111 396.838 li
257.111 396.088 li
260.111 396.088 li
260.111 396.838 li
254.861 396.838 mo
251.861 396.838 li
251.861 396.088 li
254.861 396.088 li
254.861 396.838 li
249.611 396.838 mo
246.611 396.838 li
246.611 396.088 li
249.611 396.088 li
249.611 396.838 li
244.361 396.838 mo
241.361 396.838 li
241.361 396.088 li
244.361 396.088 li
244.361 396.838 li
239.111 396.838 mo
236.111 396.838 li
236.111 396.088 li
239.111 396.088 li
239.111 396.838 li
233.861 396.838 mo
230.861 396.838 li
230.861 396.088 li
233.861 396.088 li
233.861 396.838 li
228.611 396.838 mo
225.611 396.838 li
225.611 396.088 li
228.611 396.088 li
228.611 396.838 li
223.361 396.838 mo
220.361 396.838 li
220.361 396.088 li
223.361 396.088 li
223.361 396.838 li
218.111 396.838 mo
215.111 396.838 li
215.111 396.088 li
218.111 396.088 li
218.111 396.838 li
212.861 396.838 mo
209.861 396.838 li
209.861 396.088 li
212.861 396.088 li
212.861 396.838 li
207.611 396.838 mo
204.611 396.838 li
204.611 396.088 li
207.611 396.088 li
207.611 396.838 li
202.361 396.838 mo
199.361 396.838 li
199.361 396.088 li
202.361 396.088 li
202.361 396.838 li
197.111 396.838 mo
194.111 396.838 li
194.111 396.088 li
197.111 396.088 li
197.111 396.838 li
191.861 396.838 mo
188.861 396.838 li
188.861 396.088 li
191.861 396.088 li
191.861 396.838 li
186.611 396.838 mo
183.611 396.838 li
183.611 396.088 li
186.611 396.088 li
186.611 396.838 li
181.361 396.838 mo
178.361 396.838 li
178.361 396.088 li
181.361 396.088 li
181.361 396.838 li
176.111 396.838 mo
173.111 396.838 li
173.111 396.088 li
176.111 396.088 li
176.111 396.838 li
170.861 396.838 mo
167.861 396.838 li
167.861 396.088 li
170.861 396.088 li
170.861 396.838 li
165.611 396.838 mo
162.611 396.838 li
162.611 396.088 li
165.611 396.088 li
165.611 396.838 li
160.361 396.838 mo
157.361 396.838 li
157.361 396.088 li
160.361 396.088 li
160.361 396.838 li
155.111 396.838 mo
152.111 396.838 li
152.111 396.088 li
155.111 396.088 li
155.111 396.838 li
149.861 396.838 mo
146.861 396.838 li
146.861 396.088 li
149.861 396.088 li
149.861 396.838 li
144.611 396.838 mo
141.611 396.838 li
141.611 396.088 li
144.611 396.088 li
144.611 396.838 li
139.361 396.838 mo
136.361 396.838 li
136.361 396.088 li
139.361 396.088 li
139.361 396.838 li
134.111 396.838 mo
131.111 396.838 li
131.111 396.088 li
134.111 396.088 li
134.111 396.838 li
128.862 396.838 mo
125.862 396.838 li
125.862 396.088 li
128.862 396.088 li
128.862 396.838 li
123.611 396.838 mo
120.611 396.838 li
120.611 396.088 li
123.611 396.088 li
123.611 396.838 li
118.362 396.838 mo
115.362 396.838 li
115.362 396.088 li
118.362 396.088 li
118.362 396.838 li
113.112 396.838 mo
110.112 396.838 li
110.112 396.088 li
113.112 396.088 li
113.112 396.838 li
107.862 396.838 mo
104.862 396.838 li
104.862 396.088 li
107.862 396.088 li
107.862 396.838 li
102.612 396.838 mo
99.6117 396.838 li
99.6117 396.088 li
102.612 396.088 li
102.612 396.838 li
97.3618 396.838 mo
94.3618 396.838 li
94.3618 396.088 li
97.3618 396.088 li
97.3618 396.838 li
92.1118 396.838 mo
89.1118 396.838 li
89.1118 396.088 li
92.1118 396.088 li
92.1118 396.838 li
86.8618 396.838 mo
83.8618 396.838 li
83.8618 396.088 li
86.8618 396.088 li
86.8618 396.838 li
81.6118 396.838 mo
78.6118 396.838 li
78.6118 396.088 li
81.6118 396.088 li
81.6118 396.838 li
76.3618 396.838 mo
73.3618 396.838 li
73.3618 396.088 li
76.3618 396.088 li
76.3618 396.838 li
71.1119 396.838 mo
68.1119 396.838 li
68.1119 396.088 li
71.1119 396.088 li
71.1119 396.838 li
65.8619 396.838 mo
62.8619 396.838 li
62.8619 396.088 li
65.8619 396.088 li
65.8619 396.838 li
60.6119 396.838 mo
57.6119 396.838 li
57.6119 396.088 li
60.6119 396.088 li
60.6119 396.838 li
55.3619 396.838 mo
52.3619 396.838 li
52.3619 396.088 li
55.3619 396.088 li
55.3619 396.838 li
50.1119 396.838 mo
47.1119 396.838 li
47.1119 396.088 li
50.1119 396.088 li
50.1119 396.838 li
44.8619 396.838 mo
41.862 396.838 li
41.862 396.088 li
44.8619 396.088 li
44.8619 396.838 li
39.6121 396.838 mo
36.612 396.838 li
36.612 396.088 li
39.6121 396.088 li
39.6121 396.838 li
34.362 396.838 mo
31.362 396.838 li
31.362 396.088 li
34.362 396.088 li
34.362 396.838 li
.490196 0 .831372 .168627 cmyk
f
28.0001 396.838 mo
27.822 396.838 li
27.822 396.088 li
28.0001 396.088 li
28.0001 396.838 li
1 /1 /CSD get_res sepcs
.168627 sep
f
29.1122 396.838 mo
28.0001 396.838 li
28.0001 396.088 li
29.1122 396.088 li
29.1122 396.838 li
.490196 0 .831372 .168627 cmyk
f
649.25 343.465 mo
646.39 343.465 li
646.39 342.715 li
649.25 342.715 li
649.25 343.465 li
644.14 343.465 mo
641.14 343.465 li
641.14 342.715 li
644.14 342.715 li
644.14 343.465 li
638.89 343.465 mo
635.89 343.465 li
635.89 342.715 li
638.89 342.715 li
638.89 343.465 li
633.64 343.465 mo
630.64 343.465 li
630.64 342.715 li
633.64 342.715 li
633.64 343.465 li
628.39 343.465 mo
625.39 343.465 li
625.39 342.715 li
628.39 342.715 li
628.39 343.465 li
623.14 343.465 mo
620.14 343.465 li
620.14 342.715 li
623.14 342.715 li
623.14 343.465 li
617.89 343.465 mo
614.89 343.465 li
614.89 342.715 li
617.89 342.715 li
617.89 343.465 li
612.64 343.465 mo
609.64 343.465 li
609.64 342.715 li
612.64 342.715 li
612.64 343.465 li
607.39 343.465 mo
604.39 343.465 li
604.39 342.715 li
607.39 342.715 li
607.39 343.465 li
602.14 343.465 mo
599.14 343.465 li
599.14 342.715 li
602.14 342.715 li
602.14 343.465 li
596.89 343.465 mo
593.89 343.465 li
593.89 342.715 li
596.89 342.715 li
596.89 343.465 li
591.64 343.465 mo
588.64 343.465 li
588.64 342.715 li
591.64 342.715 li
591.64 343.465 li
586.39 343.465 mo
583.39 343.465 li
583.39 342.715 li
586.39 342.715 li
586.39 343.465 li
581.14 343.465 mo
578.14 343.465 li
578.14 342.715 li
581.14 342.715 li
581.14 343.465 li
575.89 343.465 mo
572.89 343.465 li
572.89 342.715 li
575.89 342.715 li
575.89 343.465 li
570.64 343.465 mo
567.64 343.465 li
567.64 342.715 li
570.64 342.715 li
570.64 343.465 li
565.39 343.465 mo
562.39 343.465 li
562.39 342.715 li
565.39 342.715 li
565.39 343.465 li
560.14 343.465 mo
557.14 343.465 li
557.14 342.715 li
560.14 342.715 li
560.14 343.465 li
554.89 343.465 mo
551.89 343.465 li
551.89 342.715 li
554.89 342.715 li
554.89 343.465 li
549.64 343.465 mo
546.64 343.465 li
546.64 342.715 li
549.64 342.715 li
549.64 343.465 li
544.39 343.465 mo
541.39 343.465 li
541.39 342.715 li
544.39 342.715 li
544.39 343.465 li
539.14 343.465 mo
536.14 343.465 li
536.14 342.715 li
539.14 342.715 li
539.14 343.465 li
533.89 343.465 mo
530.89 343.465 li
530.89 342.715 li
533.89 342.715 li
533.89 343.465 li
528.165 343.465 mo
525.64 343.465 li
525.64 342.715 li
528.165 342.715 li
528.165 343.465 li
f
528.64 343.465 mo
528.165 343.465 li
528.165 342.715 li
528.64 342.715 li
528.64 343.465 li
.407843 0 .690196 .309804 cmyk
f
523.39 343.465 mo
520.39 343.465 li
520.39 342.715 li
523.39 342.715 li
523.39 343.465 li
518.14 343.465 mo
515.14 343.465 li
515.14 342.715 li
518.14 342.715 li
518.14 343.465 li
512.89 343.465 mo
509.89 343.465 li
509.89 342.715 li
512.89 342.715 li
512.89 343.465 li
507.64 343.465 mo
504.64 343.465 li
504.64 342.715 li
507.64 342.715 li
507.64 343.465 li
502.39 343.465 mo
499.39 343.465 li
499.39 342.715 li
502.39 342.715 li
502.39 343.465 li
497.14 343.465 mo
494.14 343.465 li
494.14 342.715 li
497.14 342.715 li
497.14 343.465 li
491.89 343.465 mo
488.89 343.465 li
488.89 342.715 li
491.89 342.715 li
491.89 343.465 li
486.64 343.465 mo
483.64 343.465 li
483.64 342.715 li
486.64 342.715 li
486.64 343.465 li
481.39 343.465 mo
478.39 343.465 li
478.39 342.715 li
481.39 342.715 li
481.39 343.465 li
476.14 343.465 mo
473.14 343.465 li
473.14 342.715 li
476.14 342.715 li
476.14 343.465 li
470.89 343.465 mo
467.89 343.465 li
467.89 342.715 li
470.89 342.715 li
470.89 343.465 li
465.64 343.465 mo
462.64 343.465 li
462.64 342.715 li
465.64 342.715 li
465.64 343.465 li
460.39 343.465 mo
457.39 343.465 li
457.39 342.715 li
460.39 342.715 li
460.39 343.465 li
455.14 343.465 mo
452.14 343.465 li
452.14 342.715 li
455.14 342.715 li
455.14 343.465 li
449.89 343.465 mo
446.89 343.465 li
446.89 342.715 li
449.89 342.715 li
449.89 343.465 li
444.64 343.465 mo
441.64 343.465 li
441.64 342.715 li
444.64 342.715 li
444.64 343.465 li
439.39 343.465 mo
436.39 343.465 li
436.39 342.715 li
439.39 342.715 li
439.39 343.465 li
434.14 343.465 mo
431.14 343.465 li
431.14 342.715 li
434.14 342.715 li
434.14 343.465 li
428.89 343.465 mo
425.89 343.465 li
425.89 342.715 li
428.89 342.715 li
428.89 343.465 li
423.64 343.465 mo
420.641 343.465 li
420.641 342.715 li
423.64 342.715 li
423.64 343.465 li
418.391 343.465 mo
415.39 343.465 li
415.39 342.715 li
418.391 342.715 li
418.391 343.465 li
413.14 343.465 mo
410.141 343.465 li
410.141 342.715 li
413.14 342.715 li
413.14 343.465 li
407.891 343.465 mo
404.955 343.465 li
404.955 342.715 li
407.891 342.715 li
407.891 343.465 li
.490196 0 .831372 .168627 cmyk
f
404.955 343.465 mo
404.89 343.465 li
404.89 342.715 li
404.955 342.715 li
404.955 343.465 li
.407843 0 .690196 .309804 cmyk
f
402.64 343.465 mo
399.641 343.465 li
399.641 342.715 li
402.64 342.715 li
402.64 343.465 li
397.39 343.465 mo
394.391 343.465 li
394.391 342.715 li
397.39 342.715 li
397.39 343.465 li
392.141 343.465 mo
389.14 343.465 li
389.14 342.715 li
392.141 342.715 li
392.141 343.465 li
386.89 343.465 mo
383.891 343.465 li
383.891 342.715 li
386.89 342.715 li
386.89 343.465 li
381.64 343.465 mo
378.64 343.465 li
378.64 342.715 li
381.64 342.715 li
381.64 343.465 li
376.39 343.465 mo
373.391 343.465 li
373.391 342.715 li
376.39 342.715 li
376.39 343.465 li
371.141 343.465 mo
368.141 343.465 li
368.141 342.715 li
371.141 342.715 li
371.141 343.465 li
365.891 343.465 mo
362.891 343.465 li
362.891 342.715 li
365.891 342.715 li
365.891 343.465 li
360.641 343.465 mo
357.641 343.465 li
357.641 342.715 li
360.641 342.715 li
360.641 343.465 li
355.391 343.465 mo
352.391 343.465 li
352.391 342.715 li
355.391 342.715 li
355.391 343.465 li
350.141 343.465 mo
347.141 343.465 li
347.141 342.715 li
350.141 342.715 li
350.141 343.465 li
344.891 343.465 mo
341.891 343.465 li
341.891 342.715 li
344.891 342.715 li
344.891 343.465 li
339.641 343.465 mo
336.641 343.465 li
336.641 342.715 li
339.641 342.715 li
339.641 343.465 li
334.391 343.465 mo
331.391 343.465 li
331.391 342.715 li
334.391 342.715 li
334.391 343.465 li
329.141 343.465 mo
326.141 343.465 li
326.141 342.715 li
329.141 342.715 li
329.141 343.465 li
323.891 343.465 mo
320.891 343.465 li
320.891 342.715 li
323.891 342.715 li
323.891 343.465 li
318.641 343.465 mo
315.641 343.465 li
315.641 342.715 li
318.641 342.715 li
318.641 343.465 li
313.391 343.465 mo
310.391 343.465 li
310.391 342.715 li
313.391 342.715 li
313.391 343.465 li
308.141 343.465 mo
305.141 343.465 li
305.141 342.715 li
308.141 342.715 li
308.141 343.465 li
302.891 343.465 mo
299.891 343.465 li
299.891 342.715 li
302.891 342.715 li
302.891 343.465 li
297.641 343.465 mo
294.641 343.465 li
294.641 342.715 li
297.641 342.715 li
297.641 343.465 li
292.391 343.465 mo
289.391 343.465 li
289.391 342.715 li
292.391 342.715 li
292.391 343.465 li
287.141 343.465 mo
284.141 343.465 li
284.141 342.715 li
287.141 342.715 li
287.141 343.465 li
281.891 343.465 mo
280.995 343.465 li
280.995 342.715 li
281.891 342.715 li
281.891 343.465 li
280.245 343.465 mo
278.891 343.465 li
278.891 342.715 li
280.245 342.715 li
280.245 343.465 li
.490196 0 .831372 .168627 cmyk
f
280.995 343.465 mo
280.245 343.465 li
280.245 342.715 li
280.995 342.715 li
280.995 343.465 li
.407843 0 .690196 .309804 cmyk
f
276.641 343.465 mo
273.641 343.465 li
273.641 342.715 li
276.641 342.715 li
276.641 343.465 li
271.391 343.465 mo
268.391 343.465 li
268.391 342.715 li
271.391 342.715 li
271.391 343.465 li
266.141 343.465 mo
263.141 343.465 li
263.141 342.715 li
266.141 342.715 li
266.141 343.465 li
260.891 343.465 mo
257.891 343.465 li
257.891 342.715 li
260.891 342.715 li
260.891 343.465 li
255.641 343.465 mo
252.641 343.465 li
252.641 342.715 li
255.641 342.715 li
255.641 343.465 li
250.391 343.465 mo
247.391 343.465 li
247.391 342.715 li
250.391 342.715 li
250.391 343.465 li
245.141 343.465 mo
242.141 343.465 li
242.141 342.715 li
245.141 342.715 li
245.141 343.465 li
239.891 343.465 mo
236.891 343.465 li
236.891 342.715 li
239.891 342.715 li
239.891 343.465 li
234.641 343.465 mo
231.641 343.465 li
231.641 342.715 li
234.641 342.715 li
234.641 343.465 li
229.391 343.465 mo
226.391 343.465 li
226.391 342.715 li
229.391 342.715 li
229.391 343.465 li
224.141 343.465 mo
221.141 343.465 li
221.141 342.715 li
224.141 342.715 li
224.141 343.465 li
218.891 343.465 mo
215.891 343.465 li
215.891 342.715 li
218.891 342.715 li
218.891 343.465 li
213.641 343.465 mo
210.641 343.465 li
210.641 342.715 li
213.641 342.715 li
213.641 343.465 li
208.391 343.465 mo
205.391 343.465 li
205.391 342.715 li
208.391 342.715 li
208.391 343.465 li
203.141 343.465 mo
200.141 343.465 li
200.141 342.715 li
203.141 342.715 li
203.141 343.465 li
197.891 343.465 mo
194.891 343.465 li
194.891 342.715 li
197.891 342.715 li
197.891 343.465 li
192.641 343.465 mo
189.641 343.465 li
189.641 342.715 li
192.641 342.715 li
192.641 343.465 li
187.391 343.465 mo
184.391 343.465 li
184.391 342.715 li
187.391 342.715 li
187.391 343.465 li
182.141 343.465 mo
179.141 343.465 li
179.141 342.715 li
182.141 342.715 li
182.141 343.465 li
176.891 343.465 mo
173.891 343.465 li
173.891 342.715 li
176.891 342.715 li
176.891 343.465 li
171.641 343.465 mo
168.641 343.465 li
168.641 342.715 li
171.641 342.715 li
171.641 343.465 li
166.391 343.465 mo
163.391 343.465 li
163.391 342.715 li
166.391 342.715 li
166.391 343.465 li
161.141 343.465 mo
158.141 343.465 li
158.141 342.715 li
161.141 342.715 li
161.141 343.465 li
155.891 343.465 mo
152.891 343.465 li
152.891 342.715 li
155.891 342.715 li
155.891 343.465 li
150.641 343.465 mo
147.641 343.465 li
147.641 342.715 li
150.641 342.715 li
150.641 343.465 li
145.391 343.465 mo
142.391 343.465 li
142.391 342.715 li
145.391 342.715 li
145.391 343.465 li
140.141 343.465 mo
137.141 343.465 li
137.141 342.715 li
140.141 342.715 li
140.141 343.465 li
134.891 343.465 mo
131.891 343.465 li
131.891 342.715 li
134.891 342.715 li
134.891 343.465 li
129.641 343.465 mo
126.641 343.465 li
126.641 342.715 li
129.641 342.715 li
129.641 343.465 li
124.391 343.465 mo
121.391 343.465 li
121.391 342.715 li
124.391 342.715 li
124.391 343.465 li
119.141 343.465 mo
116.141 343.465 li
116.141 342.715 li
119.141 342.715 li
119.141 343.465 li
113.891 343.465 mo
110.891 343.465 li
110.891 342.715 li
113.891 342.715 li
113.891 343.465 li
108.641 343.465 mo
105.641 343.465 li
105.641 342.715 li
108.641 342.715 li
108.641 343.465 li
103.391 343.465 mo
100.391 343.465 li
100.391 342.715 li
103.391 342.715 li
103.391 343.465 li
98.1415 343.465 mo
95.1415 343.465 li
95.1415 342.715 li
98.1415 342.715 li
98.1415 343.465 li
92.8915 343.465 mo
89.8915 343.465 li
89.8915 342.715 li
92.8915 342.715 li
92.8915 343.465 li
87.6415 343.465 mo
84.6415 343.465 li
84.6415 342.715 li
87.6415 342.715 li
87.6415 343.465 li
82.3915 343.465 mo
79.3916 343.465 li
79.3916 342.715 li
82.3915 342.715 li
82.3915 343.465 li
77.1416 343.465 mo
74.1416 343.465 li
74.1416 342.715 li
77.1416 342.715 li
77.1416 343.465 li
71.8916 343.465 mo
68.8916 343.465 li
68.8916 342.715 li
71.8916 342.715 li
71.8916 343.465 li
66.6416 343.465 mo
63.6416 343.465 li
63.6416 342.715 li
66.6416 342.715 li
66.6416 343.465 li
61.3916 343.465 mo
58.3916 343.465 li
58.3916 342.715 li
61.3916 342.715 li
61.3916 343.465 li
56.1416 343.465 mo
53.1417 343.465 li
53.1417 342.715 li
56.1416 342.715 li
56.1416 343.465 li
50.8917 343.465 mo
47.8917 343.465 li
47.8917 342.715 li
50.8917 342.715 li
50.8917 343.465 li
45.6417 343.465 mo
42.6417 343.465 li
42.6417 342.715 li
45.6417 342.715 li
45.6417 343.465 li
40.3917 343.465 mo
37.3917 343.465 li
37.3917 342.715 li
40.3917 342.715 li
40.3917 343.465 li
35.1417 343.465 mo
32.1417 343.465 li
32.1417 342.715 li
35.1417 342.715 li
35.1417 343.465 li
29.8917 343.465 mo
28.605 343.465 li
28.605 342.715 li
29.8917 342.715 li
29.8917 343.465 li
.490196 0 .831372 .168627 cmyk
f
649.25 288.515 mo
648.15 288.515 li
648.15 287.765 li
649.25 287.765 li
649.25 288.515 li
645.9 288.515 mo
642.9 288.515 li
642.9 287.765 li
645.9 287.765 li
645.9 288.515 li
640.65 288.515 mo
637.65 288.515 li
637.65 287.765 li
640.65 287.765 li
640.65 288.515 li
635.4 288.515 mo
632.4 288.515 li
632.4 287.765 li
635.4 287.765 li
635.4 288.515 li
630.15 288.515 mo
627.15 288.515 li
627.15 287.765 li
630.15 287.765 li
630.15 288.515 li
624.9 288.515 mo
621.9 288.515 li
621.9 287.765 li
624.9 287.765 li
624.9 288.515 li
619.65 288.515 mo
616.65 288.515 li
616.65 287.765 li
619.65 287.765 li
619.65 288.515 li
614.4 288.515 mo
611.4 288.515 li
611.4 287.765 li
614.4 287.765 li
614.4 288.515 li
609.15 288.515 mo
606.15 288.515 li
606.15 287.765 li
609.15 287.765 li
609.15 288.515 li
603.9 288.515 mo
600.9 288.515 li
600.9 287.765 li
603.9 287.765 li
603.9 288.515 li
598.65 288.515 mo
595.65 288.515 li
595.65 287.765 li
598.65 287.765 li
598.65 288.515 li
593.4 288.515 mo
590.4 288.515 li
590.4 287.765 li
593.4 287.765 li
593.4 288.515 li
588.15 288.515 mo
585.15 288.515 li
585.15 287.765 li
588.15 287.765 li
588.15 288.515 li
582.9 288.515 mo
579.9 288.515 li
579.9 287.765 li
582.9 287.765 li
582.9 288.515 li
577.65 288.515 mo
574.65 288.515 li
574.65 287.765 li
577.65 287.765 li
577.65 288.515 li
572.4 288.515 mo
569.4 288.515 li
569.4 287.765 li
572.4 287.765 li
572.4 288.515 li
567.15 288.515 mo
564.15 288.515 li
564.15 287.765 li
567.15 287.765 li
567.15 288.515 li
561.9 288.515 mo
558.9 288.515 li
558.9 287.765 li
561.9 287.765 li
561.9 288.515 li
556.65 288.515 mo
553.65 288.515 li
553.65 287.765 li
556.65 287.765 li
556.65 288.515 li
551.4 288.515 mo
548.4 288.515 li
548.4 287.765 li
551.4 287.765 li
551.4 288.515 li
546.15 288.515 mo
543.15 288.515 li
543.15 287.765 li
546.15 287.765 li
546.15 288.515 li
540.9 288.515 mo
537.9 288.515 li
537.9 287.765 li
540.9 287.765 li
540.9 288.515 li
535.65 288.515 mo
532.65 288.515 li
532.65 287.765 li
535.65 287.765 li
535.65 288.515 li
530.4 288.515 mo
528.915 288.515 li
528.915 288.32 li
528.165 288.32 li
528.165 288.515 li
527.4 288.515 li
527.4 287.765 li
530.4 287.765 li
530.4 288.515 li
.00392157 .831372 .831372 .168627 cmyk
f
528.915 288.515 mo
528.165 288.515 li
528.165 288.32 li
528.915 288.32 li
528.915 288.515 li
.00392157 .690196 .690196 .309804 cmyk
f
525.15 288.515 mo
522.15 288.515 li
522.15 287.765 li
525.15 287.765 li
525.15 288.515 li
519.9 288.515 mo
516.9 288.515 li
516.9 287.765 li
519.9 287.765 li
519.9 288.515 li
514.65 288.515 mo
511.65 288.515 li
511.65 287.765 li
514.65 287.765 li
514.65 288.515 li
509.4 288.515 mo
506.4 288.515 li
506.4 287.765 li
509.4 287.765 li
509.4 288.515 li
504.15 288.515 mo
501.15 288.515 li
501.15 287.765 li
504.15 287.765 li
504.15 288.515 li
498.9 288.515 mo
495.9 288.515 li
495.9 287.765 li
498.9 287.765 li
498.9 288.515 li
493.65 288.515 mo
490.65 288.515 li
490.65 287.765 li
493.65 287.765 li
493.65 288.515 li
488.4 288.515 mo
485.4 288.515 li
485.4 287.765 li
488.4 287.765 li
488.4 288.515 li
483.15 288.515 mo
480.15 288.515 li
480.15 287.765 li
483.15 287.765 li
483.15 288.515 li
477.9 288.515 mo
474.9 288.515 li
474.9 287.765 li
477.9 287.765 li
477.9 288.515 li
472.65 288.515 mo
469.65 288.515 li
469.65 287.765 li
472.65 287.765 li
472.65 288.515 li
467.4 288.515 mo
464.4 288.515 li
464.4 287.765 li
467.4 287.765 li
467.4 288.515 li
462.15 288.515 mo
459.15 288.515 li
459.15 287.765 li
462.15 287.765 li
462.15 288.515 li
456.9 288.515 mo
453.9 288.515 li
453.9 287.765 li
456.9 287.765 li
456.9 288.515 li
451.65 288.515 mo
448.65 288.515 li
448.65 287.765 li
451.65 287.765 li
451.65 288.515 li
446.4 288.515 mo
443.4 288.515 li
443.4 287.765 li
446.4 287.765 li
446.4 288.515 li
441.15 288.515 mo
438.15 288.515 li
438.15 287.765 li
441.15 287.765 li
441.15 288.515 li
435.9 288.515 mo
432.9 288.515 li
432.9 287.765 li
435.9 287.765 li
435.9 288.515 li
430.65 288.515 mo
427.65 288.515 li
427.65 287.765 li
430.65 287.765 li
430.65 288.515 li
425.4 288.515 mo
422.4 288.515 li
422.4 287.765 li
425.4 287.765 li
425.4 288.515 li
420.15 288.515 mo
417.15 288.515 li
417.15 287.765 li
420.15 287.765 li
420.15 288.515 li
414.9 288.515 mo
411.9 288.515 li
411.9 287.765 li
414.9 287.765 li
414.9 288.515 li
409.65 288.515 mo
406.65 288.515 li
406.65 287.765 li
409.65 287.765 li
409.65 288.515 li
404.205 288.515 mo
401.4 288.515 li
401.4 287.765 li
404.4 287.765 li
404.4 288.32 li
404.205 288.32 li
404.205 288.515 li
.00392157 .831372 .831372 .168627 cmyk
f
404.4 288.515 mo
404.205 288.515 li
404.205 288.32 li
404.4 288.32 li
404.4 288.515 li
.00392157 .690196 .690196 .309804 cmyk
f
399.15 288.515 mo
396.15 288.515 li
396.15 287.765 li
399.15 287.765 li
399.15 288.515 li
393.9 288.515 mo
390.9 288.515 li
390.9 287.765 li
393.9 287.765 li
393.9 288.515 li
388.65 288.515 mo
385.65 288.515 li
385.65 287.765 li
388.65 287.765 li
388.65 288.515 li
383.4 288.515 mo
380.4 288.515 li
380.4 287.765 li
383.4 287.765 li
383.4 288.515 li
378.15 288.515 mo
375.15 288.515 li
375.15 287.765 li
378.15 287.765 li
378.15 288.515 li
372.9 288.515 mo
369.9 288.515 li
369.9 287.765 li
372.9 287.765 li
372.9 288.515 li
367.65 288.515 mo
364.65 288.515 li
364.65 287.765 li
367.65 287.765 li
367.65 288.515 li
362.4 288.515 mo
359.4 288.515 li
359.4 287.765 li
362.4 287.765 li
362.4 288.515 li
357.15 288.515 mo
354.15 288.515 li
354.15 287.765 li
357.15 287.765 li
357.15 288.515 li
351.9 288.515 mo
348.9 288.515 li
348.9 287.765 li
351.9 287.765 li
351.9 288.515 li
346.65 288.515 mo
343.65 288.515 li
343.65 287.765 li
346.65 287.765 li
346.65 288.515 li
341.4 288.515 mo
338.4 288.515 li
338.4 287.765 li
341.4 287.765 li
341.4 288.515 li
336.15 288.515 mo
333.15 288.515 li
333.15 287.765 li
336.15 287.765 li
336.15 288.515 li
330.9 288.515 mo
327.9 288.515 li
327.9 287.765 li
330.9 287.765 li
330.9 288.515 li
325.651 288.515 mo
322.651 288.515 li
322.651 287.765 li
325.651 287.765 li
325.651 288.515 li
320.401 288.515 mo
317.401 288.515 li
317.401 287.765 li
320.401 287.765 li
320.401 288.515 li
315.151 288.515 mo
312.151 288.515 li
312.151 287.765 li
315.151 287.765 li
315.151 288.515 li
309.901 288.515 mo
306.901 288.515 li
306.901 287.765 li
309.901 287.765 li
309.901 288.515 li
304.651 288.515 mo
301.651 288.515 li
301.651 287.765 li
304.651 287.765 li
304.651 288.515 li
299.401 288.515 mo
296.401 288.515 li
296.401 287.765 li
299.401 287.765 li
299.401 288.515 li
294.151 288.515 mo
291.151 288.515 li
291.151 287.765 li
294.151 287.765 li
294.151 288.515 li
288.901 288.515 mo
285.901 288.515 li
285.901 287.765 li
288.901 287.765 li
288.901 288.515 li
283.651 288.515 mo
280.651 288.515 li
280.651 287.765 li
283.651 287.765 li
283.651 288.515 li
278.401 288.515 mo
275.401 288.515 li
275.401 287.765 li
278.401 287.765 li
278.401 288.515 li
273.151 288.515 mo
270.151 288.515 li
270.151 287.765 li
273.151 287.765 li
273.151 288.515 li
267.901 288.515 mo
264.901 288.515 li
264.901 287.765 li
267.901 287.765 li
267.901 288.515 li
262.651 288.515 mo
259.651 288.515 li
259.651 287.765 li
262.651 287.765 li
262.651 288.515 li
257.401 288.515 mo
254.401 288.515 li
254.401 287.765 li
257.401 287.765 li
257.401 288.515 li
252.151 288.515 mo
249.151 288.515 li
249.151 287.765 li
252.151 287.765 li
252.151 288.515 li
246.901 288.515 mo
243.901 288.515 li
243.901 287.765 li
246.901 287.765 li
246.901 288.515 li
241.651 288.515 mo
238.651 288.515 li
238.651 287.765 li
241.651 287.765 li
241.651 288.515 li
236.401 288.515 mo
233.401 288.515 li
233.401 287.765 li
236.401 287.765 li
236.401 288.515 li
231.151 288.515 mo
228.151 288.515 li
228.151 287.765 li
231.151 287.765 li
231.151 288.515 li
225.901 288.515 mo
222.901 288.515 li
222.901 287.765 li
225.901 287.765 li
225.901 288.515 li
220.651 288.515 mo
217.651 288.515 li
217.651 287.765 li
220.651 287.765 li
220.651 288.515 li
215.401 288.515 mo
212.401 288.515 li
212.401 287.765 li
215.401 287.765 li
215.401 288.515 li
210.151 288.515 mo
207.151 288.515 li
207.151 287.765 li
210.151 287.765 li
210.151 288.515 li
204.901 288.515 mo
201.901 288.515 li
201.901 287.765 li
204.901 287.765 li
204.901 288.515 li
199.651 288.515 mo
196.651 288.515 li
196.651 287.765 li
199.651 287.765 li
199.651 288.515 li
194.401 288.515 mo
191.401 288.515 li
191.401 287.765 li
194.401 287.765 li
194.401 288.515 li
189.151 288.515 mo
186.151 288.515 li
186.151 287.765 li
189.151 287.765 li
189.151 288.515 li
183.901 288.515 mo
180.901 288.515 li
180.901 287.765 li
183.901 287.765 li
183.901 288.515 li
178.651 288.515 mo
175.651 288.515 li
175.651 287.765 li
178.651 287.765 li
178.651 288.515 li
173.401 288.515 mo
170.401 288.515 li
170.401 287.765 li
173.401 287.765 li
173.401 288.515 li
168.151 288.515 mo
165.151 288.515 li
165.151 287.765 li
168.151 287.765 li
168.151 288.515 li
162.901 288.515 mo
159.901 288.515 li
159.901 287.765 li
162.901 287.765 li
162.901 288.515 li
.00392157 .831372 .831372 .168627 cmyk
f
154.651 288.075 mo
154.651 287.765 li
155.505 287.765 li
155.505 287.998 li
154.651 288.075 li
156.255 287.93 mo
156.255 287.765 li
157.651 287.765 li
157.651 287.803 li
156.255 287.93 li
.00392157 .337255 .831372 .168627 cmyk
f
157.651 288.515 mo
156.255 288.515 li
156.255 287.93 li
157.651 287.803 li
157.651 288.515 li
155.505 288.515 mo
154.651 288.515 li
154.651 288.075 li
155.505 287.998 li
155.505 288.515 li
.00392157 .831372 .831372 .168627 cmyk
f
155.505 287.998 mo
155.505 287.765 li
156.255 287.765 li
156.255 287.93 li
155.505 287.998 li
.00392157 .278431 .690196 .309804 cmyk
f
156.255 288.515 mo
155.505 288.515 li
155.505 287.998 li
156.255 287.93 li
156.255 288.515 li
.00392157 .690196 .690196 .309804 cmyk
f
152.28 288.289 mo
149.401 288.255 li
149.401 287.765 li
152.402 287.765 li
152.402 288.278 li
152.28 288.289 li
.00392157 .337255 .831372 .168627 cmyk
f
152.402 288.515 mo
149.401 288.515 li
149.401 288.255 li
152.28 288.289 li
152.402 288.278 li
152.402 288.515 li
.00392157 .831372 .831372 .168627 cmyk
f
147.152 288.228 mo
144.152 288.192 li
144.152 287.765 li
147.152 287.765 li
147.152 288.228 li
.00392157 .337255 .831372 .168627 cmyk
f
147.152 288.515 mo
144.152 288.515 li
144.152 288.192 li
147.152 288.228 li
147.152 288.515 li
.00392157 .831372 .831372 .168627 cmyk
f
141.902 288.165 mo
138.902 288.128 li
138.902 287.765 li
141.902 287.765 li
141.902 288.165 li
.00392157 .337255 .831372 .168627 cmyk
f
141.902 288.515 mo
138.902 288.515 li
138.902 288.128 li
141.902 288.165 li
141.902 288.515 li
.00392157 .831372 .831372 .168627 cmyk
f
136.652 288.101 mo
133.651 288.065 li
133.651 287.765 li
136.652 287.765 li
136.652 288.101 li
.00392157 .337255 .831372 .168627 cmyk
f
136.652 288.515 mo
133.651 288.515 li
133.651 288.065 li
136.652 288.101 li
136.652 288.515 li
.00392157 .831372 .831372 .168627 cmyk
f
131.402 288.038 mo
128.402 288.002 li
128.402 287.765 li
131.402 287.765 li
131.402 288.038 li
.00392157 .337255 .831372 .168627 cmyk
f
131.402 288.515 mo
128.402 288.515 li
128.402 288.002 li
131.402 288.038 li
131.402 288.515 li
.00392157 .831372 .831372 .168627 cmyk
f
123.152 288.296 mo
123.152 287.765 li
126.152 287.765 li
126.152 288.078 li
123.152 288.296 li
.00392157 .337255 .831372 .168627 cmyk
f
126.152 288.515 mo
123.152 288.515 li
123.152 288.296 li
126.152 288.078 li
126.152 288.515 li
.00392157 .831372 .831372 .168627 cmyk
f
120.123 288.515 mo
117.902 288.515 li
117.902 287.765 li
120.902 287.765 li
120.902 288.459 li
120.123 288.515 li
.00392157 .337255 .831372 .168627 cmyk
f
120.902 288.515 mo
120.123 288.515 li
120.902 288.459 li
120.902 288.515 li
.00392157 .831372 .831372 .168627 cmyk
f
115.652 288.515 mo
112.652 288.515 li
112.652 287.765 li
115.652 287.765 li
115.652 288.515 li
110.402 288.515 mo
107.402 288.515 li
107.402 287.765 li
110.402 287.765 li
110.402 288.515 li
105.152 288.515 mo
102.152 288.515 li
102.152 287.765 li
105.152 287.765 li
105.152 288.515 li
99.9018 288.515 mo
96.9018 288.515 li
96.9018 287.765 li
99.9018 287.765 li
99.9018 288.515 li
94.6518 288.515 mo
91.6518 288.515 li
91.6518 287.765 li
94.6518 287.765 li
94.6518 288.515 li
89.4018 288.515 mo
86.4018 288.515 li
86.4018 287.765 li
89.4018 287.765 li
89.4018 288.515 li
84.1518 288.515 mo
81.1518 288.515 li
81.1518 287.765 li
84.1518 287.765 li
84.1518 288.515 li
78.9018 288.515 mo
75.9018 288.515 li
75.9018 287.765 li
78.9018 287.765 li
78.9018 288.515 li
73.6519 288.515 mo
70.6519 288.515 li
70.6519 287.765 li
73.6519 287.765 li
73.6519 288.515 li
68.4019 288.515 mo
65.4019 288.515 li
65.4019 287.765 li
68.4019 287.765 li
68.4019 288.515 li
63.1519 288.515 mo
60.1519 288.515 li
60.1519 287.765 li
63.1519 287.765 li
63.1519 288.515 li
57.9019 288.515 mo
54.9019 288.515 li
54.9019 287.765 li
57.9019 287.765 li
57.9019 288.515 li
52.6521 288.515 mo
49.6521 288.515 li
49.6521 287.765 li
52.6521 287.765 li
52.6521 288.515 li
47.402 288.515 mo
44.402 288.515 li
44.402 287.765 li
47.402 287.765 li
47.402 288.515 li
42.1522 288.515 mo
39.1522 288.515 li
39.1522 287.765 li
42.1522 287.765 li
42.1522 288.515 li
36.9022 288.515 mo
33.9022 288.515 li
33.9022 287.765 li
36.9022 287.765 li
36.9022 288.515 li
31.6522 288.515 mo
30.362 288.515 li
30.362 287.765 li
31.6522 287.765 li
31.6522 288.515 li
.00392157 .337255 .831372 .168627 cmyk
f
647.83 234.945 mo
644.83 234.945 li
644.83 234.195 li
647.83 234.195 li
647.83 234.945 li
642.58 234.945 mo
639.58 234.945 li
639.58 234.195 li
642.58 234.195 li
642.58 234.945 li
637.33 234.945 mo
634.33 234.945 li
634.33 234.195 li
637.33 234.195 li
637.33 234.945 li
632.08 234.945 mo
629.08 234.945 li
629.08 234.195 li
632.08 234.195 li
632.08 234.945 li
626.83 234.945 mo
623.83 234.945 li
623.83 234.195 li
626.83 234.195 li
626.83 234.945 li
621.58 234.945 mo
618.58 234.945 li
618.58 234.195 li
621.58 234.195 li
621.58 234.945 li
616.33 234.945 mo
613.33 234.945 li
613.33 234.195 li
616.33 234.195 li
616.33 234.945 li
611.08 234.945 mo
608.08 234.945 li
608.08 234.195 li
611.08 234.195 li
611.08 234.945 li
.00392157 .831372 .831372 .168627 cmyk
f
602.83 234.734 mo
602.83 234.195 li
605.83 234.195 li
605.83 234.327 li
602.83 234.734 li
.00392157 .337255 .831372 .168627 cmyk
f
605.83 234.945 mo
602.83 234.945 li
602.83 234.734 li
605.83 234.327 li
605.83 234.945 li
.00392157 .831372 .831372 .168627 cmyk
f
600.58 234.945 mo
597.58 234.945 li
597.58 234.195 li
600.58 234.195 li
600.58 234.945 li
595.33 234.945 mo
592.33 234.945 li
592.33 234.195 li
595.33 234.195 li
595.33 234.945 li
590.08 234.945 mo
587.08 234.945 li
587.08 234.195 li
590.08 234.195 li
590.08 234.945 li
584.83 234.945 mo
581.83 234.945 li
581.83 234.195 li
584.83 234.195 li
584.83 234.945 li
579.58 234.945 mo
576.58 234.945 li
576.58 234.195 li
579.58 234.195 li
579.58 234.945 li
574.33 234.945 mo
571.33 234.945 li
571.33 234.195 li
574.33 234.195 li
574.33 234.945 li
569.08 234.945 mo
566.08 234.945 li
566.08 234.195 li
569.08 234.195 li
569.08 234.945 li
563.83 234.945 mo
560.83 234.945 li
560.83 234.195 li
563.83 234.195 li
563.83 234.945 li
558.58 234.945 mo
555.58 234.945 li
555.58 234.195 li
558.58 234.195 li
558.58 234.945 li
553.33 234.945 mo
550.33 234.945 li
550.33 234.195 li
553.33 234.195 li
553.33 234.945 li
548.08 234.945 mo
545.08 234.945 li
545.08 234.195 li
548.08 234.195 li
548.08 234.945 li
542.83 234.945 mo
539.83 234.945 li
539.83 234.195 li
542.83 234.195 li
542.83 234.945 li
537.58 234.945 mo
534.58 234.945 li
534.58 234.195 li
537.58 234.195 li
537.58 234.945 li
532.33 234.945 mo
529.33 234.945 li
529.33 234.195 li
532.33 234.195 li
532.33 234.945 li
527.08 234.945 mo
524.08 234.945 li
524.08 234.195 li
527.08 234.195 li
527.08 234.945 li
521.83 234.945 mo
518.83 234.945 li
518.83 234.195 li
521.83 234.195 li
521.83 234.945 li
516.58 234.945 mo
513.58 234.945 li
513.58 234.195 li
516.58 234.195 li
516.58 234.945 li
511.33 234.945 mo
508.33 234.945 li
508.33 234.195 li
511.33 234.195 li
511.33 234.945 li
506.08 234.945 mo
503.08 234.945 li
503.08 234.195 li
506.08 234.195 li
506.08 234.945 li
500.83 234.945 mo
497.83 234.945 li
497.83 234.195 li
500.83 234.195 li
500.83 234.945 li
495.58 234.945 mo
492.58 234.945 li
492.58 234.195 li
495.58 234.195 li
495.58 234.945 li
490.33 234.945 mo
487.33 234.945 li
487.33 234.195 li
490.33 234.195 li
490.33 234.945 li
485.08 234.945 mo
482.08 234.945 li
482.08 234.195 li
485.08 234.195 li
485.08 234.945 li
479.83 234.945 mo
476.83 234.945 li
476.83 234.195 li
479.83 234.195 li
479.83 234.945 li
474.58 234.945 mo
471.58 234.945 li
471.58 234.195 li
474.58 234.195 li
474.58 234.945 li
469.33 234.945 mo
466.33 234.945 li
466.33 234.195 li
469.33 234.195 li
469.33 234.945 li
464.08 234.945 mo
461.08 234.945 li
461.08 234.195 li
464.08 234.195 li
464.08 234.945 li
458.83 234.945 mo
455.83 234.945 li
455.83 234.195 li
458.83 234.195 li
458.83 234.945 li
453.58 234.945 mo
450.58 234.945 li
450.58 234.195 li
453.58 234.195 li
453.58 234.945 li
.00392157 .337255 .831372 .168627 cmyk
f
445.33 234.739 mo
445.33 234.195 li
448.33 234.195 li
448.33 234.34 li
445.33 234.739 li
.65098 .184314 0 .168627 cmyk
f
448.33 234.945 mo
445.33 234.945 li
445.33 234.739 li
448.33 234.34 li
448.33 234.945 li
.00392157 .337255 .831372 .168627 cmyk
f
443.08 234.945 mo
440.08 234.945 li
440.08 234.195 li
443.08 234.195 li
443.08 234.945 li
437.83 234.945 mo
434.83 234.945 li
434.83 234.195 li
437.83 234.195 li
437.83 234.945 li
432.58 234.945 mo
429.58 234.945 li
429.58 234.195 li
432.58 234.195 li
432.58 234.945 li
427.33 234.945 mo
424.33 234.945 li
424.33 234.195 li
427.33 234.195 li
427.33 234.945 li
422.08 234.945 mo
419.08 234.945 li
419.08 234.195 li
422.08 234.195 li
422.08 234.945 li
416.83 234.945 mo
413.83 234.945 li
413.83 234.195 li
416.83 234.195 li
416.83 234.945 li
411.58 234.945 mo
408.58 234.945 li
408.58 234.195 li
411.58 234.195 li
411.58 234.945 li
406.33 234.945 mo
403.33 234.945 li
403.33 234.195 li
406.33 234.195 li
406.33 234.945 li
401.08 234.945 mo
398.08 234.945 li
398.08 234.195 li
401.08 234.195 li
401.08 234.945 li
395.83 234.945 mo
392.83 234.945 li
392.83 234.195 li
395.83 234.195 li
395.83 234.945 li
390.58 234.945 mo
387.58 234.945 li
387.58 234.195 li
390.58 234.195 li
390.58 234.945 li
385.33 234.945 mo
382.33 234.945 li
382.33 234.195 li
385.33 234.195 li
385.33 234.945 li
380.08 234.945 mo
377.08 234.945 li
377.08 234.195 li
380.08 234.195 li
380.08 234.945 li
374.83 234.945 mo
371.83 234.945 li
371.83 234.195 li
374.83 234.195 li
374.83 234.945 li
369.58 234.945 mo
366.58 234.945 li
366.58 234.195 li
369.58 234.195 li
369.58 234.945 li
364.33 234.945 mo
361.33 234.945 li
361.33 234.195 li
364.33 234.195 li
364.33 234.945 li
359.08 234.945 mo
356.08 234.945 li
356.08 234.195 li
359.08 234.195 li
359.08 234.945 li
.65098 .184314 0 .168627 cmyk
f
350.83 234.745 mo
350.83 234.195 li
353.83 234.195 li
353.83 234.388 li
351.107 234.724 li
350.83 234.745 li
0 .635294 .831372 .168627 cmyk
f
353.83 234.945 mo
350.83 234.945 li
350.83 234.745 li
351.107 234.724 li
353.83 234.388 li
353.83 234.945 li
.65098 .184314 0 .168627 cmyk
f
348.173 234.945 mo
345.58 234.945 li
345.58 234.195 li
348.58 234.195 li
348.58 234.914 li
348.173 234.945 li
0 .635294 .831372 .168627 cmyk
f
348.58 234.945 mo
348.173 234.945 li
348.58 234.914 li
348.58 234.945 li
.65098 .184314 0 .168627 cmyk
f
343.33 234.945 mo
340.33 234.945 li
340.33 234.195 li
343.33 234.195 li
343.33 234.945 li
0 .635294 .831372 .168627 cmyk
f
335.08 234.507 mo
335.08 234.195 li
338.08 234.195 li
338.08 234.283 li
335.08 234.507 li
1 /1 /CSD get_res sepcs
.333333 sep
f
338.08 234.945 mo
335.08 234.945 li
335.08 234.507 li
338.08 234.283 li
338.08 234.945 li
0 .635294 .831372 .168627 cmyk
f
329.83 234.901 mo
329.83 234.195 li
332.83 234.195 li
332.83 234.676 li
329.83 234.901 li
1 /1 /CSD get_res sepcs
.333333 sep
f
332.83 234.945 mo
329.83 234.945 li
329.83 234.901 li
332.83 234.676 li
332.83 234.945 li
0 .635294 .831372 .168627 cmyk
f
327.58 234.945 mo
324.58 234.945 li
324.58 234.195 li
327.58 234.195 li
327.58 234.945 li
322.331 234.945 mo
319.331 234.945 li
319.331 234.195 li
322.331 234.195 li
322.331 234.945 li
317.081 234.945 mo
314.081 234.945 li
314.081 234.195 li
317.081 234.195 li
317.081 234.945 li
311.831 234.945 mo
308.831 234.945 li
308.831 234.195 li
311.831 234.195 li
311.831 234.945 li
306.581 234.945 mo
303.581 234.945 li
303.581 234.195 li
306.581 234.195 li
306.581 234.945 li
301.331 234.945 mo
298.331 234.945 li
298.331 234.195 li
301.331 234.195 li
301.331 234.945 li
296.081 234.945 mo
293.081 234.945 li
293.081 234.195 li
296.081 234.195 li
296.081 234.945 li
290.831 234.945 mo
287.831 234.945 li
287.831 234.195 li
290.831 234.195 li
290.831 234.945 li
285.581 234.945 mo
282.581 234.945 li
282.581 234.195 li
285.581 234.195 li
285.581 234.945 li
280.331 234.945 mo
277.331 234.945 li
277.331 234.195 li
280.331 234.195 li
280.331 234.945 li
275.081 234.945 mo
272.081 234.945 li
272.081 234.195 li
275.081 234.195 li
275.081 234.945 li
269.831 234.945 mo
266.831 234.945 li
266.831 234.195 li
269.831 234.195 li
269.831 234.945 li
264.581 234.945 mo
261.581 234.945 li
261.581 234.195 li
264.581 234.195 li
264.581 234.945 li
259.331 234.945 mo
256.331 234.945 li
256.331 234.195 li
259.331 234.195 li
259.331 234.945 li
254.081 234.945 mo
251.081 234.945 li
251.081 234.195 li
254.081 234.195 li
254.081 234.945 li
248.831 234.945 mo
245.831 234.945 li
245.831 234.195 li
248.831 234.195 li
248.831 234.945 li
243.581 234.945 mo
240.581 234.945 li
240.581 234.195 li
243.581 234.195 li
243.581 234.945 li
238.331 234.945 mo
235.331 234.945 li
235.331 234.195 li
238.331 234.195 li
238.331 234.945 li
233.081 234.945 mo
230.081 234.945 li
230.081 234.195 li
233.081 234.195 li
233.081 234.945 li
227.832 234.945 mo
224.832 234.945 li
224.832 234.195 li
227.832 234.195 li
227.832 234.945 li
222.582 234.945 mo
219.582 234.945 li
219.582 234.195 li
222.582 234.195 li
222.582 234.945 li
217.332 234.945 mo
214.332 234.945 li
214.332 234.195 li
217.332 234.195 li
217.332 234.945 li
212.082 234.945 mo
209.082 234.945 li
209.082 234.195 li
212.082 234.195 li
212.082 234.945 li
206.832 234.945 mo
203.832 234.945 li
203.832 234.195 li
206.832 234.195 li
206.832 234.945 li
201.582 234.945 mo
198.582 234.945 li
198.582 234.195 li
201.582 234.195 li
201.582 234.945 li
196.332 234.945 mo
193.332 234.945 li
193.332 234.195 li
196.332 234.195 li
196.332 234.945 li
191.082 234.945 mo
188.082 234.945 li
188.082 234.195 li
191.082 234.195 li
191.082 234.945 li
185.832 234.945 mo
182.832 234.945 li
182.832 234.195 li
185.832 234.195 li
185.832 234.945 li
180.582 234.945 mo
177.582 234.945 li
177.582 234.195 li
180.582 234.195 li
180.582 234.945 li
175.332 234.945 mo
172.332 234.945 li
172.332 234.195 li
175.332 234.195 li
175.332 234.945 li
170.082 234.945 mo
167.082 234.945 li
167.082 234.195 li
170.082 234.195 li
170.082 234.945 li
164.832 234.945 mo
161.832 234.945 li
161.832 234.195 li
164.832 234.195 li
164.832 234.945 li
159.582 234.945 mo
156.582 234.945 li
156.582 234.195 li
159.582 234.195 li
159.582 234.945 li
154.332 234.945 mo
151.332 234.945 li
151.332 234.195 li
154.332 234.195 li
154.332 234.945 li
149.082 234.945 mo
146.082 234.945 li
146.082 234.195 li
149.082 234.195 li
149.082 234.945 li
143.832 234.945 mo
140.832 234.945 li
140.832 234.195 li
143.832 234.195 li
143.832 234.945 li
138.582 234.945 mo
135.582 234.945 li
135.582 234.195 li
138.582 234.195 li
138.582 234.945 li
133.332 234.945 mo
130.332 234.945 li
130.332 234.195 li
133.332 234.195 li
133.332 234.945 li
128.082 234.945 mo
125.082 234.945 li
125.082 234.195 li
128.082 234.195 li
128.082 234.945 li
122.832 234.945 mo
119.832 234.945 li
119.832 234.195 li
122.832 234.195 li
122.832 234.945 li
117.582 234.945 mo
114.582 234.945 li
114.582 234.195 li
117.582 234.195 li
117.582 234.945 li
112.333 234.945 mo
109.333 234.945 li
109.333 234.195 li
112.333 234.195 li
112.333 234.945 li
107.083 234.945 mo
104.083 234.945 li
104.083 234.195 li
107.083 234.195 li
107.083 234.945 li
101.833 234.945 mo
98.8327 234.945 li
98.8327 234.195 li
101.833 234.195 li
101.833 234.945 li
96.5827 234.945 mo
93.5827 234.945 li
93.5827 234.195 li
96.5827 234.195 li
96.5827 234.945 li
91.3328 234.945 mo
88.3328 234.945 li
88.3328 234.195 li
91.3328 234.195 li
91.3328 234.945 li
86.0828 234.945 mo
83.0828 234.945 li
83.0828 234.195 li
86.0828 234.195 li
86.0828 234.945 li
80.8328 234.945 mo
77.8328 234.945 li
77.8328 234.195 li
80.8328 234.195 li
80.8328 234.945 li
75.5828 234.945 mo
72.583 234.945 li
72.583 234.195 li
75.5828 234.195 li
75.5828 234.945 li
70.333 234.945 mo
67.333 234.945 li
67.333 234.195 li
70.333 234.195 li
70.333 234.945 li
65.083 234.945 mo
62.083 234.945 li
62.083 234.195 li
65.083 234.195 li
65.083 234.945 li
59.8331 234.945 mo
56.8331 234.945 li
56.8331 234.195 li
59.8331 234.195 li
59.8331 234.945 li
54.5831 234.945 mo
51.5831 234.945 li
51.5831 234.195 li
54.5831 234.195 li
54.5831 234.945 li
49.3331 234.945 mo
46.3331 234.945 li
46.3331 234.195 li
49.3331 234.195 li
49.3331 234.945 li
44.0831 234.945 mo
41.0833 234.945 li
41.0833 234.195 li
44.0831 234.195 li
44.0831 234.945 li
38.8333 234.945 mo
35.8333 234.945 li
35.8333 234.195 li
38.8333 234.195 li
38.8333 234.945 li
33.5833 234.945 mo
30.5833 234.945 li
30.5833 234.195 li
33.5833 234.195 li
33.5833 234.945 li
1 /1 /CSD get_res sepcs
.333333 sep
f
28.0001 234.945 mo
27.0399 234.945 li
27.0399 234.195 li
28.0001 234.195 li
28.0001 234.945 li
1 /1 /CSD get_res sepcs
.168627 sep
f
28.3334 234.945 mo
28.0001 234.945 li
28.0001 234.195 li
28.3334 234.195 li
28.3334 234.945 li
1 /1 /CSD get_res sepcs
.333333 sep
f
282.19 127.44 mo
402.66 127.44 li
402.66 124.605 li
282.19 124.605 li
282.19 127.44 li
1 /0 /CSD get_res sepcs
0 sep
ef
282.19 127.44 mo
282.19 126.44 li
401.66 126.44 li
401.66 125.605 li
283.19 125.605 li
283.19 127.44 li
282.19 127.44 li
282.19 126.44 li
282.19 127.44 li
281.19 127.44 li
281.19 124.605 li
281.19 124.342 281.297 124.084 281.483 123.898 cv
281.669 123.712 281.927 123.605 282.19 123.605 cv
402.66 123.605 li
402.923 123.605 403.181 123.712 403.367 123.898 cv
403.553 124.084 403.66 124.342 403.66 124.605 cv
403.66 127.44 li
403.66 127.703 403.553 127.961 403.367 128.147 cv
403.181 128.333 402.923 128.44 402.66 128.44 cv
282.19 128.44 li
281.927 128.44 281.669 128.333 281.483 128.147 cv
281.297 127.961 281.19 127.703 281.19 127.44 cv
282.19 127.44 li
f
282.32 101.33 mo
403.64 101.33 li
403.64 98.4954 li
282.32 98.4954 li
cp
ef
282.32 101.33 mo
403.64 101.33 li
403.64 98.4954 li
282.32 98.4954 li
cp
@
405.98 102.11 mo
527.3 102.11 li
527.3 99.2754 li
405.98 99.2754 li
cp
ef
405.98 102.11 mo
527.3 102.11 li
527.3 99.2754 li
405.98 99.2754 li
cp
@
282.19 154.41 mo
402.66 154.41 li
402.66 151.575 li
282.19 151.575 li
cp
ef
282.19 154.41 mo
402.66 154.41 li
402.66 151.575 li
282.19 151.575 li
cp
@
211.8 102.1 mo
279.839 102.1 li
279.839 98.5001 li
211.8 98.5001 li
cp
ef
211.8 102.1 mo
279.839 102.1 li
279.839 98.5001 li
211.8 98.5001 li
cp
@
211.28 127.63 mo
279.319 127.63 li
279.319 124.03 li
211.28 124.03 li
211.28 127.63 li
ef
211.28 127.63 mo
211.28 126.63 li
278.319 126.63 li
278.319 125.03 li
212.28 125.03 li
212.28 127.63 li
211.28 127.63 li
211.28 126.63 li
211.28 127.63 li
210.28 127.63 li
210.28 124.03 li
210.28 123.767 210.387 123.509 210.573 123.323 cv
210.759 123.137 211.017 123.03 211.28 123.03 cv
279.319 123.03 li
279.582 123.03 279.84 123.137 280.026 123.323 cv
280.212 123.509 280.319 123.767 280.319 124.03 cv
280.319 127.63 li
280.319 127.893 280.212 128.151 280.026 128.337 cv
279.84 128.523 279.582 128.63 279.319 128.63 cv
211.28 128.63 li
211.017 128.63 210.759 128.523 210.573 128.337 cv
210.387 128.151 210.28 127.893 210.28 127.63 cv
211.28 127.63 li
f
211.8 155.98 mo
279.839 155.98 li
279.839 152.38 li
211.8 152.38 li
cp
ef
211.8 155.98 mo
279.839 155.98 li
279.839 152.38 li
211.8 152.38 li
cp
@
211.99 180.22 mo
280.029 180.22 li
280.029 176.62 li
211.99 176.62 li
cp
ef
211.99 180.22 mo
211.99 179.22 li
279.029 179.22 li
279.029 177.62 li
212.99 177.62 li
212.99 180.22 li
211.99 180.22 li
211.99 179.22 li
211.99 180.22 li
210.99 180.22 li
210.99 176.62 li
210.99 176.357 211.097 176.099 211.283 175.913 cv
211.469 175.727 211.727 175.62 211.99 175.62 cv
280.029 175.62 li
280.292 175.62 280.55 175.727 280.736 175.913 cv
280.922 176.099 281.029 176.357 281.029 176.62 cv
281.029 180.22 li
281.029 180.483 280.922 180.741 280.736 180.927 cv
280.55 181.113 280.292 181.22 280.029 181.22 cv
211.99 181.22 li
211.727 181.22 211.469 181.113 211.283 180.927 cv
211.097 180.741 210.99 180.483 210.99 180.22 cv
211.99 180.22 li
f
353.33 125.28 mo
473.8 125.28 li
473.8 122.445 li
353.33 122.445 li
353.33 125.28 li
ef
353.33 125.28 mo
353.33 124.28 li
472.8 124.28 li
472.8 123.445 li
354.33 123.445 li
354.33 125.28 li
353.33 125.28 li
353.33 124.28 li
353.33 125.28 li
352.33 125.28 li
352.33 122.445 li
352.33 122.182 352.437 121.925 352.623 121.738 cv
352.809 121.552 353.067 121.445 353.33 121.445 cv
473.8 121.445 li
474.063 121.445 474.321 121.552 474.507 121.738 cv
474.693 121.925 474.8 122.182 474.8 122.445 cv
474.8 125.28 li
474.8 125.543 474.693 125.801 474.507 125.987 cv
474.321 126.173 474.063 126.28 473.8 126.28 cv
353.33 126.28 li
353.067 126.28 352.809 126.173 352.623 125.987 cv
352.437 125.801 352.33 125.543 352.33 125.28 cv
353.33 125.28 li
f
650.25 417.718 mo
698.826 417.718 li
698.826 47.278 li
650.25 47.278 li
cp
ef
650.25 417.718 mo
650.25 416.718 li
697.826 416.718 li
697.826 48.2781 li
651.25 48.2781 li
651.25 417.718 li
650.25 417.718 li
650.25 416.718 li
650.25 417.718 li
649.25 417.718 li
649.25 47.2779 li
649.25 47.0146 649.357 46.757 649.543 46.5708 cv
649.729 46.3847 649.987 46.2781 650.25 46.2781 cv
698.826 46.2781 li
699.089 46.2781 699.347 46.3847 699.533 46.5708 cv
699.719 46.757 699.826 47.0148 699.826 47.2779 cv
699.826 417.718 li
699.826 417.981 699.719 418.239 699.533 418.425 cv
699.347 418.611 699.089 418.718 698.826 418.718 cv
650.25 418.718 li
649.987 418.718 649.729 418.611 649.543 418.425 cv
649.357 418.239 649.25 417.981 649.25 417.718 cv
650.25 417.718 li
f
529.64 99.28 mo
580.664 99.28 li
580.664 96.4454 li
529.64 96.4454 li
cp
ef
529.64 99.28 mo
580.664 99.28 li
580.664 96.4454 li
529.64 96.4454 li
cp
@
632.16 457.216 mo
669.324 457.216 li
669.324 428.135 li
632.16 428.135 li
cp
ef
1 /0 /CSD get_res sepcs
1 sep
LDOGTY+Calibri*1 [18 0 0 -18 0 0 ]msf
639.46 448.656 mo
(1)sh
LDOGTY+Calibri*1 [18 0 0 -18 0 0 ]msf
648.58 448.656 mo
(3)sh
1 /0 /CSD get_res sepcs
1 sep
LDOGTY+Calibri*1 [18 0 0 -18 0 0 ]msf
657.7 448.656 mo
( )sh
405.94 126.09 mo
475.389 126.09 li
475.389 121.62 li
405.94 121.62 li
405.94 126.09 li
1 /0 /CSD get_res sepcs
0 sep
ef
405.94 126.09 mo
405.94 125.09 li
474.389 125.09 li
474.389 122.62 li
406.94 122.62 li
406.94 126.09 li
405.94 126.09 li
405.94 125.09 li
405.94 126.09 li
404.94 126.09 li
404.94 121.62 li
404.94 121.356 405.047 121.099 405.233 120.913 cv
405.419 120.726 405.677 120.62 405.94 120.62 cv
475.389 120.62 li
475.652 120.62 475.91 120.726 476.096 120.913 cv
476.282 121.099 476.389 121.356 476.389 121.62 cv
476.389 126.09 li
476.389 126.353 476.282 126.611 476.096 126.797 cv
475.91 126.983 475.652 127.09 475.389 127.09 cv
405.94 127.09 li
405.677 127.09 405.419 126.983 405.233 126.797 cv
405.047 126.611 404.94 126.353 404.94 126.09 cv
405.94 126.09 li
f
648.33 126.435 mo
645.33 126.435 li
645.33 125.685 li
648.33 125.685 li
648.33 126.435 li
643.08 126.435 mo
640.08 126.435 li
640.08 125.685 li
643.08 125.685 li
643.08 126.435 li
637.83 126.435 mo
634.83 126.435 li
634.83 125.685 li
637.83 125.685 li
637.83 126.435 li
632.58 126.435 mo
629.58 126.435 li
629.58 125.685 li
632.58 125.685 li
632.58 126.435 li
627.33 126.435 mo
624.33 126.435 li
624.33 125.685 li
627.33 125.685 li
627.33 126.435 li
622.08 126.435 mo
619.08 126.435 li
619.08 125.685 li
622.08 125.685 li
622.08 126.435 li
616.83 126.435 mo
613.83 126.435 li
613.83 125.685 li
616.83 125.685 li
616.83 126.435 li
611.58 126.435 mo
608.58 126.435 li
608.58 125.685 li
611.58 125.685 li
611.58 126.435 li
606.33 126.435 mo
603.33 126.435 li
603.33 125.685 li
606.33 125.685 li
606.33 126.435 li
601.08 126.435 mo
598.08 126.435 li
598.08 125.685 li
601.08 125.685 li
601.08 126.435 li
595.83 126.435 mo
592.83 126.435 li
592.83 125.685 li
595.83 125.685 li
595.83 126.435 li
590.58 126.435 mo
587.58 126.435 li
587.58 125.685 li
590.58 125.685 li
590.58 126.435 li
585.33 126.435 mo
582.33 126.435 li
582.33 125.685 li
585.33 125.685 li
585.33 126.435 li
580.08 126.435 mo
577.08 126.435 li
577.08 125.685 li
580.08 125.685 li
580.08 126.435 li
574.83 126.435 mo
571.83 126.435 li
571.83 125.685 li
574.83 125.685 li
574.83 126.435 li
569.58 126.435 mo
566.58 126.435 li
566.58 125.685 li
569.58 125.685 li
569.58 126.435 li
564.33 126.435 mo
561.33 126.435 li
561.33 125.685 li
564.33 125.685 li
564.33 126.435 li
559.08 126.435 mo
556.08 126.435 li
556.08 125.685 li
559.08 125.685 li
559.08 126.435 li
553.83 126.435 mo
550.83 126.435 li
550.83 125.685 li
553.83 125.685 li
553.83 126.435 li
548.58 126.435 mo
545.58 126.435 li
545.58 125.685 li
548.58 125.685 li
548.58 126.435 li
543.33 126.435 mo
540.33 126.435 li
540.33 125.685 li
543.33 125.685 li
543.33 126.435 li
538.08 126.435 mo
535.08 126.435 li
535.08 125.685 li
538.08 125.685 li
538.08 126.435 li
532.83 126.435 mo
529.83 126.435 li
529.83 125.685 li
532.83 125.685 li
532.83 126.435 li
527.58 126.435 mo
524.58 126.435 li
524.58 125.685 li
527.58 125.685 li
527.58 126.435 li
522.33 126.435 mo
519.33 126.435 li
519.33 125.685 li
522.33 125.685 li
522.33 126.435 li
517.08 126.435 mo
514.08 126.435 li
514.08 125.685 li
517.08 125.685 li
517.08 126.435 li
511.83 126.435 mo
508.83 126.435 li
508.83 125.685 li
511.83 125.685 li
511.83 126.435 li
506.58 126.435 mo
503.58 126.435 li
503.58 125.685 li
506.58 125.685 li
506.58 126.435 li
501.33 126.435 mo
498.33 126.435 li
498.33 125.685 li
501.33 125.685 li
501.33 126.435 li
496.08 126.435 mo
493.08 126.435 li
493.08 125.685 li
496.08 125.685 li
496.08 126.435 li
490.83 126.435 mo
487.83 126.435 li
487.83 125.685 li
490.83 125.685 li
490.83 126.435 li
485.58 126.435 mo
482.58 126.435 li
482.58 125.685 li
485.58 125.685 li
485.58 126.435 li
1 /1 /CSD get_res sepcs
.333333 sep
f
477.33 126.047 mo
477.33 125.685 li
478.445 125.685 li
477.33 126.047 li
1 /1 /CSD get_res sepcs
.168627 sep
f
480.33 126.435 mo
477.33 126.435 li
477.33 126.047 li
478.445 125.685 li
480.33 125.685 li
480.33 126.435 li
1 /1 /CSD get_res sepcs
.333333 sep
f
405.002 126.435 mo
404.955 126.435 li
404.955 126.28 li
404.958 126.28 li
404.969 126.333 404.983 126.385 405.002 126.435 cv
404.205 126.435 mo
403.83 126.435 li
403.83 126.28 li
404.205 126.28 li
404.205 126.435 li
1 /1 /CSD get_res sepcs
1 sep
f
404.955 126.435 mo
404.205 126.435 li
404.205 126.28 li
404.955 126.28 li
404.955 126.435 li
f
404.958 126.28 mo
404.955 126.28 li
404.205 126.28 li
403.83 126.28 li
403.83 125.685 li
404.94 125.685 li
404.94 126.09 li
405.94 126.09 li
404.94 126.09 li
404.94 126.154 404.946 126.218 404.958 126.28 cv
1 /1 /CSD get_res sepcs
.168627 sep
f
401.58 126.435 mo
398.58 126.435 li
398.58 126.28 li
401.58 126.28 li
401.58 126.435 li
f
401.58 126.28 mo
398.58 126.28 li
398.58 125.685 li
401.58 125.685 li
401.58 126.28 li
f
396.33 126.435 mo
393.33 126.435 li
393.33 126.28 li
396.33 126.28 li
396.33 126.435 li
f
396.33 126.28 mo
393.33 126.28 li
393.33 125.685 li
396.33 125.685 li
396.33 126.28 li
f
391.08 126.435 mo
388.08 126.435 li
388.08 126.28 li
391.08 126.28 li
391.08 126.435 li
f
391.08 126.28 mo
388.08 126.28 li
388.08 125.685 li
391.08 125.685 li
391.08 126.28 li
f
385.831 126.435 mo
382.83 126.435 li
382.83 126.28 li
385.831 126.28 li
385.831 126.435 li
f
385.831 126.28 mo
382.83 126.28 li
382.83 125.685 li
385.831 125.685 li
385.831 126.28 li
f
380.58 126.435 mo
377.581 126.435 li
377.581 126.28 li
380.58 126.28 li
380.58 126.435 li
f
380.58 126.28 mo
377.581 126.28 li
377.581 125.685 li
380.58 125.685 li
380.58 126.28 li
f
375.33 126.435 mo
372.33 126.435 li
372.33 126.28 li
375.33 126.28 li
375.33 126.435 li
f
375.33 126.28 mo
372.33 126.28 li
372.33 125.685 li
375.33 125.685 li
375.33 126.28 li
f
370.081 126.435 mo
367.081 126.435 li
367.081 126.28 li
370.081 126.28 li
370.081 126.435 li
f
370.081 126.28 mo
367.081 126.28 li
367.081 125.685 li
370.081 125.685 li
370.081 126.28 li
f
364.831 126.435 mo
361.831 126.435 li
361.831 126.28 li
364.831 126.28 li
364.831 126.435 li
f
364.831 126.28 mo
361.831 126.28 li
361.831 125.685 li
364.831 125.685 li
364.831 126.28 li
f
359.581 126.435 mo
356.581 126.435 li
356.581 126.28 li
359.581 126.28 li
359.581 126.435 li
f
359.581 126.28 mo
356.581 126.28 li
356.581 125.685 li
359.581 125.685 li
359.581 126.28 li
f
354.331 126.435 mo
351.331 126.435 li
351.331 125.685 li
352.416 125.685 li
352.466 125.797 352.536 125.9 352.623 125.987 cv
352.809 126.173 353.067 126.28 353.33 126.28 cv
354.331 126.28 li
354.331 126.435 li
f
354.331 126.28 mo
353.33 126.28 li
353.067 126.28 352.809 126.173 352.623 125.987 cv
352.536 125.9 352.466 125.797 352.416 125.685 cv
354.331 125.685 li
354.331 126.28 li
f
349.081 126.435 mo
346.081 126.435 li
346.081 125.685 li
349.081 125.685 li
349.081 126.435 li
343.831 126.435 mo
340.831 126.435 li
340.831 125.685 li
343.831 125.685 li
343.831 126.435 li
338.581 126.435 mo
335.581 126.435 li
335.581 125.685 li
338.581 125.685 li
338.581 126.435 li
333.331 126.435 mo
330.331 126.435 li
330.331 125.685 li
333.331 125.685 li
333.331 126.435 li
328.081 126.435 mo
325.081 126.435 li
325.081 125.685 li
328.081 125.685 li
328.081 126.435 li
322.831 126.435 mo
319.831 126.435 li
319.831 125.685 li
322.831 125.685 li
322.831 126.435 li
317.581 126.435 mo
314.581 126.435 li
314.581 125.685 li
317.581 125.685 li
317.581 126.435 li
312.331 126.435 mo
309.331 126.435 li
309.331 125.685 li
312.331 125.685 li
312.331 126.435 li
307.081 126.435 mo
304.081 126.435 li
304.081 125.685 li
307.081 125.685 li
307.081 126.435 li
301.831 126.435 mo
298.831 126.435 li
298.831 125.685 li
301.831 125.685 li
301.831 126.435 li
296.581 126.435 mo
293.581 126.435 li
293.581 125.685 li
296.581 125.685 li
296.581 126.435 li
291.331 126.435 mo
288.331 126.435 li
288.331 125.685 li
291.331 125.685 li
291.331 126.435 li
286.081 126.435 mo
283.19 126.435 li
283.19 125.685 li
286.081 125.685 li
286.081 126.435 li
f
283.19 126.435 mo
283.081 126.435 li
283.081 125.685 li
283.19 125.685 li
283.19 126.435 li
f
280.831 125.97 mo
280.319 125.97 li
280.319 125.685 li
280.831 125.685 li
280.831 125.97 li
f
280.831 126.255 mo
280.319 126.255 li
280.319 125.97 li
280.831 125.97 li
280.831 126.255 li
1 /1 /CSD get_res sepcs
.309804 sep
f
280.831 126.435 mo
280.319 126.435 li
280.319 126.255 li
280.831 126.255 li
280.831 126.435 li
1 /1 /CSD get_res sepcs
1 sep
f
278.319 126.435 mo
277.831 126.435 li
277.831 125.685 li
278.319 125.685 li
278.319 126.435 li
1 /1 /CSD get_res sepcs
.168627 sep
f
280.319 126.435 mo
278.319 126.435 li
278.319 125.685 li
280.319 125.685 li
280.319 125.97 li
280.319 126.255 li
280.319 126.435 li
f
275.581 126.435 mo
272.581 126.435 li
272.581 125.685 li
275.581 125.685 li
275.581 126.435 li
270.331 126.435 mo
267.331 126.435 li
267.331 125.685 li
270.331 125.685 li
270.331 126.435 li
265.081 126.435 mo
262.081 126.435 li
262.081 125.685 li
265.081 125.685 li
265.081 126.435 li
259.831 126.435 mo
256.831 126.435 li
256.831 125.685 li
259.831 125.685 li
259.831 126.435 li
254.581 126.435 mo
251.581 126.435 li
251.581 125.685 li
254.581 125.685 li
254.581 126.435 li
249.331 126.435 mo
246.331 126.435 li
246.331 125.685 li
249.331 125.685 li
249.331 126.435 li
244.081 126.435 mo
241.081 126.435 li
241.081 125.685 li
244.081 125.685 li
244.081 126.435 li
238.831 126.435 mo
235.831 126.435 li
235.831 125.685 li
238.831 125.685 li
238.831 126.435 li
233.581 126.435 mo
230.581 126.435 li
230.581 125.685 li
233.581 125.685 li
233.581 126.435 li
228.331 126.435 mo
225.331 126.435 li
225.331 125.685 li
228.331 125.685 li
228.331 126.435 li
223.081 126.435 mo
220.081 126.435 li
220.081 125.685 li
223.081 125.685 li
223.081 126.435 li
217.831 126.435 mo
214.831 126.435 li
214.831 125.685 li
217.831 125.685 li
217.831 126.435 li
212.581 126.435 mo
212.28 126.435 li
212.28 125.685 li
212.581 125.685 li
212.581 126.435 li
f
212.28 126.435 mo
211.8 126.435 li
211.8 125.685 li
212.28 125.685 li
212.28 126.435 li
f
475.08 126.435 mo
472.08 126.435 li
472.08 125.685 li
475.08 125.685 li
475.08 126.435 li
469.83 126.435 mo
466.83 126.435 li
466.83 125.685 li
469.83 125.685 li
469.83 126.435 li
464.58 126.435 mo
461.58 126.435 li
461.58 125.685 li
464.58 125.685 li
464.58 126.435 li
459.33 126.435 mo
456.33 126.435 li
456.33 125.685 li
459.33 125.685 li
459.33 126.435 li
454.08 126.435 mo
451.08 126.435 li
451.08 125.685 li
454.08 125.685 li
454.08 126.435 li
448.83 126.435 mo
445.83 126.435 li
445.83 125.685 li
448.83 125.685 li
448.83 126.435 li
443.58 126.435 mo
440.58 126.435 li
440.58 125.685 li
443.58 125.685 li
443.58 126.435 li
438.33 126.435 mo
435.33 126.435 li
435.33 125.685 li
438.33 125.685 li
438.33 126.435 li
433.08 126.435 mo
430.08 126.435 li
430.08 125.685 li
433.08 125.685 li
433.08 126.435 li
427.83 126.435 mo
424.83 126.435 li
424.83 125.685 li
427.83 125.685 li
427.83 126.435 li
422.58 126.435 mo
419.58 126.435 li
419.58 125.685 li
422.58 125.685 li
422.58 126.435 li
417.33 126.435 mo
414.33 126.435 li
414.33 125.685 li
417.33 125.685 li
417.33 126.435 li
412.08 126.435 mo
409.08 126.435 li
409.08 125.685 li
412.08 125.685 li
412.08 126.435 li
406.83 126.435 mo
405.002 126.435 li
404.983 126.385 404.969 126.333 404.958 126.28 cv
404.946 126.218 404.94 126.154 404.94 126.09 cv
405.94 126.09 li
404.94 126.09 li
404.94 125.685 li
406.83 125.685 li
406.83 126.435 li
f
212.58 180.31 mo
280.611 180.31 li
280.611 175.84 li
212.58 175.84 li
212.58 180.31 li
1 /0 /CSD get_res sepcs
0 sep
ef
212.58 180.31 mo
212.58 179.31 li
279.611 179.31 li
279.611 176.84 li
213.58 176.84 li
213.58 180.31 li
212.58 180.31 li
212.58 179.31 li
212.58 180.31 li
211.58 180.31 li
211.58 175.84 li
211.58 175.577 211.687 175.319 211.873 175.133 cv
212.059 174.947 212.317 174.84 212.58 174.84 cv
280.611 174.84 li
280.874 174.84 281.132 174.947 281.318 175.133 cv
281.504 175.319 281.611 175.577 281.611 175.84 cv
281.611 180.31 li
281.611 180.573 281.504 180.831 281.318 181.017 cv
281.132 181.203 280.874 181.31 280.611 181.31 cv
212.58 181.31 li
212.317 181.31 212.059 181.203 211.873 181.017 cv
211.687 180.831 211.58 180.573 211.58 180.31 cv
212.58 180.31 li
f
649.12 181.385 mo
646.12 181.385 li
646.12 180.635 li
649.12 180.635 li
649.12 181.385 li
643.87 181.385 mo
640.87 181.385 li
640.87 180.635 li
643.87 180.635 li
643.87 181.385 li
638.62 181.385 mo
635.62 181.385 li
635.62 180.635 li
638.62 180.635 li
638.62 181.385 li
633.37 181.385 mo
630.37 181.385 li
630.37 180.635 li
633.37 180.635 li
633.37 181.385 li
628.12 181.385 mo
625.12 181.385 li
625.12 180.635 li
628.12 180.635 li
628.12 181.385 li
622.87 181.385 mo
619.87 181.385 li
619.87 180.635 li
622.87 180.635 li
622.87 181.385 li
617.62 181.385 mo
614.62 181.385 li
614.62 180.635 li
617.62 180.635 li
617.62 181.385 li
612.37 181.385 mo
609.37 181.385 li
609.37 180.635 li
612.37 180.635 li
612.37 181.385 li
607.12 181.385 mo
604.12 181.385 li
604.12 180.635 li
607.12 180.635 li
607.12 181.385 li
601.87 181.385 mo
598.87 181.385 li
598.87 180.635 li
601.87 180.635 li
601.87 181.385 li
596.62 181.385 mo
593.62 181.385 li
593.62 180.635 li
596.62 180.635 li
596.62 181.385 li
591.37 181.385 mo
588.37 181.385 li
588.37 180.635 li
591.37 180.635 li
591.37 181.385 li
586.12 181.385 mo
583.12 181.385 li
583.12 180.635 li
586.12 180.635 li
586.12 181.385 li
580.87 181.385 mo
577.87 181.385 li
577.87 180.635 li
580.87 180.635 li
580.87 181.385 li
575.62 181.385 mo
572.62 181.385 li
572.62 180.635 li
575.62 180.635 li
575.62 181.385 li
570.37 181.385 mo
567.37 181.385 li
567.37 180.635 li
570.37 180.635 li
570.37 181.385 li
565.12 181.385 mo
562.12 181.385 li
562.12 180.635 li
565.12 180.635 li
565.12 181.385 li
559.87 181.385 mo
556.87 181.385 li
556.87 180.635 li
559.87 180.635 li
559.87 181.385 li
554.62 181.385 mo
551.62 181.385 li
551.62 180.635 li
554.62 180.635 li
554.62 181.385 li
549.37 181.385 mo
546.37 181.385 li
546.37 180.635 li
549.37 180.635 li
549.37 181.385 li
544.12 181.385 mo
541.12 181.385 li
541.12 180.635 li
544.12 180.635 li
544.12 181.385 li
538.87 181.385 mo
535.87 181.385 li
535.87 180.635 li
538.87 180.635 li
538.87 181.385 li
533.62 181.385 mo
530.62 181.385 li
530.62 180.635 li
533.62 180.635 li
533.62 181.385 li
528.37 181.385 mo
525.37 181.385 li
525.37 180.635 li
528.165 180.635 li
528.165 181.07 li
528.37 181.07 li
528.37 181.385 li
1 /1 /CSD get_res sepcs
.333333 sep
f
528.37 181.07 mo
528.165 181.07 li
528.165 180.635 li
528.37 180.635 li
528.37 181.07 li
1 /1 /CSD get_res sepcs
.447059 sep
f
523.12 181.385 mo
520.12 181.385 li
520.12 180.635 li
523.12 180.635 li
523.12 181.385 li
517.87 181.385 mo
514.87 181.385 li
514.87 180.635 li
517.87 180.635 li
517.87 181.385 li
512.62 181.385 mo
509.62 181.385 li
509.62 180.635 li
512.62 180.635 li
512.62 181.385 li
507.37 181.385 mo
504.37 181.385 li
504.37 180.635 li
507.37 180.635 li
507.37 181.385 li
502.12 181.385 mo
499.12 181.385 li
499.12 180.635 li
502.12 180.635 li
502.12 181.385 li
496.87 181.385 mo
493.87 181.385 li
493.87 180.635 li
496.87 180.635 li
496.87 181.385 li
491.62 181.385 mo
488.62 181.385 li
488.62 180.635 li
491.62 180.635 li
491.62 181.385 li
486.37 181.385 mo
483.37 181.385 li
483.37 180.635 li
486.37 180.635 li
486.37 181.385 li
481.12 181.385 mo
478.12 181.385 li
478.12 180.635 li
481.12 180.635 li
481.12 181.385 li
475.87 181.385 mo
472.87 181.385 li
472.87 180.635 li
475.87 180.635 li
475.87 181.385 li
470.62 181.385 mo
467.62 181.385 li
467.62 180.635 li
470.62 180.635 li
470.62 181.385 li
465.37 181.385 mo
462.37 181.385 li
462.37 180.635 li
465.37 180.635 li
465.37 181.385 li
460.12 181.385 mo
457.12 181.385 li
457.12 180.635 li
460.12 180.635 li
460.12 181.385 li
454.87 181.385 mo
451.87 181.385 li
451.87 180.635 li
454.87 180.635 li
454.87 181.385 li
449.62 181.385 mo
446.62 181.385 li
446.62 180.635 li
449.62 180.635 li
449.62 181.385 li
444.37 181.385 mo
441.37 181.385 li
441.37 180.635 li
444.37 180.635 li
444.37 181.385 li
439.12 181.385 mo
436.12 181.385 li
436.12 180.635 li
439.12 180.635 li
439.12 181.385 li
433.87 181.385 mo
430.87 181.385 li
430.87 180.635 li
433.87 180.635 li
433.87 181.385 li
428.62 181.385 mo
425.62 181.385 li
425.62 180.635 li
428.62 180.635 li
428.62 181.385 li
423.37 181.385 mo
420.37 181.385 li
420.37 180.635 li
423.37 180.635 li
423.37 181.385 li
418.12 181.385 mo
415.12 181.385 li
415.12 180.635 li
418.12 180.635 li
418.12 181.385 li
412.87 181.385 mo
409.87 181.385 li
409.87 180.635 li
412.87 180.635 li
412.87 181.385 li
407.62 181.385 mo
404.62 181.385 li
404.62 181.07 li
404.955 181.07 li
404.955 180.635 li
407.62 180.635 li
407.62 181.385 li
1 /1 /CSD get_res sepcs
.333333 sep
f
404.955 181.07 mo
404.62 181.07 li
404.62 180.635 li
404.955 180.635 li
404.955 181.07 li
1 /1 /CSD get_res sepcs
.447059 sep
f
402.37 181.385 mo
399.37 181.385 li
399.37 180.635 li
402.37 180.635 li
402.37 181.385 li
397.12 181.385 mo
394.12 181.385 li
394.12 180.635 li
397.12 180.635 li
397.12 181.385 li
391.87 181.385 mo
388.87 181.385 li
388.87 180.635 li
391.87 180.635 li
391.87 181.385 li
386.62 181.385 mo
383.62 181.385 li
383.62 180.635 li
386.62 180.635 li
386.62 181.385 li
381.37 181.385 mo
378.37 181.385 li
378.37 180.635 li
381.37 180.635 li
381.37 181.385 li
376.12 181.385 mo
373.12 181.385 li
373.12 180.635 li
376.12 180.635 li
376.12 181.385 li
370.87 181.385 mo
367.871 181.385 li
367.871 180.635 li
370.87 180.635 li
370.87 181.385 li
365.621 181.385 mo
362.621 181.385 li
362.621 180.635 li
365.621 180.635 li
365.621 181.385 li
360.371 181.385 mo
357.371 181.385 li
357.371 180.635 li
360.371 180.635 li
360.371 181.385 li
355.121 181.385 mo
352.121 181.385 li
352.121 180.635 li
355.121 180.635 li
355.121 181.385 li
349.871 181.385 mo
346.871 181.385 li
346.871 180.635 li
349.871 180.635 li
349.871 181.385 li
344.621 181.385 mo
341.621 181.385 li
341.621 180.635 li
344.621 180.635 li
344.621 181.385 li
339.371 181.385 mo
336.371 181.385 li
336.371 180.635 li
339.371 180.635 li
339.371 181.385 li
334.121 181.385 mo
331.121 181.385 li
331.121 180.635 li
334.121 180.635 li
334.121 181.385 li
328.871 181.385 mo
325.871 181.385 li
325.871 180.635 li
328.871 180.635 li
328.871 181.385 li
323.621 181.385 mo
320.621 181.385 li
320.621 180.635 li
323.621 180.635 li
323.621 181.385 li
318.371 181.385 mo
315.371 181.385 li
315.371 180.635 li
318.371 180.635 li
318.371 181.385 li
313.121 181.385 mo
310.121 181.385 li
310.121 180.635 li
313.121 180.635 li
313.121 181.385 li
307.871 181.385 mo
304.871 181.385 li
304.871 180.635 li
307.871 180.635 li
307.871 181.385 li
302.621 181.385 mo
299.621 181.385 li
299.621 180.635 li
302.621 180.635 li
302.621 181.385 li
297.371 181.385 mo
294.371 181.385 li
294.371 180.635 li
297.371 180.635 li
297.371 181.385 li
292.121 181.385 mo
289.121 181.385 li
289.121 180.635 li
292.121 180.635 li
292.121 181.385 li
1 /1 /CSD get_res sepcs
.333333 sep
f
284.826 180.789 mo
283.871 180.789 li
283.871 180.635 li
285.768 180.635 li
284.826 180.789 li
1 /1 /CSD get_res sepcs
.168627 sep
f
283.871 180.944 mo
283.871 180.789 li
284.826 180.789 li
283.871 180.944 li
1 /1 /CSD get_res sepcs
1 sep
f
286.871 181.385 mo
283.871 181.385 li
283.871 180.944 li
284.826 180.789 li
285.768 180.635 li
286.871 180.635 li
286.871 181.385 li
1 /1 /CSD get_res sepcs
.333333 sep
f
281.164 181.385 mo
280.995 181.385 li
280.995 181.233 li
281.082 181.196 281.165 181.148 281.239 181.088 cv
281.621 181.088 li
281.621 181.311 li
281.164 181.385 li
280.245 181.385 mo
278.621 181.385 li
278.621 181.31 li
280.245 181.31 li
280.245 181.385 li
281.621 180.789 mo
281.488 180.789 li
281.515 180.739 281.538 180.688 281.556 180.635 cv
281.621 180.635 li
281.621 180.789 li
1 /1 /CSD get_res sepcs
.168627 sep
f
281.621 181.088 mo
281.239 181.088 li
281.266 181.066 281.293 181.042 281.318 181.017 cv
281.386 180.949 281.443 180.872 281.488 180.789 cv
281.621 180.789 li
281.621 181.088 li
1 /1 /CSD get_res sepcs
1 sep
f
281.621 181.385 mo
281.164 181.385 li
281.621 181.311 li
281.621 181.385 li
1 /1 /CSD get_res sepcs
.333333 sep
f
280.995 181.385 mo
280.245 181.385 li
280.245 181.31 li
280.611 181.31 li
280.743 181.31 280.874 181.283 280.995 181.233 cv
280.995 181.385 li
1 /1 /CSD get_res sepcs
.309804 sep
f
276.371 181.385 mo
273.371 181.385 li
273.371 181.31 li
276.371 181.31 li
276.371 181.385 li
271.121 181.385 mo
268.121 181.385 li
268.121 181.31 li
271.121 181.31 li
271.121 181.385 li
265.871 181.385 mo
262.871 181.385 li
262.871 181.31 li
265.871 181.31 li
265.871 181.385 li
260.621 181.385 mo
257.621 181.385 li
257.621 181.31 li
260.621 181.31 li
260.621 181.385 li
255.371 181.385 mo
252.371 181.385 li
252.371 181.31 li
255.371 181.31 li
255.371 181.385 li
250.121 181.385 mo
247.121 181.385 li
247.121 181.31 li
250.121 181.31 li
250.121 181.385 li
244.871 181.385 mo
241.872 181.385 li
241.872 181.31 li
244.871 181.31 li
244.871 181.385 li
239.622 181.385 mo
236.622 181.385 li
236.622 181.31 li
239.622 181.31 li
239.622 181.385 li
234.372 181.385 mo
231.372 181.385 li
231.372 181.31 li
234.372 181.31 li
234.372 181.385 li
229.122 181.385 mo
226.122 181.385 li
226.122 181.31 li
229.122 181.31 li
229.122 181.385 li
223.872 181.385 mo
220.872 181.385 li
220.872 181.31 li
223.872 181.31 li
223.872 181.385 li
218.622 181.385 mo
215.622 181.385 li
215.622 181.31 li
218.622 181.31 li
218.622 181.385 li
213.372 181.385 mo
212.582 181.385 li
212.582 181.31 li
213.372 181.31 li
213.372 181.385 li
1 /1 /CSD get_res sepcs
.168627 sep
f
212.582 181.385 mo
212.58 181.385 li
212.58 181.31 li
212.582 181.385 li
f
280.611 181.31 mo
280.245 181.31 li
278.621 181.31 li
278.621 180.635 li
281.556 180.635 li
281.538 180.688 281.515 180.739 281.488 180.789 cv
281.443 180.872 281.386 180.949 281.318 181.017 cv
281.293 181.042 281.266 181.066 281.239 181.088 cv
281.165 181.148 281.082 181.196 280.995 181.233 cv
280.874 181.283 280.743 181.31 280.611 181.31 cv
276.371 181.31 mo
273.371 181.31 li
273.371 180.635 li
276.371 180.635 li
276.371 181.31 li
271.121 181.31 mo
268.121 181.31 li
268.121 180.635 li
271.121 180.635 li
271.121 181.31 li
265.871 181.31 mo
262.871 181.31 li
262.871 180.635 li
265.871 180.635 li
265.871 181.31 li
260.621 181.31 mo
257.621 181.31 li
257.621 180.635 li
260.621 180.635 li
260.621 181.31 li
255.371 181.31 mo
252.371 181.31 li
252.371 180.635 li
255.371 180.635 li
255.371 181.31 li
250.121 181.31 mo
247.121 181.31 li
247.121 180.635 li
250.121 180.635 li
250.121 181.31 li
244.871 181.31 mo
241.872 181.31 li
241.872 180.635 li
244.871 180.635 li
244.871 181.31 li
239.622 181.31 mo
236.622 181.31 li
236.622 180.635 li
239.622 180.635 li
239.622 181.31 li
234.372 181.31 mo
231.372 181.31 li
231.372 180.635 li
234.372 180.635 li
234.372 181.31 li
229.122 181.31 mo
226.122 181.31 li
226.122 180.635 li
229.122 180.635 li
229.122 181.31 li
223.872 181.31 mo
220.872 181.31 li
220.872 180.635 li
223.872 180.635 li
223.872 181.31 li
218.622 181.31 mo
215.622 181.31 li
215.622 180.635 li
218.622 180.635 li
218.622 181.31 li
213.372 181.31 mo
212.58 181.31 li
212.58 180.635 li
213.372 180.635 li
213.372 181.31 li
f
682.4 435.573 mo
690.868 435.573 li
690.868 426.003 li
682.4 426.003 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
682.4 435.573 mo
690.868 435.573 li
690.868 426.003 li
682.4 426.003 li
cp
@
659.34 356.13 mo
710.369 356.13 li
710.369 327.049 li
659.34 327.049 li
cp
ef
.75 lw
659.34 356.13 mo
710.369 356.13 li
710.369 327.049 li
659.34 327.049 li
cp
@
1 /0 /CSD get_res sepcs
1 sep
LDOGTY+Calibri*1 [18 0 0 -18 0 0 ]msf
666.65 347.54 mo
(3000)
[9.12006 9.12006 9.12012 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
LDOGTY+Calibri*1 [18 0 0 -18 0 0 ]msf
703.13 347.54 mo
( )sh
658.56 301.78 mo
709.589 301.78 li
709.589 272.699 li
658.56 272.699 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
658.56 301.78 mo
709.589 301.78 li
709.589 272.699 li
658.56 272.699 li
cp
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: GFNBAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GFNBAA+Calibri gcheck setglobal} if
3 1568 1009 <00010065ffed0396050e003e00c1400d27370127360126080126030140b8
ffc0b60f024d60400137b8ffe8b310014d37b8fff0b40b0d014c37ba0211
0028ffc0402810014d28400f014d280e4f326f327f3203321d1810014d1d
100f014d1d100c0d014c1d200b014d1dba02330000ffe8b30f024d00b8ff
c0b50f014d004013b8ffc0b70f10014c13131836b8012c400c2c3af42022
012222052c5118b8010bb10556003fed3f12392f5ded10ed11392f2b0110
d62b2be12b2b2b2bc45dd4d42b2be12b2b31305d2b005d5d015d5d01140e
0223222e0635343e0233321e0233323e0235342e02232206232226351134
363321321e02151406232111363633321e0203964680b16c3c6c54360f06
050203080b070a2a4769484370512e27517c563d58261c181f1d023d080f
0a051412fe1d2349306fa66f3901a068a26f3a1119180e0c111a12111b11
08191d1a2044674a3e5f3f1f0c1a25020f212009121c132428fe95050235
618a>GFNBAA+Calibri AddT42Char 
GFNBAA+Calibri /CharStrings get begin
/five 1009 def
end
GFNBAA+Calibri /Encoding get
dup 53 /five put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/LDOGTY+Calibri*1 
[32{/.notdef}rp /space 15{/.notdef}rp /zero /one /.notdef /three /.notdef 
/five 2{/.notdef}rp /eight /nine 9{/.notdef}rp /C 4{/.notdef}rp /H 
4{/.notdef}rp /M /N /O /P /.notdef /R 14{/.notdef}rp 
/a /b /c /d /e /.notdef /g /.notdef 
/i 2{/.notdef}rp /l /m /n /o /p /q 
/r /s /t /u /v /w /.notdef /y 
134{/.notdef}rp]
LDOGTY+Calibri nf
LDOGTY+Calibri*1 [18 0 0 -18 0 0 ]msf
665.86 293.18 mo
(5)sh
LDOGTY+Calibri*1 [18 0 0 -18 0 0 ]msf
675 293.18 mo
(000)
[9.14404 9.1441 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
LDOGTY+Calibri*1 [18 0 0 -18 0 0 ]msf
702.36 293.18 mo
( )sh
659.34 248.99 mo
710.369 248.99 li
710.369 219.909 li
659.34 219.909 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
659.34 248.99 mo
710.369 248.99 li
710.369 219.909 li
659.34 219.909 li
cp
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: GFNBAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GFNBAA+Calibri gcheck setglobal} if
3 1946 1011 <00010063fffa03af050e001f00d7b90011ffe8400a1121014c111010014d
11b8ffe8b30f014d11b8fff0b30d014d11b8ffe8b30c014d11b8fff8400a
0b014d74110126110110b8ffe8400a1121014c101010014d10b8ffe8b30f
014d10b8fff0b30d014d10b8ffe8400b0b0c014c75100126100106b8fff0
b30b014d21b8ffc0b60f024d60210100b8ffc0b310014d00b8ffd8b40b01
4d0015b8ffc0b30c014d15b8ffe8b30b014d15b8ffe8b30f014d15b8ffe0
b50f024d150511b8012db31a510b55003f3fed32012f2b2b2b2bcd2b2b31
305d2b2b5d5d2b2b2b2b2b5d5d2b2b2b2b2b2b01140e0207010e03232226
2636370121222635343e023321321e0203af03050906fe2e050f17241a22
2611020601eafd931313050a0e0902f20e150b0604c4121d1b190efbce0c
0f0903060d130d044a2824131c130906121c>GFNBAA+Calibri AddT42Char 
GFNBAA+Calibri /CharStrings get begin
/seven 1011 def
end
GFNBAA+Calibri /Encoding get
dup 55 /seven put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/LDOGTY+Calibri*1 
[32{/.notdef}rp /space 15{/.notdef}rp /zero /one /.notdef /three /.notdef 
/five /.notdef /seven /eight /nine 9{/.notdef}rp /C 4{/.notdef}rp 
/H 4{/.notdef}rp /M /N /O /P /.notdef /R 
14{/.notdef}rp /a /b /c /d /e /.notdef /g 
/.notdef /i 2{/.notdef}rp /l /m /n /o /p 
/q /r /s /t /u /v /w /.notdef 
/y 134{/.notdef}rp]
LDOGTY+Calibri nf
LDOGTY+Calibri*1 [18 0 0 -18 0 0 ]msf
666.65 240.38 mo
(7000)
[9.12006 9.12006 9.12012 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
LDOGTY+Calibri*1 [18 0 0 -18 0 0 ]msf
703.13 240.38 mo
( )sh
659.34 194.64 mo
715.257 194.64 li
715.257 165.559 li
659.34 165.559 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
659.34 194.64 mo
715.257 194.64 li
715.257 165.559 li
659.34 165.559 li
cp
@
1 /0 /CSD get_res sepcs
1 sep
LDOGTY+Calibri*1 [18.024 0 0 -18.024 0 0 ]msf
666.65 186.02 mo
(9000)
[9.12006 9.12 9.12006 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
LDOGTY+Calibri*1 [18.024 0 0 -18.024 0 0 ]msf
703.13 186.02 mo
( )sh
649.17 139.7 mo
717.656 139.7 li
717.656 110.619 li
649.17 110.619 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
649.17 139.7 mo
717.656 139.7 li
717.656 110.619 li
649.17 110.619 li
cp
@
1 /0 /CSD get_res sepcs
1 sep
LDOGTY+Calibri*1 [18 0 0 -18 0 0 ]msf
656.47 131.06 mo
(11000)
[9.12006 9.12006 9.12012 9.12006 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
LDOGTY+Calibri*1 [18 0 0 -18 0 0 ]msf
702.07 131.06 mo
( )sh
651.03 85.64 mo
719.218 85.64 li
719.218 56.559 li
651.03 56.559 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
651.03 85.64 mo
719.218 85.64 li
719.218 56.559 li
651.03 56.559 li
cp
@
1 /0 /CSD get_res sepcs
1 sep
LDOGTY+Calibri*1 [18.024 0 0 -18.024 0 0 ]msf
658.34 76.99 mo
(13000)
[9.12006 9.12 9.12006 9.12006 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
LDOGTY+Calibri*1 [18.024 0 0 -18.024 0 0 ]msf
703.94 76.99 mo
( )sh
659.34 408.582 mo
710.369 408.582 li
710.369 379.501 li
659.34 379.501 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
659.34 408.582 mo
710.369 408.582 li
710.369 379.501 li
659.34 379.501 li
cp
@
1 /0 /CSD get_res sepcs
1 sep
LDOGTY+Calibri*1 [18 0 0 -18 0 0 ]msf
666.65 400.008 mo
(1)sh
LDOGTY+Calibri*1 [18 0 0 -18 0 0 ]msf
675.77 400.008 mo
(000)
[9.12006 9.12006 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
LDOGTY+Calibri*1 [18 0 0 -18 0 0 ]msf
703.13 400.008 mo
( )sh
530.1 99.91 mo
575.454 99.91 li
575.454 97.0754 li
530.1 97.0754 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
2 lw
530.1 99.91 mo
575.454 99.91 li
575.454 97.0754 li
530.1 97.0754 li
cp
@
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 /1 ]]
] del_res
/LDOGTY+Calibri*1 uf
/LDOGTY+Calibri uf
/GFNBAA+Calibri uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
